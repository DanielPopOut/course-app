{"version":3,"sources":["modal/ModalService.js","components/DanielComponent/Modal/ModalComponent.js","components/DataManagerComponent/DataModelsComponent.js","server/SERVER_CONST.js","server/axiosInstance.js","server/ServerService.js","components/HelperComponent/FormHelper.js","components/DanielComponent/FormCreator/BasicFormCreatorComponent.js","components/DanielComponent/DataArray/DataArrayComponent.js","components/DanielComponent/DataManagerPage/DataManagerPage.js","components/StaticFunctionsComponent/StaticFunctions.js","components/UsersComponent/Users.js","components/ConnexionComponent/PasswordRecovery.js","components/ConnexionComponent/ConnexionComponent.js","history.js","components/ConnexionComponent/Connexion.js","components/NavbarComponent/NavBar.js","components/WelcomeComponent/Welcome.js","components/CoursesComponent/RegisterForCourse.js","components/CoursesComponent/Courses.js","components/CoursesComponent/NewTeacher.js","components/CoursesComponent/CourseCreation.js","components/CoursesComponent/NavCourse.js","components/CoursesComponent/Course.js","components/DanielComponent/QuillComponent/QuillComponent.js","components/ContactsComponent/ContactsComponent.js","components/UsersComponent/UserProfile.js","components/MCQsComponent/CourseNavigator.js","components/MCQsComponent/MCQHelpComponent.js","components/MCQsComponent/MCQsComponent.js","components/MCQsComponent/TestComponent.js","components/MCQsComponent/MCQSManagerComponent.js","components/CoursesAdministrationComponent/Levels.js","components/CoursesAdministrationComponent/Specialities.js","components/CoursesAdministrationComponent/Departments.js","components/CoursesAdministrationComponent/CoursesAdministration.js","components/ContactsComponent/ContactsAdministration.js","App.js","serviceWorker.js","index.js"],"names":["modalToShow","Subject","modalToShow$","asObservable","ModalComponent","props","react_default","a","createElement","className","visible","style","zIndex","position","onClick","onClose","e","stopPropagation","children","onValidate","then","ModalComponent2","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","componentToShow","modalVisibility","modalComponentProps","subscribe","hideModal","setState","inherits","createClass","key","value","console","log","_this2","assign","Component","usersModel","collection","fields","name","type","placeholder","label","departmentsModel","required","specialitiesModel","levels","TOKEN","userLogged","userLogged$","messageToShow","messageToShow$","urlRedirection","urlRedirection$","setLoggedIn","bool","next","setToken","token","localStorage","setItem","JSON","stringify","getToken","getItem","getDecodedToken","length","parse","window","atob","split","displayMessage","message","arguments","undefined","axiosInstance","axios","create","baseURL","process","interceptors","request","use","config","accessToken","method","headers","authorization","error","Promise","reject","response","data","status","responseURL","indexOf","ServerService","userCredentials","postToServer","URL_PATH","obj","post","patch","put","obj_id","delete","get","_ref","_ref$projection","projection","_ref$sort","sort","_ref$limit","limit","_ref$collection","filter","objectWithoutProperties","dataToShow","_insertElementInDataBase","asyncToGenerator","regenerator_default","mark","_callee","element","wrap","_context","prev","sent","abrupt","_id","stop","_x","_x2","apply","_updateElementInDataBase","_callee2","update","_context2","_x3","_x4","_x5","LabelHelper","CheckBoxHelper","checked","readOnly","onChange","id","checkbox_id","handleChange","TextareaHelper","_Component2","_this3","target","_this4","InputTextHelper","_Component3","_this5","_this6","autoFocus","SelectHelper","_Component4","_this7","defaultValue","empty","options","map","elt","display","ButtonHelper","_Component5","ListFromModelHelper","_Component6","_this8","dataToSend","_this9","FormHelper","_Component7","_this10","collectionName","newdata","defineProperty","registration_path","handleValidation","alert","errorMessage","_this11","onChangeCallBack","onClickCallBack","handleClick","title","FormHelper_InputTextHelper","FormHelper_ButtonHelper","FormHelper_SelectHelper","FormHelper_ListFromModelHelper","FormHelper_TextareaHelper","modificationForm","InputHelper","_Component8","params","_this12","renderfield","BasicFormCreatorComponent","dataToSendModel","dataModel","reduce","total","cur","event","dataToSendCopy","dataModelElement","inputparams","FormHelper_InputHelper","modifyData","Fragment","onDelete","onModify","onKeyPress","onEnterClick","createForm","buttons","DataArrayComponent","modalComponentChild","arrayObject","allKeysInOneObject","_arr","keys","_i","onElementClick","newBasicFormCreatorComponent","DanielComponent_FormCreator_BasicFormCreatorComponent","answer","updateElement","setModalVisibility","_ref2","deleteElement","allFields","getAllFields","tableToShow","allColumnElement","field","step","allFieldsColumn","Modal_ModalComponent","createShowDataTable","DataManagerPage","retrieveDataOnServer","addElementToList","newDataToShowList","toConsumableArray","concat","elementUpdated","elementIndex","findIndex","x","splice","marginBottom","fontSize","fontWeight","insertElementInDataBase","DanielComponent_DataArray_DataArrayComponent","elementToUpdate","replaceElementInDataBase","deleteElementInDataBase","validateEmail","email","test","validatePassword","password","match","UsersCreationForm","HelperComponent_FormHelper","UserInterfaceHeader","valueToSearch","handleFilter","getFromServer","users","src","alt","handleValidateSearch","UserInterfaceFooter","Users","ListToShow","modalChildren","getListToShow","visibility","handleModalClose","Users_UserInterfaceHeader","handleModal","v","ch","DanielComponent_DataManagerPage_DataManagerPage","Users_UserInterfaceFooter","Message","FirstStep","contactoremail","inputEmailparams","inputcontactparams","contact","conctact","err","nextStep","SecondStep","DataToSend","code","newdatatosend","ThirdStep","newpassword","newpasswordtwo","previousStep","FourthStep","PasswordRecovery_Message","PasswordRecovery","messages","currentStep","currentMessage","inProcess","currentData","PasswordRecovery_FirstStep","PasswordRecovery_SecondStep","PasswordRecovery_ThirdStep","PasswordRecovery_FourthStep","processWorking","displayCurrentStep","ConnexionComponent","pseudo","cursor","Users_UsersCreationForm","ConnexionComponent_PasswordRecovery","closeModal","catch","handleLoginValidate","handleCloseModal","handleKeyPress","autoComplete","newAccount","newPassword","history","createBrowserHistory","Connexion","content","surname","components_ConnexionComponent_ConnexionComponent","push","removeItem","loggedIn","userInfosToDisplay","logOut","openProfile","openLoginModal","NavBar","tableauNavbar","redirectionAddress","loggedInTableauNavbar","subItems","url","Redirect","to","address","location","pathname","search","tableauToUse","Link","checkActive","subitem","ConnexionComponent_Connexion","handleRedirect","Welcome","RegisterForCourse","registered","registrationState","user","hasOwnProperty","student","course","cancelregistration","newregistration","CoursesHeader","searchedElement","buttonnewcourse","handleRedirection","handleKeyPressOnSearch","CoursesList","openCourse","CoursesComponent_RegisterForCourse","register","courses","description","showInscriptionOptions","CoursesListByDepartment","_callee3","_context3","_callee4","_context4","department","specialities","speciality","displayCourses","Courses","componentDidMount","Courses_CoursesHeader","Courses_CoursesListByDepartment","handleOpenCourse","AccountView","current","Teachers","currentTeachers","emails","selectedAccounts","currentteachers","selectedaccounts","forEach","Set","action","request_url","index","NewTeacher_AccountView","NewTeacher","NewTeacher_Teachers","handleNewTeacherClick","formats","modules","toolbar","header","size","list","indent","align","displayField","lib_default","callback","CourseCreationForm","validation","handleCancel","handleChangeTitle","_ref$defaultValue","_ref$label","_ref$placeholder","returnField","SubSection","mode","subsection","objectSpread","updateElementInDataBase","updatedSubSection","CourseCreation_CourseCreationForm","setNewValues","openModal","handleUpdateSubSections","handleModifySubSection","handleDeleteSubSection","displayOptions","displayContent","Section","subsections","section","updatedSection","handleUpdateSections","handleModifySection","handleDeleteSection","elementProperties","dataTosend","elementName","childelement","insertedSubSection","addSubSection","newsubsections","CourseCreation_SubSection","_this13","handleAddSubSection","newSubSectionOptions","showSubSections","Chapter","_this14","sections","chapter","updatedChapter","_this15","_this16","handleModifyChapter","insertedSection","_this17","addSection","_this18","CourseCreation_Section","_this19","handleAddSection","newsections","_this20","reopenCourse","newSectionOptions","showSections","CourseAdministration","_this21","departments","level","_this22","designation","selectedValue","queries","_callee7","_context7","_this23","_x7","setCourseAdminValues","_this24","toLocaleUpperCase","handleElementChange","modifyCourseAdministration","_this25","showElements","handleUpdate","displayCurrentValues","Course","_this26","chapters","newValues","updatedCourse","_this27","CourseCreation_CourseAdministration","saveNewCourse","_this28","handleModifyCourse","insertedChapter","_this29","addChapter","_this30","showCourseAdmin","_this31","CourseCreation_Chapter","displayElement","newchapters","_this32","handleUpdateChapters","_this33","handleDeleteChapter","_this34","openChapter","deleteChapterOptions","_this35","handleAddChapter","newChapterOptions","showChapters","CourseCreation","_this36","elementToDisplay","CourseCreation_Course","_this37","_this38","lowerLevelCollectionName","NavCourse","selected","scrollTo","document","getElementById","offsetTop","item","displayTitle","fakeCourse","element_id","result","subElement","displaySubElements","courseToDisplay","ready","addRef","textAlign","CoursesComponent_CourseCreation","CoursesComponent_NewTeacher","modifyCourse","deleteCourse","CoursesComponent_NavCourse","displayCourse","QuillComponent","text","delta","bind","assertThisInitialized","source","editor","getContents","other","ContactForm","insertedMessage","change","DanielComponent_QuillComponent_QuillComponent","handleMessageChange","handleSubmitMessage","ContactsComponent","ContactsComponent_ContactForm","ModifyConnexionParams","nextDataToSend","setResponse","currentDataTosend","arrayKeys","checkdiff","verification","verifyFields","arrayParams","UserProfile","taughtCourses","followedCourses","findTaughtCourses","findFollowedCourses","toLocaleLowerCase","elements_ids","teacher","Courses_CoursesList","findUserParams","updateParams","formToReturn","handleModifValidation","UserProfile_ModifyConnexionParams","OnClick","modifyAvatar","cloudinary_react_lib","cloudName","publicId","width","crop","modifyInformations","displayUserInformations","newConnexionParameters","lowerCourseLevel","waitingElement","DisplayElement","subElements","selectionState","setSelectedElement","handleElementClick","handleUnSelectAll","CourseNavigator","CourseNavigator_DisplayElement","displayElements","MCQHelpComponent","mcq","reference","course_level","elements_collection","handleOpenModal","explanation","showCourse","showExplanation","RealiseMCQ","selectedAnswers","rightAnswers","FormHelper_CheckBoxHelper","checkedStatus","handleSelectAnswer","showCorrectAnswers","_correctMCQ","wrongAnswersSelected","goodAnswersNotSelected","includes","getCorrectedMCQ","correctMCQ","MCQsComponent_MCQHelpComponent","question","answers","displayChoice","displayButtons","displayHelpOptions","displayMCQ","ListMCQS","mcqs","MCQsComponent_OneMCQ","action_level","MCQsComponent_RealiseMCQ","handleViewMCQ","handleRealiseMCQ","handleDeleteMCQ","OneMCQ","mcq_id","retunDefaultAnswerArray","numberOfAnswer","number","arrOfAns","i","questionOrAnswer","previousAnswers","valid","validateMCQ","documentToUpdate","updateToMake","param","handleResetMCQ","handleSaveNewMCQ","handleModifyMCQ","returnMCQField","answerField","num","check","mcqButtons","oneMCQForm","TestResult","testTitle","correctedMCQS","failedMCQS","currentindex","PrevOrNext","handlePrevious","handleNext","displayTestScore","handleFailedMcqClick","checkFailedMcqSelected","displayPrevNext","displayResult","RunningTest","totalNumberOfMCQS","currentMcqIndex","currentMCQ","_getCorrectedMCQ","correctedMcqState","handleNextMCQ","mcqState","validateTest","repeatTest","saveTestResult","TestComponent_TestResult","userEmail","testResult","displayCurrentTestMCQ","displayPrevNextButtons","TestsList","tests","runningTest","TestComponent_RunningTest","TestComponent_OneTest","runTest","viewTest","deleteTest","displayTest","OneTest","test_id","originalmcqs","selectedmcqs","_componentDidMount","aMccq","dataObject","selectedMCQSIndexes","restofmcqs","newselectedmcqs","newmcqs","selecetedmcqs","selectedmcqs_ids","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","updates","createNewTest","modifyTest","setNewTest","displayTestButton","handleTitleChange","handleAddMCQS","displayOneMCQ","handleRemoveMCQS","PassedTests","currentIndex","currentTest","setCurrentTestNav","passedTestsNav","MCQSManagerComponent","selectedElement","activityContent","dataObjet","MCQsComponent_ListMCQS","TestComponent_TestsList","MCQSManagerComponent_PassedTests","handleClose","showPassedTests","MCQsComponent_CourseNavigator","newMCQ","listMCQS","newTEST","listTESTS","returnInfos","showActivityContent","Levels","preventDefault","removeLevel","addLevel","displayLevels","Speciality","updateSpecialities","FormHelper_FormHelper","saveSpecialityModification","modifySpeciality","deleteSpeciality","newLevels","CoursesAdministrationComponent_Levels","Specialities","Specialities_Speciality","Department","detailsVisibility","updateDepartments","saveDepartmentModification","saveNewSpeciality","modifyDepartment","newSpeciality","deleteDepartment","CoursesAdministrationComponent_Specialities","handleShowDetails","displayDetails","Departments","saveNewDepartment","dep_id","handleDepNavClick","Departments_Department","displayNavPanel","newDepartment","listDepartments","CoursesAdministration","CoursesAdministrationComponent_Departments","ContactsAdministration","selectedMessage","reply","replies","handleReplyValidation","handleReply","displayReplies","deleteMessage","returnOptions","showMessages","App","handleUserLogin","handleMessageToShow","menuOpen","messageModalVisibility","setTimeout","closeMenu","color","NavBar_NavBar","Route","exact","path","component","render","CoursesComponent_Courses","ModalComponent_ModalComponent2","Boolean","hostname","ReactDOM","Router","src_App_0","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.4985ca38.chunk.js","sourcesContent":["import { Subject } from 'rxjs';\n\nconst modalToShow = new Subject();\nexport const modalToShow$ = modalToShow.asObservable();\n\n\nexport function showModal(ComponentToShowInModal) {\n    modalToShow.next(ComponentToShowInModal)\n}\n","import React, { Component } from 'react';\nimport './modal.css'\nimport { modalToShow$ } from '../../../modal/ModalService';\n\n\nfunction ModalComponent(props) {\n\n        return(\n            <div className={'modal ' + (props.visible ?  '' : 'display-none')} style={{zIndex:props.position|| 10 }} onClick={()=>props.onClose()}>\n                <div className='modal-box' onClick={e=>e.stopPropagation()}>\n                    {props.children}\n                </div>\n                <div>\n                    {props.onValidate ? <button onClick={()=>{props.onValidate().then(props.onClose())}}>Validate</button> : ''}\n                </div>\n            </div>\n        );\n\n}\n\nexport default ModalComponent\n\n\n\nexport class ModalComponent2 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {componentToShow: <div>Amigo</div>, modalVisibility: false, modalComponentProps: {}}; // You can also pass a Quill Delta here\n        modalToShow$.subscribe((modalComponentProps)=>{\n            // console.log('new component insertion ', componentToShow);\n            if (!modalComponentProps) {\n                this.hideModal();\n                this.setState({modalComponentProps: ''});\n                return;\n            }\n            this.setState({modalComponentProps: modalComponentProps, modalVisibility: true})\n        });\n\n    }\n\n    hideModal() {\n        console.log('modal closed');\n        this.setState({modalVisibility: false});\n    }\n\n    render() {\n        return(\n            <ModalComponent {...this.state.modalComponentProps} visible={this.state.modalVisibility} onClose={()=>this.hideModal()}/>\n        );\n    }\n}","\n/*\n* list of data Models.\n* each constant refers to a model with:]]\n* --- collection as the name of the collection in the database and\n* --elements characterize the collection attributes as needed to generate the form\n*\n* */\n\nexport function titleModel({name= 'title', type='text', placeholder= 'course title', label= 'new title'}) {\n\n    return [{ name,type,placeholder,label}];\n}\n\nexport const usersModel={\n    collection:\"users\",\n    fields:[\n        {name: \"matricule\", type: 'text', placeholder: 'Matricule', label: 'Matricule'},\n        {name: \"name\", type: 'text', placeholder: 'Name', label: 'Nom'},\n        {name: \"surname\", type: 'text', placeholder: 'SurName', label: 'Prenom'},\n        {name: \"address\", type: 'text', placeholder: 'Address', label: 'Adresse'},\n        {name: \"contact\", type: 'number', placeholder: 'Tel1/Tel2 ', label: 'Telephone'},\n        {name: \"email\", type: 'email', placeholder: 'Email', label: 'Email'},\n        {name: \"pseudo\", type: 'text', placeholder: 'UserName', label: 'Pseudo'},\n        {name: \"password\", type: 'password', placeholder: 'Password', label: 'Mot de Passe'},\n        {name: \"passwordverification\", type: 'password', placeholder: 'Password Verification', label: 'Vérifiez le Mot de Passe'}\n    ]\n};\n\nexport const departmentsModel={\n    collection:\"departments\",\n    fields:[\n        { name:\"label\",type:'text',placeholder:'Label',label:'Label',required:true},\n        { name:\"description\",type:'textarea',placeholder:'Description',label:'Description'},\n    ]\n};\n\nexport const syllabusesModel={\n    collection:\"syllabuses\",\n    fields:[\n        { name:\"label\",type:'text',placeholder:'Matiere',label:'matiere'},\n        { name:\"description\",type:'textarea',placeholder:'Description',label:'Description'},\n    ]\n};\n\nexport const specialitiesModel={\n    collection:\"specialities\",\n    fields:[\n        { name:\"label\",type:'text',placeholder:'Appelation',label:'Appelation'},\n        { name:\"description\",type:'textarea',placeholder:'Description',label:'Description'},\n    ]\n};\n\nexport const levels=[\"Year I\",\"Year II\",\"Year III\",\"Year IV\",\"Year V\"];\n\n\nexport const coursesModel={\n    collection:\"courses\",\n    fields:[\n        { name:\"title\",type:'text',placeholder:'Titre du Cours',label:'Titre'},\n        { name:\"description\",type:'textarea',placeholder:'Description du cours',label:'Description'},\n        { name:\"levels_id\",type:'text',placeholder:'Niveaux',label:'Niveaux'},\n        { name:\"modules_id\",type:'text',placeholder:'Modules',label:'Modules'},\n        { name:\"submodules_id\",type:'text',placeholder:'Sous Modules',label:'Sous Modules'},\n        { name:\"sections_id\",type:'text',placeholder:'Sections',label:'Sections'},\n    ]\n};\nexport const chaptersModel={\n    collection:\"submodules\",\n    fields:[\n        { name:\"label\",type:'text',placeholder:'Sous Matiere',label:'Sous-matiere'},\n        { name:\"modules_id\",type:'text',placeholder:'Liste des Matieres',label:'Matieres'},\n    ]\n};\n\nexport const sectionsModel={\n    collection:\"sections\",\n    fields:[\n        { name:\"title\",type:'text',placeholder:'Titre de la Section',label:'Titre'},\n        { name:\"content\",type:'textarea',placeholder:'Contenu',label:'Contenu'},\n        { name:\"courses_id\",type:'text',placeholder:'Liste des Cours',label:'Cours'},\n        { name:\"subsections_id\",type:'text',placeholder:'Liste des sous sections',label:'Sous Sections'},\n    ]\n};\nexport const subsectionsModel={\n    collection:\"subsections\",\n    fields:[\n        { name:\"title\",type:'text',placeholder:'Sous Section',label:'Sous matieres'},\n        { name:\"modules_id\",type:'text',placeholder:'Liste des Matieres',label:'Matieres'},\n        { name:\"sections_id\",type:'text',placeholder:'Sections',label:'Sections'},\n    ]\n};\nexport const contactsModel={\n    collection:\"contacts\",\n    fields:[\n        { name:\"title\",type:'text',placeholder:'Titre du Cours',label:'Titre'},\n        { name:\"description\",type:'text',placeholder:'Description du cours',label:'Description'},\n        { name:\"levels_id\",type:'text',placeholder:'Niveaux',label:'Niveaux'},\n        { name:\"modules_id\",type:'text',placeholder:'Modules',label:'Modules'},\n        { name:\"submodules_id\",type:'text',placeholder:'Sous Modules',label:'Sous Modules'},\n        { name:\"sections_id\",type:'text',placeholder:'Sections',label:'Sections'},\n    ]\n};\n\n\n","export const COURSE_PATH = 'course';\nexport const AUTHENTICATION = 'authentication/login';\nexport const FILTER = 'filter';\nexport const REGISTRATIONS_PATH = 'api/insert/';\nexport const LISTS_PATH = 'getDocuments/';\nexport const PASSWORD_RECOVERY_PATH= 'authentication/passwordRecovery/';\nexport const PASSWORD_RECOVERY_CODE_PATH= 'authentication/passwordRecoveryCode/';\nexport const PASSWORD_RESET_PATH= 'authentication/passwordReset/';\nexport const NEW_USER_PATH= 'newuser/';\nexport const USERS_FILTER_PATH='findusers/';\n\n\n\nexport const MODULE_URL = 'module';\nexport const TOKEN = 'token';\n","import axios from 'axios';\nimport { AUTHENTICATION, TOKEN } from './SERVER_CONST';\nimport { Subject } from \"rxjs\";\n\n// Add a request interceptor\nconst userLogged = new Subject();\nexport const userLogged$ = userLogged.asObservable();\nconst messageToShow = new Subject();\nexport const messageToShow$ = messageToShow.asObservable();\nexport let isLoggedIn = true;\nconst urlRedirection = new Subject();\nexport const urlRedirection$ = urlRedirection.asObservable();\n\n\n\nexport function setLoggedIn(bool) {\n    isLoggedIn = bool;\n    userLogged.next(bool)\n}\n\nexport function redirectTo(url){\n    urlRedirection.next(url);\n}\n\nexport function setToken(token) {\n    console.log('token set', token);\n    localStorage.setItem('token', JSON.stringify(token));\n}\n\nexport function logOut() {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n}\n\nexport function getToken() {\n    return localStorage.getItem(TOKEN);\n}\n\nexport function getDecodedToken() {\n    let token = getToken();\n    if (!getToken() || getToken().length < 1) return false;\n   // console.log(JSON.parse(window.atob(token.split('.')[1])));\n    return(JSON.parse(window.atob(token.split('.')[1])));\n}\n\nexport function displayMessage(message='') {\n    messageToShow.next(message);\n}\n\nlet axiosInstance = axios.create({\n    baseURL: process.env.REACT_APP_BASE_URL,\n});\n\naxiosInstance.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    //If the header does not contain the token and the url not public, redirect to login\n    let accessToken = getToken();\n\n    //if token is found add it to the header\n    if (accessToken) {\n        if (config.method !== 'OPTIONS') {\n            config.headers.authorization = accessToken;\n        }\n    }else{\n        setLoggedIn(false);\n    }\n    return config;\n}, function (error) {\n\n    // Do something with request error\n    return Promise.reject(error.response);\n});\n\naxiosInstance.interceptors.response.use(function (response) {\n    // Do something with response data\n        if (response.data['message']){\n            messageToShow.next(response.data['message']);\n        }\n    console.log(\"response status axios instance \",response.status);\n    switch (response.status) {\n        case 200:\n            if (response.request.responseURL.indexOf(AUTHENTICATION) > 0) {\n                let token = response.data.token;\n                if (!token) {\n                    return response;\n                }\n                setToken(token);\n                setLoggedIn(true);\n                console.log('token obtained ',  token);\n                return response\n            }\n            return response;\n        default :\n            console.log('unknwon error');\n            return response\n    }\n\n    },\n\n    function (error) {\n    // Do something with response error\n    // console.log(error.response, error.response);\n    if (error.response) {\n       // console.log(\"axios error \",error);\n        if (error.response.data['errorMessage']) {\n            messageToShow.next(error.response.data['errorMessage']);\n        }\n    }\n    //     switch (error.response.status) {\n    //         case 401 :\n    //             console.log('bad credentials ');\n    //             setLoggedIn(false);\n    //             return Promise.reject(error);\n    //         default :\n    //             console.log('Mauvaise requete');\n    //             return Promise.reject(error);\n    //     }\n    // } else {\n    //     console.log('Impossible to log in ');\n    //     setLoggedIn(false);\n    //     return Promise.reject(error);\n    // }\n    //console.log(error.response,error);\n    return error.response;\n    //return Promise.reject(error);\n});\n\n\nexport default axiosInstance;","import axiosInstance, {displayMessage} from './axiosInstance';\nimport { AUTHENTICATION, FILTER } from './SERVER_CONST';\n\n\nexport class ServerService {\n    static sendDataToRetrieveToken(userCredentials) {\n        return ServerService.postToServer(AUTHENTICATION, userCredentials);\n    }\n\n    static postToServer(URL_PATH, obj) {\n        return axiosInstance.post(URL_PATH, obj);\n    }\n\n    static updateOnServer(URL_PATH, obj) {\n        return axiosInstance.patch(URL_PATH, obj);\n    }\n\n    static replaceOnServer(URL_PATH, obj) {\n        return axiosInstance.put(URL_PATH, obj);\n    }\n\n    static deleteOnServer(URL_PATH, obj_id) {\n        return axiosInstance.delete(URL_PATH + obj_id);\n    }\n\n    static getFromServer(URL_PATH) {\n        return axiosInstance.get(URL_PATH);\n    }\n\n    static getFromServer2132(URL_PATH, {projection = null, sort = null, limit = 0, collection = '', ...filter} = {}) {\n        console.log(filter, URL_PATH);\n        if (filter || projection || sort || limit || collection) {\n            return ServerService.postToServer(URL_PATH + FILTER, Object.assign({\n                projection,\n                sort,\n                limit,\n                collection,\n            }, {filter}));\n        }\n        return axiosInstance.get(URL_PATH);\n    }\n\n    static retrieveAllDocumentsWithCollectionName(collection) {\n        axiosInstance.post('crudOperations/get', {collection: collection}).then(response => {\n            console.log(response);\n            this.setState({dataToShow: response.data});\n        });\n    }\n\n    static async insertElementInDataBase(collection, element) {\n        let response = await axiosInstance.post('crudOperations/insert', {collection: collection, data: element});\n        if (response.status === 200) {\n            displayMessage(\"Insertion done With Success !!\");\n            return (Object.assign(element, {_id: response.data}));\n        } else {\n            displayMessage(\"Insertion Failed !!\");\n            return false;\n        }\n\n    };\n\n    static replaceElementInDataBase(collection, element) {\n        axiosInstance.post('crudOperations/replace', {collection: collection, data: element}).then(response => {\n            console.log('replaceresult', response);\n            return response.status === 200 || false;\n        });\n    };\n\n    static async updateElementInDataBase(collection, data, update) {\n        let response = await axiosInstance.post('crudOperations/update', {collection, data, update});\n        // .then(response => {\n        console.log('updateresult', response);\n        return response.status === 200 || false;\n        // });\n    };\n\n    static deleteElementInDataBase(element) {\n        axiosInstance.post('crudOperations/delete', {collection: this.props.collection, data: element})\n                     .then(response => {\n                         console.log('delete result', response);\n                         return response.status === 200 || false;\n                     });\n    };\n}","import React, {Component} from 'react';\nimport './formhelper.css';\nimport { REGISTRATIONS_PATH } from '../../server/SERVER_CONST';\nimport { ServerService } from '../../server/ServerService';\n\n\nexport function LabelHelper(props) {\n    if (props.label) {\n        return (<label className={\"form-helper-label\"}> {props.label} </label>);\n    }\n    return (<span></span>);\n}\n\nexport class CheckBoxHelper extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            checked:this.props.checked||false\n        }\n    }\n    handleChange(e){\n        if(!this.props.readOnly){\n            this.setState({checked:!this.state.checked});\n            if(this.props.onChange){\n                this.props.onChange(e)\n            }\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                <input\n                    id={this.props.checkbox_id || ''}\n                    type={'checkbox'}\n                    checked={this.state.checked}\n                    className={this.props.className || \"form-helper-checkbox\"}\n                    onChange={(e) => this.handleChange(e)}\n                    name={this.props.name}\n                />\n                <LabelHelper label={this.props.label}/>\n            </div>\n        )\n    }\n}\n\nexport class TextareaHelper extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value||\"\"\n        }\n    }\n    handleChange(e){\n        this.setState({value:e.target.value});\n        if(this.props.onChange){\n            this.props.onChange(e)\n        }\n    }\n\n    render() {\n        return (\n            <div className={'form-helper-div-input'}>\n                <LabelHelper label={this.props.label || this.props.name||\"\"}/>\n                <textarea\n                    required={'required'}\n                    className={\"form-helper-textarea\"}\n                    name={this.props.name || \"\"}\n                    onChange={(e)=>this.handleChange(e)}\n                    value={this.state.value}\n                >\n                </textarea>\n            </div>\n        );\n    }\n}\n\nexport class InputTextHelper extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            value:this.props.value||\"\"\n        }\n    }\n    handleChange(e){\n        this.setState({value:e.target.value});\n        if(this.props.onChange){\n            this.props.onChange(e)\n        }\n    }\n    render() {\n        return (\n            <div className={'form-helper-div-input'}>\n                <LabelHelper label={ this.props.label}/>\n                <input type={this.props.type}\n                       required={'required'}\n                       className={this.props.className || \"form-helper-input\"}\n                       name={this.props.name}\n                       onChange={(e)=>this.handleChange(e)}\n                       value={this.state.value}\n                       placeholder={this.props.placeholder || this.props.name}\n                       autoFocus={this.props.autoFocus}\n                />\n            </div>\n        );\n    }\n}\n\nexport class SelectHelper extends Component {\n    render() {\n        return (\n            <div>\n                <select name={this.props.name}\n                        className={this.props.className || \"form-helper-select\"}\n                        onChange={(e)=>this.props.onChange(e)}\n                >\n                    <option value='-1' defaultValue> {this.props.empty||\" --- make a choice ---\"} </option>\n                    {this.props.options.map((elt,key)=> {\n                        return (<option key={key} value={elt[this.props.value]||key}> {elt[this.props.display]||elt}  </option>);\n                    })}\n                </select>\n            </div>\n        );\n    }\n}\n\nexport class ButtonHelper extends Component {\n    render() {\n        return (\n            <button\n                type={this.props.type}\n                className={this.props.className}\n                onClick={this.props.onClick}\n            >\n                {this.props.value || this.props.name }\n            </button>\n        );\n    }\n}\n\nexport class ListFromModelHelper extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            dataToSend:{\n                target:{\n                    name:this.props.name,\n                    value:[]\n                }\n            }\n        }\n    }\n    handleChange(e){\n        this.props.onChange(this.state.dataToSend);\n    }\n    componentDidMount(){\n        this.props.onChange(this.state.dataToSend);\n    }\n\n    render() {\n        let listofelements=[];\n        return (\n            <div className={\"list-from-model-container\"}>\n                {listofelements.map((elt,key)=>{\n                    return(\n                        <div className={\"list-from-model-checkbox-container\"}>\n                            <input type={'checkbox'}\n                                   name={elt.name}\n                                   value={elt._id}\n                                   onChange={(e) => this.handleChange(e)}\n                            />\n                            <div> {JSON.stringify(elt)} </div>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\n\nexport class FormHelper extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            collectionName:this.props.data.collection||'',\n            dataToSend:{}\n        };\n    }\n    handleChange(e){\n        let newdata=Object.assign({},this.state.dataToSend,{[e.target.name]: e.target.value});\n        this.setState({dataToSend:newdata});\n        console.log(this.state.dataToSend);\n    }\n    handleClick(e){\n        let registration_path = this.props.registration_path || REGISTRATIONS_PATH+this.state.collectionName;\n        if(this.props.handleValidation){\n            this.props.handleValidation(this.state.dataToSend);\n        }else{\n            ServerService.postToServer(registration_path,this.state.dataToSend).then((response)=>{\n                if(response.status===200){\n                    alert(\"Enregistrement Effectué avec succès\");\n                }else{\n                    console.log(\"error Message \",response.data.errorMessage);\n                    alert(\"Enregistrement non effectué\");\n                }\n            });\n        }\n    }\n    render() {\n        let onChangeCallBack=(e)=>{this.handleChange(e)};\n        let onClickCallBack=(e)=>{this.handleClick(e)};\n        let options = this.props.options|| {};\n        return (\n            <div>\n                <form>\n                <section className={\"form-helper-title\"}> <h3>{this.props.title||\"\"}</h3></section>\n                {\n                    this.props.data.fields.map(function (elt, key) {\n                        switch (elt.type) {\n                        case 'text':\n                        case 'email':\n                        case 'number':\n                        case 'password':\n                            return <InputTextHelper key={key} options={options} {...elt} onChange={onChangeCallBack} />;\n                        case 'button':\n                            return <ButtonHelper key={key} options={options} {...elt} onChange={onChangeCallBack} />;\n\n                        case 'select':\n                            return <SelectHelper key={key} options={options} {...elt} onChange={onChangeCallBack} />;\n\n                        case 'listfrommodel':\n                            return <ListFromModelHelper key={key} options={options} {...elt} onChange={onChangeCallBack} />;\n\n                        case 'textarea':\n                            return <TextareaHelper key={key} options={options} {...elt} onChange={onChangeCallBack} />;\n\n                            default: return\"\";\n                    }\n                    })\n                }\n                <div className={'hr-button-block'}>\n                    <ButtonHelper {...{type: 'reset', className:' form-helper-button danger', value:'Reset'}}/>\n                    {this.props.modificationForm?\n                        <ButtonHelper {...{type: 'button',className:'form-helper-button success', value:'Modifier'}} onClick={onClickCallBack}/>\n                        :\n                        <ButtonHelper {...{type: 'button',className:'form-helper-button success', value:'Valider'}} onClick={onClickCallBack}/>\n                    }\n                </div>\n            </form>\n            </div>\n        );\n    }\n}\n\n\nexport class InputHelper extends Component {\n\n    renderfield(params){\n        let onChangeCallBack=(e)=>{this.props.onChange(e)};\n        let options = this.props.options || {};\n        switch (params.type) {\n            case 'text':\n            case 'email':\n            case 'number':\n            case 'password':\n                return(<InputTextHelper  options={options} {...params} onChange={onChangeCallBack} />);\n\n\n            case 'button':\n                return <ButtonHelper options={options} {...params} onChange={onChangeCallBack} />;\n\n\n            case 'select':\n                return <SelectHelper  options={options} {...params} onChange={onChangeCallBack} />;\n\n            case 'listfrommodel':\n                return <ListFromModelHelper  options={options} {...params} onChange={onChangeCallBack} />;\n\n\n            case 'textarea':\n                return <TextareaHelper options={options} {...params} onChange={onChangeCallBack} />;\n\n\n            default:break;\n        }\n    }\n    render() {\n        return ( this.renderfield(this.props) );\n    }\n}\n\n\nexport default FormHelper;","import React, { Component } from 'react';\nimport './BasicFormCreatorComponent.css'\nimport {ButtonHelper, InputHelper} from \"../../HelperComponent/FormHelper\";\n\n\nclass BasicFormCreatorComponent extends Component {\n    //Prend un objet dataModel qui représente le formulaire à créer\n    // [{name: 'module', type: 'text', placeholder:'matière', label: 'Matière'}, {} ...]\n    // Si pas de label ca utilise le name\n    // data --> objet existant et dataModel --> model pour créer\n    constructor(props) {\n        super(props);\n        let dataToSendModel = props.dataModel.reduce((total,cur)=>{total[cur.name]=''; return total}, {});\n        this.state = {\n            // dataToSend: props.data ? Object.assign({},props.data) : Object.assign({},dataToSendModel),\n            dataToSend: props.data ? Object.assign({},props.data) : Object.assign({},dataToSendModel),\n            dataToSendModel: dataToSendModel,\n        };\n    }\n\n    onEnterClick(event) {\n        if (event.key === 'Enter') {\n            this.onValidate()\n        }\n    }\n\n\n    modifyData(e) {\n        let dataToSendCopy = Object.assign({}, this.state.dataToSend, {[e.target.name]: e.target.value});\n        this.setState({dataToSend: dataToSendCopy});\n        console.log(dataToSendCopy);\n    }\n\n    createForm() {\n\n        return this.props.dataModel.map(dataModelElement => {\n            let inputparams = {\n                type: dataModelElement.type,\n                label: dataModelElement.label || dataModelElement.name,\n                name: dataModelElement.name,\n                placeholder: dataModelElement.placeholder,\n                value: this.state.dataToSend[dataModelElement.name] || ''\n            };\n            return <div className='label-input-div' key={dataModelElement.name}>\n                <InputHelper {...inputparams} onChange={e => this.modifyData(e)}/>\n            </div>;\n        });\n    }\n    onValidate() {\n        this.props.onValidate ? this.props.onValidate(this.state.dataToSend) : alert(JSON.stringify(this.state.dataToSend));\n    }\n\n\n    onReset() {\n        this.setState({dataToSend: Object.assign({},this.state.dataToSendModel)});\n        console.log(this.state.dataToSend);\n    }\n    buttons(){\n\n        let result=\n\n        <React.Fragment>\n            <div className={\"hr-button-block\"}>\n                {   this.props.onValidate?\n                    <ButtonHelper\n                        onClick={() => this.props.onValidate( this.state.dataToSend)}\n                        {...{\n                            type:'button',\n                            value:'Valider',\n                            className:'form-helper-button success'\n                        }}/>\n                    :''\n                }\n                {   this.props.onDelete?\n                    <ButtonHelper\n                        onClick={() => this.props.onDelete( this.state.dataToSend)}\n                        {...{\n                            type:'button',\n                            value:'Supprimer',\n                            className:'form-helper-button danger'\n                        }}/>\n                    :''\n                }\n                {\n                this.props.onModify?\n                    <ButtonHelper\n                        onClick={() => this.props.onModify( this.state.dataToSend)}\n                        {...{\n                            type:'button',\n                            value:'Modifier',\n                            className:'form-helper-button success'\n                        }}/>\n                    :''\n            }\n            </div>\n        </React.Fragment>;\n\n            return (result);\n\n    }\n\n\n    render() {\n        // console.log('data to send', this.state.dataToSend)\n        return <div onKeyPress={(event) => this.onEnterClick(event)}>\n            <h2>{this.props.title}</h2>\n            {this.createForm()}\n            <div className='flex-container'>\n                { this.buttons() }\n                {this.props.children}\n            </div>\n        </div>;\n    }\n}\n\nexport default BasicFormCreatorComponent;\n","import React, {Component} from 'react';\nimport './DataArrayComponent.css';\nimport ModalComponent from '../Modal/ModalComponent';\nimport BasicFormCreatorComponent from '../FormCreator/BasicFormCreatorComponent';\n\nclass DataArrayComponent extends Component {\n    //Prend un objet dataModel qui représente le formulaire à créer\n    // [{name: 'module', type: 'text', placeholder:'matière', label: 'Matière'}, {} ...]\n    // Si pas de label ca utilise le name\n\n    //title, dataToSendModel, fields, dataToShow, onModify, onDelete\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataToShow: props.dataToShow,\n            modalVisibility: false,\n            modalComponentChild: <h1>Amigo banana</h1>,\n        };\n    }\n\n    getAllFields(arrayObject) {\n        let allKeysInOneObject = arrayObject.reduce((total, cur) => {\n            for (let key of Object.keys(cur)) {\n                total[key] = '';\n            }\n            return total;\n        }, {});\n        return Object.keys(allKeysInOneObject);\n    }\n\n    onElementClick(element) {\n        console.log('selected ', element);\n        if(this.props.onElementClick){\n            this.props.onElementClick();\n            return;\n        }\n        let newBasicFormCreatorComponent = <BasicFormCreatorComponent\n            dataModel={this.props.dataModel}\n            data={element}\n            onModify={\n                async dataToSend => {\n                    let answer = await this.props.updateElement(dataToSend);\n                    console.log('awaited answer', answer);\n                    this.setModalVisibility(!answer);\n                }\n            }\n            onDelete={\n                async dataToSend => {\n                    let answer = await this.props.deleteElement(dataToSend);\n                    console.log('awaited answer', answer);\n                    this.setModalVisibility(false);\n                }\n            }\n        />;\n        this.setState({modalComponentChild: newBasicFormCreatorComponent});\n        this.setModalVisibility(true);\n    }\n\n    setModalVisibility(bool) {\n        this.setState({modalVisibility: bool});\n        if (!bool) {\n            this.setState({modalComponentChild: ''});\n        }\n    }\n\n    createShowDataTable() {\n        let allFields = this.props.fields ? this.props.fields : this.getAllFields(this.props.dataToShow);\n        let tableToShow = this.props.dataToShow.map((dataModelElement, key) => {\n            let allColumnElement = allFields.map((field, step) =>\n                <div className={\"data-array-table-body-cell\"} key={step}>\n                    {dataModelElement[field]}\n                </div>\n            );\n            return (\n                <div\n                    key={key}\n                    className='data-array-table-body-row'\n                    onClick={() => this.onElementClick(dataModelElement)}\n                >\n                    {allColumnElement}\n                </div>\n            );\n        });\n\n        let allFieldsColumn = allFields.map((field,key) =>\n            <div className={\"data-array-table-header-cell\"} key={key}>\n                {field}\n            </div>\n        );\n\n        return (\n            <div className='div-table-container'>\n                <div className='data-array-table'>\n                    <div className={'data-array-table-header'}>\n                        <div className={'data-array-table-header-row'}>\n                            {allFieldsColumn}\n                            </div>\n                    </div>\n                    <div className={'data-array-table-body'}>\n                        {tableToShow}\n                        </div>\n                </div>\n                <ModalComponent\n                    visible={this.state.modalVisibility}\n                    onClose={() => this.setModalVisibility(false)}\n                >\n                    {this.state.modalComponentChild}\n                </ModalComponent>\n            </div>\n        );\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <h2>{this.props.title} List</h2>\n                {this.createShowDataTable()}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DataArrayComponent;","import React, { Component } from 'react';\nimport ModalComponent from '../Modal/ModalComponent';\nimport { usersModel } from '../../DataManagerComponent/DataModelsComponent';\nimport { ServerService } from '../../../server/ServerService';\nimport DataArrayComponent from '../DataArray/DataArrayComponent';\nimport BasicFormCreatorComponent from '../FormCreator/BasicFormCreatorComponent';\nimport { ButtonHelper } from '../../HelperComponent/FormHelper';\n\nclass DataManagerPage extends Component {\n    //Prend un objet dataModel qui représente le formulaire à créer\n    // [{name: 'module', type: 'text', placeholder:'matière', label: 'Matière'}, {} ...]\n    // Si pas de label ca utilise le name\n    constructor(props) {\n        super(props);\n        // let dataModel = UserModel;\n        let dataToSendModel = usersModel.fields;\n\n        if (!props.dataToShow) {\n            this.retrieveDataOnServer();\n        }\n        this.state = {\n            dataModel: usersModel,\n            dataToSend: Object.assign({}, dataToSendModel),\n            dataToSendModel: dataToSendModel,\n            modalVisibility: false,\n            dataToShow: [],\n        };\n    }\n\n    retrieveDataOnServer() {\n        if (!this.props.collection) {\n            return;\n        }\n        ServerService.postToServer('crudOperations/get', {collection: this.props.collection}).then(response => {\n            console.log(response);\n            this.setState({dataToShow: response.data});\n        });\n    }\n\n    insertElementInDataBase(element) {\n        ServerService.postToServer('crudOperations/insert', {collection: this.props.collection, data: element})\n                     .then(response => {\n                         if (response.status === 200) {\n                             this.addElementToList(Object.assign(element, {_id: response.data}));\n                         }\n                     });\n    }\n\n    replaceElementInDataBase(element) {\n        return ServerService.postToServer('crudOperations/replace', {collection: this.props.collection, data: element})\n                            .then(response => {\n                                console.log('updateresult', response);\n                                return response.status === 200 ? this.updateElement(element) : false;\n                            });\n    }\n\n    deleteElementInDataBase(element) {\n        console.log('you are trying to delete this.' +\n            {collection: this.props.collection, data: element});\n        return (\n            ServerService.postToServer('crudOperations/delete', {collection: this.props.collection, data: element})\n                         .then(response => {\n                             console.log('delete result', response);\n                             return response.status === 200 ? this.deleteElement(element) : false;\n                         })\n        );\n    }\n\n    addElementToList(element) {\n        let newDataToShowList = [...this.state.dataToShow].concat([element]);\n        this.setState({dataToShow: newDataToShowList, modalVisibility: false});\n        console.log(newDataToShowList);\n    }\n\n    updateElement(elementUpdated) {\n        console.log('new element', elementUpdated);\n        let elementIndex = this.state.dataToShow.findIndex(x => x._id === elementUpdated._id);\n        if (elementIndex > -1) {\n            let newDataToShowList = [...this.state.dataToShow];\n            newDataToShowList[elementIndex] = elementUpdated;\n            this.setState({dataToShow: newDataToShowList});\n            console.log(newDataToShowList);\n            return elementIndex > -1;\n        }\n        return false;\n    }\n\n    deleteElement(elementUpdated) {\n        console.log('new element', elementUpdated);\n        let elementIndex = this.state.dataToShow.findIndex(x => x._id === elementUpdated._id);\n        if (elementIndex > -1) {\n            let newDataToShowList = [...this.state.dataToShow];\n            newDataToShowList.splice(elementIndex, 1);\n            this.setState({dataToShow: newDataToShowList});\n            console.log(newDataToShowList);\n            return elementIndex > -1;\n        }\n        return false;\n    }\n\n    render() {\n        return <div style={{marginBottom: '100px'}}>\n            <div className='flex-container flex-center'>\n                <span style={{fontSize: '30px', fontWeight: '800'}}>{this.props.collection} </span>\n                <ButtonHelper\n                    {...{value:'NEW',className :'form-helper-button warning'}}\n                    onClick={() => this.setState({modalVisibility: true})}/>\n            </div>\n\n            <ModalComponent\n                visible={this.state.modalVisibility}\n                onClose={() => this.setState({modalVisibility: false})}>\n                <BasicFormCreatorComponent\n                    dataModel={this.props.fields}\n                    onValidate={element => this.insertElementInDataBase(element)}\n                />\n            </ModalComponent>\n\n            <DataArrayComponent\n                title={this.props.collection}\n                dataModel={this.props.fields}\n                fields={this.props.fields ? this.props.fields.map(x => x.name) : null}\n                dataToShow={this.state.dataToShow}\n                updateElement={elementToUpdate => this.replaceElementInDataBase(elementToUpdate)}\n                deleteElement={elementToUpdate => this.deleteElementInDataBase(elementToUpdate)}\n            />\n        </div>;\n    }\n}\n\nexport default DataManagerPage;\n","export const validateEmail = function (email) {\n    var re = /^(([^<>()[\\]\\\\.,;:s@\"]+(\\.[^<>()[\\]\\\\.,;:s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n};\n\nexport const validatePhoneNumber = function (phonenumber) {\n    var phoneno = /^d{9}$/;\n    if ((phonenumber.match(phoneno)))\n    {\n        return true;\n    }\n    else {\n        return false;\n    }\n};\n\n\nexport const validatePassword = (password)=>{\n    console.log(\"password sended \",password);\n    var passw=  /^[A-Za-z]w{6,14}$/;\n    if(password.match(passw))\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n\n};\n","import React,{Component} from 'react';\nimport './users.css';\nimport {usersModel} from '../DataManagerComponent/DataModelsComponent'\nimport FormHelper, { InputTextHelper} from '../HelperComponent/FormHelper';\nimport {ServerService} from \"../../server/ServerService\";\nimport { USERS_FILTER_PATH} from \"../../server/SERVER_CONST\";\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport DataManagerPage from \"../DanielComponent/DataManagerPage/DataManagerPage\";\nimport {validateEmail, validatePassword} from \"../StaticFunctionsComponent/StaticFunctions\";\n\nexport class UsersCreationForm extends Component{\n\n    handleValidation(dataToSend){\n        if(!validateEmail(dataToSend['email'])){\n            alert(\"Veuillez saisir une adresse mail valide SVP !! \");\n            return ;\n        }\n\n        if(!validatePassword(dataToSend['password'])){\n            alert(\"Votre mot de passe n'est pas valide !!\");\n            return ;\n        }\n        if(dataToSend['password'] !== dataToSend['passwordverification']){\n            alert(\"Veuillez saisir des mots de passe identiques !!\");\n            return ;\n        }\n        delete(dataToSend[\"passwordverification\"]);\n        ServerService.postToServer(\"authentication/newuser\",dataToSend).then((response)=>{\n            if(response.status===200){\n                alert(\"Enregistrement Effectué avec succès\");\n            }else{\n                console.log(\"error Message \",response.data.errorMessage);\n                alert(\"Enregistrement non effectué\");\n            }\n        });\n    }\n    render(){\n        let options={label:''};\n        return(\n            <FormHelper\n                data={usersModel}\n                registration_path={'authentication/newuser'}\n                title={\"Nouvel Utilisateur\"}\n                options={options}\n                handleValidation={(dataToSend)=>this.handleValidation(dataToSend)}\n            />\n        );\n    }\n}\n\nclass UserInterfaceHeader extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            valueToSearch:\"\",\n            dataToSend:[]\n        }\n    }\n\n    handleValidateSearch(e){\n        let options={valueToSearch: this.state.valueToSearch};\n\n        this.props.handleFilter([]);\n        ServerService.getFromServer(USERS_FILTER_PATH,options).then((response)=>{\n            console.log(response.data);\n            this.props.handleFilter(response.data.users);\n        });\n    }\n\n    handleChange(e){\n        this.setState({valueToSearch:e.target.value});\n    }\n\n    render(){\n        let inputsearchparams={\n            type:'text',\n            name : 'input-user-search',\n            className : \"search-input form-helper-input \",\n            placeholder :'Search'\n        };\n\n       return(\n           <React.Fragment>\n               <div className={\"users-interface-header\"}>\n                   <h3>{\"Welcome to Users Management Interface !!\"} </h3>\n               </div>\n               <div className={\"user-search-new-div\"}>\n                   <div className={\"div-search-block\"}>\n                       <InputTextHelper {...inputsearchparams}\n                              onChange={(e)=>this.handleChange(e)}\n                       />\n                       <div className={\"div-img-search\"}>\n                           <img src={\"/images/search.png\"}\n                                alt={\"Search\"}\n                                onClick={(e)=>this.handleValidateSearch(e)}\n                                className={\"button-image-user-search\"}/>\n                       </div>\n                   </div>\n               </div>\n           </React.Fragment>\n\n       );\n    }\n}\n\nclass UserInterfaceFooter extends Component{\n    render(){\n        return(\n            <div>\n\n            </div>\n        );\n    }\n}\n\nclass Users extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            ListToShow:[],\n            modalVisibility:false,\n            modalChildren:\"\"\n        }\n    }\n\n    getListToShow(){\n        ServerService.postToServer('/crudOperations/get', {collection: 'users'}).then((response)=>{\n          //console.log(res.data);\n            if(response.status===200){\n                this.setState({ListToShow:response.data});\n            }else{\n                alert(response.data.errorMessage);\n            }\n        });\n    }\n\n    componentDidMount(){ this.getListToShow(); }\n\n    handleModalClose(){\n        this.setState({modalChildren:\"\"});\n        this.setState({modalVisibility:false});\n    }\n\n    handleModal(visibility,children){\n        this.setState({\n            modalVisibility:visibility,\n            modalChildren:children\n        });\n    }\n\n    handleFilter(users){this.setState({ ListToShow:users});}\n\n    render(){\n        return(\n            <React.Fragment>\n                <div>\n                    <ModalComponent\n                        visible={this.state.modalVisibility}\n                        onClose={()=>this.handleModalClose()}\n                        children={this.state.modalChildren}\n                    />\n                </div>\n                <div className={\"users-interface-block\"}>\n                    <div className={\"users-interface-header\"}>\n                        <UserInterfaceHeader handleFilter={(users)=>this.handleFilter(users)} handleModal={(v,ch)=>this.handleModal(v,ch)}/>\n                    </div>\n                    <div className={\"users-interface-content\"}>\n                        <DataManagerPage {...usersModel} />\n                    </div>\n                    <div className={\"users-interface-footer\"}>\n                        <UserInterfaceFooter/>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default Users;","import React,{Component} from 'react';\nimport './passwordrecovery.css';\nimport {InputTextHelper, ButtonHelper} from '../HelperComponent/FormHelper';\nimport {validateEmail, validatePhoneNumber} from \"../StaticFunctionsComponent/StaticFunctions\";\nimport { PASSWORD_RECOVERY_PATH,PASSWORD_RECOVERY_CODE_PATH ,PASSWORD_RESET_PATH} from '../../server/SERVER_CONST';\nimport { ServerService } from '../../server/ServerService';\n\nclass Message extends Component{\n    render(){\n        return(\n            <div className={'message-box message-box-'+ this.props.type || \"success\"}>\n                <div className='message-message'>\n                    {this.props.message || \"\"}\n                </div>\n            </div>\n        );\n\n    }\n}\nclass FirstStep extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            contactoremail: \"email\",\n            inputEmailparams: {\n                name: 'email',\n                type: \"email\",\n                label: \"Email\",\n                placeholder: \"Email\"\n            },\n            inputcontactparams: {\n                name: 'contact',\n                type: \"Number\",\n                label: \"Telephone\",\n                placeholder: \"Telephone\"\n            },\n            contact:\"\",\n            email:\"\",\n            dataToSend:{}\n        }\n    }\n\n    handleChange(e){\n        switch (e.target.name){\n            case \"email\":\n                this.setState({\n                    contactoremail:\"email\",\n                    email:e.target.value,\n                    dataToSend:{\n                        contactoremail:\"email\",\n                        email:e.target.value\n                    }\n\n            });\n            break;\n            case \"contact\":\n                this.setState({\n                    contactoremail:\"contact\",\n                    contact:e.target.value,\n                    dataToSend:{\n                        contactoremail:\"contact\",\n                        conctact:e.target.value\n                    }\n            });\n            break;\n            default : break;\n        }\n    }\n\n    contactoremail(){\n        switch (this.state.contactoremail) {\n            case \"email\":\n                return <InputTextHelper {...this.state.inputEmailparams} onChange={(e) => this.handleChange(e)}/>;\n            case \"contact\":\n                return <InputTextHelper {...this.state.inputcontactparams} onChange={(e) => this.handleChange(e)}/>;\n            default : break;\n        }\n    }\n\n    handleClick(){\n        let err=0;\n        switch (this.state.contactoremail) {\n            case \"email\":\n                if(validateEmail(this.state.email)){\n                    this.setState({\n                        dataToSend:{\n                            contactoremail:this.state.contactoremail,\n                            email:this.state.email\n                        }\n                    });\n\n                }else{\n                    err=1;\n                    alert(\"Veuillez Saisir Une Adresse Mail Valide\");\n                }\n                break;\n            case \"contact\":\n                if(validatePhoneNumber(this.state.contact)){\n                    this.setState({\n                        dataToSend:{\n                            contactoremail:this.state.contactoremail,\n                            contact:this.state.contact\n                        }\n                    });\n\n                    console.log(this.state.dataToSend);\n                }else {\n                    err=1;\n                    alert(\"Veuillez Saisir Un Numero Valide\")\n                }\n                break;\n            default : break;\n        }\n        if(!err){\n            console.log('donnes envoyees', this.state.dataToSend);\n            ServerService\n                .postToServer(PASSWORD_RECOVERY_PATH,this.state.dataToSend)\n                .then(\n                    (response)=>{\n                        console.log(response.data);\n                        if(response.status===200) {\n                            this.props.nextStep(this.state.dataToSend);\n                            console.log(response.data.message);\n                        }else {\n                            console.log(response.data.errorMessage);\n                        }\n                    });\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"pass-recov-setp-one-block\"}>\n                <div className={\"pass-recov-step-one-header \" + this.state.contactoremail}>\n                    <div onClick={(e)=>this.setState({contactoremail : \"email\"})}> EMail </div>\n                    <div onClick={(e)=>this.setState({contactoremail : \"contact\"})}>  Telephone </div>\n                </div>\n                <div className={\"pass-recov-step-one-content\"}>\n                    {this.contactoremail()}\n                </div>\n                <div className={\"pass-recov-step-one-footer\"}>\n                    <button className={\"pass-recov-button\"} onClick={()=>this.handleClick()}> Suivant</button>\n                </div>\n            </div>\n        );\n    }\n}\nclass SecondStep extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            DataToSend:{\n                code:\"\"\n            }\n        }\n    }\n    handleChange(e){\n        let newdatatosend= Object.assign({},this.state.dataToSend,this.props.data[1],{code:e.target.value});\n        this.setState({dataToSend:newdatatosend});\n        console.log(this.state.dataToSend);\n    }\n    handleClick(e){\n        if(this.state.dataToSend.code.length>=4){\n            ServerService.postToServer(PASSWORD_RECOVERY_CODE_PATH,this.state.dataToSend).then((response)=>{\n                if(response.status===200){\n                    this.props.nextStep(this.state.dataToSend);\n                }else {\n                    alert(response.data.errorMessage);\n                }\n            });\n        }else {\n            alert(\"Veuillez vérifier le code entré SVP.\");\n        }\n    }\n    render() {\n        let inputCodeparams={\n            name: 'recoverycode',\n            type: \"text\",\n            label: \"Code\",\n            placeholder: \"CODE\"\n        };\n        let buttonParams={\n            type:'button',\n            name:\"codevalidatebutton\",\n            className:'form-helper-button success',\n            value:\"Valider\"\n        };\n\n        return (\n            <React.Fragment>\n                <div className={\"pass-recov-step-one-content\"}>\n                    <InputTextHelper {...inputCodeparams} onChange={(e)=>this.handleChange(e)}/>\n                </div>\n                <div className={\"\"}>\n                    <ButtonHelper {...buttonParams} onClick={(e)=>this.handleClick(e)}> Valider</ButtonHelper>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nclass ThirdStep extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            dataToSend:{\n                newpassword:\"\",\n                newpasswordtwo:\"\"\n            }\n        };\n    }\n\n    handleChange(e){\n        let newdatatosend=Object.assign({},this.state.dataToSend,{[e.target.name]:e.target.value});\n        this.setState({dataToSend:newdatatosend});\n        console.log(this.state.dataToSend);\n    }\n    handleClick(e) {\n        if((this.state.dataToSend.newpassword.length>=4) && (this.state.dataToSend.newpassword === this.state.dataToSend.newpasswordtwo) ){\n            let newdatatosend = Object.assign({},this.state.dataToSend,this.props.data[2]);\n                ServerService.postToServer(PASSWORD_RESET_PATH, newdatatosend).then((response)=>{\n                    console.log(response.data);\n                    if(response.status === 200){\n                        this.props.nextStep({status:1});\n                    }else{\n                        alert(response.data.message);\n                    }\n                });\n        }\n    }\n    render() {\n        let inputNewPassword={\n            name: 'newpassword',\n            type: \"password\",\n            label:\"Nouveau Mot De Passe\",\n            placeholder:\"Nouveau Mot De passe \",\n        };\n        let inputNewPasswordVerify={\n            name: 'newpasswordtwo',\n            type: \"password\",\n            label: \"Entrez de nouveau votre mot de passe\",\n            placeholder:\" Nouveau Mot de Passe\",\n        };\n        let previousbuttonparams={\n            type:'button',\n            name: 'previous',\n            value: 'Precedent',\n            className:'form-helper-button warning'\n        };\n        let nextbuttonparams={\n            type:'button',\n            name: 'next',\n            value: 'Valider',\n            className:'form-helper-button success'\n        };\n\n        return (\n            <div className={\"pass-recov-newpass-block\"}>\n                <div className={\"\"}>\n                    <InputTextHelper {...inputNewPassword} required={'required'} onChange={(e)=>this.handleChange(e)}/>\n                    <InputTextHelper {...inputNewPasswordVerify} required={'required'} onChange={(e)=>this.handleChange(e)}/>\n                </div>\n                <div className={'hr-button-block'}>\n                    <ButtonHelper {...previousbuttonparams} onClick={(e)=>this.props.previousStep(e)} />\n                    <ButtonHelper {...nextbuttonparams} onClick={(e)=>this.handleClick(e)}/>\n                </div>\n            </div>\n        );\n    }\n}\nclass FourthStep extends Component {\n    render() {\n        return (\n            <div>\n                <Message type={\"success\"} message={\"Nouveau Mot de passe Enregistré\"}/>\n            </div>\n        );\n    }\n}\n\nclass PasswordRecovery extends Component{\n    messages=[\n        \"\",\n        \"Retrouvez Votre Mot De Passe par Mail ou Telephone\",\n        \"Un code vous a été Envoyé. Veuillez saisir le Code Reçu.\",\n        \"Entrez vos nouveaux parametres\",\n    ];\n    constructor(props){\n        super(props);\n        this.state={\n            currentStep:1,\n            currentMessage:this.messages[1],\n            inProcess:0,\n            email:\"\",\n            code:\"\",\n            currentData:{}\n        }\n    }\n    processWorking(){\n        if(this.state.inProcess === 1)\n        {\n            return ( <div> <img src={\"/images/al.gif\"} alt={\"Processing ...\"}/> </div>)\n        }\n    }\n    handleChange(e){\n        console.log(\"name : \" +e.target.name);\n        console.log(\"value : \" +e.target.value);\n        //this.setState({[e.target.name] : e.target.value});\n        //console.log(this.state);\n    }\n\n    nextStep(e){\n        this.setState({\n            currentData: {[this.state.currentStep]:e },\n            currentMessage:this.messages[this.state.currentStep +1],\n        });\n        this.setState({currentStep: this.state.currentStep + 1});\n        console.log(this.state);\n    }\n\n    previousStep(){\n        this.setState({currentStep: this.state.currentStep - 1});\n    }\n    displayCurrentStep(){\n        switch (this.state.currentStep){\n            case 1: return <FirstStep  nextStep={(e)=>this.nextStep(e)} />;\n            case 2: return <SecondStep onChange={(e)=>this.handleChange(e)} data={this.state.currentData} nextStep={(e)=>this.nextStep(e)} previousStep={(e)=>this.previousStep(e)}/>;\n            case 3: return <ThirdStep  onChange={(e)=>this.handleChange(e)} data={this.state.currentData} nextStep={(e)=>this.nextStep(e)} previousStep={(e)=>this.previousStep(e)}/>;\n            case 4: return <FourthStep  onChange={(e)=>this.handleChange(e)}  nextStep={(e)=>this.nextStep(e)} />;\n            default : break;\n        }\n    }\n\n    render(){\n        return(\n            <div className={\"block-password-recovery\"}>\n                <div className={\"section-header\"}>\n                    {\"Mot de Passe Oublié ?\"}\n                    <div className={\"bottom-border\"}>  </div>\n                </div>\n                <Message type={\"note\"} message={this.state.currentMessage}/>\n                <div>{this.processWorking()}</div>\n                 {this.displayCurrentStep()}\n                <div className={\"password-recovery-footer\"}>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PasswordRecovery;","import React, { Component } from 'react';\nimport './connexionComponent.css';\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport {UsersCreationForm} from \"../UsersComponent/Users\";\nimport  PasswordRecovery  from './PasswordRecovery';\nimport {ServerService} from \"../../server/ServerService\";\nimport {AUTHENTICATION} from \"../../server/SERVER_CONST\";\n\n\nclass ConnexionComponent extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            modalVisibility:false,\n            modalChildren:\"\",\n            dataToSend:{\n                pseudo:'',\n                password:''\n            },\n            cursor:\"\"\n        };\n    }\n    newAccount(){\n        this.setState({\n            modalVisibility :true,\n            modalChildren:<UsersCreationForm/>\n        });\n    }\n    newPassword(){\n        this.setState({\n            modalVisibility :true,\n            modalChildren:<PasswordRecovery/>\n        });\n    }\n\n    handleCloseModal(e){\n        this.setState({\n            modalVisibility :false,\n            modalChildren:\"\"\n        });\n    }\n    handleChange(e){\n        let newdatatosend=Object.assign({},this.state.dataToSend,{[e.target.name]:e.target.value});\n        this.setState({dataToSend:newdatatosend});\n    }\n\n    async handleLoginValidate(){\n        if(this.state.dataToSend.pseudo!=='' &&  this.state.dataToSend.password!=='' ){\n            this.setState({cursor:\"cursor-progress\"});\n            await ServerService.postToServer(AUTHENTICATION,this.state.dataToSend).then((response)=>{\n                if(response.status===200){\n                    console.log(\" The login props \",this.props);\n                    this.setState({cursor:\"\"});\n                    this.props.closeModal();\n                }\n                this.setState({cursor:\"\"});\n            }).catch(error=>{\n                console.log(\"connexion request failed \",error);\n            });\n        }\n    }\n    handleKeyPress(event){\n        if (event.key==='Enter'){\n            this.handleLoginValidate().then();\n        }\n    }\n\n    render(){\n        return (\n            <div className={\"form-connexion-block \"+this.state.cursor}>\n                <ModalComponent visible={this.state.modalVisibility}  onClose={(e)=>this.handleCloseModal(e)}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n                <form className={'form-connexion'} onKeyPress={(event)=>this.handleKeyPress(event)}>\n                    <div className={\"form-connexion-header\"}>\n                        <div>Connexion </div>\n                    </div>\n                    <div className={\"form-connexion-content\"}>\n                        <div>\n                            <label> Pseudo </label>\n                            <input onChange={(e)=>this.handleChange(e)} autoFocus={true} type={\"text\"} autoComplete={'off'} name={\"pseudo\"} placeholder={\"Pseudo\"}/>\n                        </div>\n                        <div>\n                            <label> Mot de Passe </label>\n                            <input onChange={(e)=>this.handleChange(e)} type={\"password\"}autoComplete={\"off\"} name={\"password\"} placeholder={\"Mot de Passe\"}/>\n                        </div>\n                        <div>\n                            <div> <button type={\"button\"} onClick={(e)=>{this.handleLoginValidate(e).then()}} className={\"login-button-validate\"}> Se Connecter </button></div>\n                        </div>\n                    </div>\n                    <div className={\"form-connexion-footer\"}>\n                        <div> <button type={\"button\"} className={\"new-account-button\"} onClick={()=>this.newAccount()}> Créer Un Nouveau Compte </button></div>\n                        <div className={\"password-forgotten-div\"} onClick={()=>this.newPassword()}> Des Problèmes pour vous Connecter ?</div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default ConnexionComponent;\n\n","import { createBrowserHistory } from 'history';\nconst history=createBrowserHistory();\nexport default history;\n","import React, {Component} from \"react\";\nimport './connexion.css';\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport ConnexionComponent from \"./ConnexionComponent\";\nimport {logOut, getDecodedToken} from '../../server/axiosInstance';\nimport history from '../../history';\n\nclass Connexion extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalVisibility: false,\n            modalChildren: \"\"\n        }\n    }\n\n    userInfosToDisplay(content) {\n        return (\n            <div className={\"user-connected-infos-div\"}>\n                <div className={\"name\"}>{content.name + \" \" + content.surname}</div>\n                <div className={\"email\"}>{content.email} </div>\n            </div>\n        )\n    }\n\n    openLoginModal() {\n        this.setState({\n            modalVisibility: true,\n            modalChildren: <ConnexionComponent closeModal={() => this.closeModal()}/>\n        });\n    }\n\n    openProfile() {\n        console.log(\"current props\", this.props);\n        history.push(\"/profile\");\n    }\n\n    logOut(){\n        logOut();\n        history.push(\"/welcome\");\n    }\n\n    display() {\n        if (this.props.loggedIn) {\n            let token = getDecodedToken();\n            return (\n                <div key={'Deconnexion'} className={'navbar-item-div connexion-tooltip'}>\n                    <div className={'navbar-item-link loggin-button'}>\n                        {token.surname ? token.surname : ''}\n                    </div>\n                    <div className={\"tooltip-content\"}>\n                        {this.userInfosToDisplay(token)}\n                        <div className={\"form-helper-button logout-button\"} onClick={(e) => {\n                            e.stopPropagation();\n                            this.logOut()\n                        }}>\n                            Deconnexion\n                        </div>\n                        <div className={\"user-profile-link\"} onClick={() => this.openProfile()}>\n                            {\"Acceder au Profile\"}\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div key={'Connexion'} className={'navbar-item-div '}>\n                    <div\n                        /* to={'/connexion'}*/\n                        className={'navbar-item-link loggin-button'}\n                        onClick={() => this.openLoginModal()}\n                    >\n                        {'Connexion'}\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    closeModal() {\n        this.setState({\n                modalVisibility: false,\n                modalChildren: \"\"\n            });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ModalComponent\n                    visible={this.state.modalVisibility}\n                    onClose={() => this.closeModal()}\n                >\n                    {this.state.modalChildren}\n                </ModalComponent>\n                {this.display()}\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nexport default Connexion;","import React, {Component} from 'react';\nimport './NavBar.css';\nimport {Link,Redirect} from 'react-router-dom';\nimport Connexion from \"../ConnexionComponent/Connexion\";\n\nimport history from '../../history';\n\n\n\nexport default class NavBar extends Component {\n    tableauNavbar = [\n        {title: 'Contacts', redirectionAddress: '/contacts'},\n    ];\n    loggedInTableauNavbar = [\n      //  {title: 'AlphaM', redirectionAddress: '/welcome'},\n        {\n            title: 'Cours', redirectionAddress: '/courses',\n            subItems:[\n                {title: 'Administration', redirectionAddress: '/courses/administration'},\n                ]\n        },\n        {title: 'TESTS', redirectionAddress: '/mcqs'},\n        {title: 'Contacts', redirectionAddress: '/contacts',\n            subItems:[\n                {title: 'Administration', redirectionAddress: '/contacts/administration'},\n            ]\n        },\n        {title: 'Users', redirectionAddress: '/users'},\n    ];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    handleRedirect(url){\n        return (<Redirect to={url}/>);\n    }\n\n    checkActive(address){\n        let location = history.location.pathname || \" \";\n        if(!location.search(address)){\n            return \"active-menu\";\n        }else {\n            return \"non-active-menu\";\n        }\n    };\n    render() {\n        let tableauToUse = this.props.loggedIn ? this.loggedInTableauNavbar : this.tableauNavbar;\n        return (\n            <div className={' navbar-component lg-only full-width'}>\n                <div className={'nav-brand'}>\n                    <div key={'AlphaM'} className={'navbar-item-div '}>\n                        <Link\n                                to={'/welcome'}\n                                className={'navbar-item-link login-button '+this.checkActive('/welcome')}\n                            >\n                                Home\n                            </Link>\n                    </div>\n                </div>\n                <div className={'navbar-items-block'}>\n                        {tableauToUse.map(x =>\n                            <div key={x.title} className={'navbar-item-div'}>\n                                <Link\n                                    to={x.redirectionAddress}\n                                    className={'navbar-item-link '+this.checkActive(x.redirectionAddress)}\n                                >\n                                    {x.title + (x.content ? JSON.stringify(this.props[x.content]) : '')}\n                                </Link>\n                                {\n                                    x.subItems?\n                                        <div className={\"sub-menus-div\"}>\n                                            {x.subItems.map(subitem=>\n                                                <div key={subitem.title} className={'navbar-item-div'}>\n                                                    <Link\n                                                        to={subitem.redirectionAddress}\n                                                        className={'navbar-item-link '}\n                                                    >\n                                                        {subitem.title + (subitem.content ? JSON.stringify(this.props[x.content]) : '')}\n                                                    </Link>\n                                                </div>\n                                            )}\n                                        </div>\n\n                                        :\"\"\n                                }\n\n                            </div>\n\n                        )}\n                    </div>\n                <div className={'navbar-right-side'}>\n                    <Connexion  loggedIn={this.props.loggedIn} handleRedirect={(url)=>this.handleRedirect(url)}/>\n                </div>\n            </div>\n        );\n    }\n}\n\n","/**\n * Created by Cyrille on 26/11/2018.\n */\nimport React, { Component } from 'react';\nimport './welcome.css';\n\nclass Welcome extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className='welcome'>\n                    <div className='welc_text'> {'Online Courses'}</div>\n\n                    <div className='welc_slogan'>\n                        {'Apprenez en Toute Simplicité !!'}\n                    </div>\n                </div>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Welcome;","import React,{Component} from 'react';\nimport './registerforcourse.css';\nimport {ButtonHelper} from \"../HelperComponent/FormHelper\";\nimport { getDecodedToken  } from '../../server/axiosInstance';\n\nclass RegisterForCourse extends Component{\n    constructor(props){\n        super(props);\n        this.state={ registered:this.registrationState() }\n    }\n\n    registrationState(){\n        let user=getDecodedToken();\n        let student=[];\n        if(user.hasOwnProperty('student')){\n            student=user.student;\n            if(student.indexOf(this.props.course._id) === -1){\n                return false ;\n            }else {\n               return true ;\n            }\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                {\n                    this.state.registered?\n                        <ButtonHelper\n                            {...{\n                                name: 'courseregistrationbutton',\n                                value: 'Se Desinscrire',\n                                className: 'form-helper-button danger'\n                            }} onClick={() => this.setState({registered : !this.props.cancelregistration()}) }\n                        /> :\n                        <ButtonHelper\n                            {...{\n                                name: 'courseregistrationbutton',\n                                value: 'S\\'inscrire',\n                                className: 'form-helper-button success'\n                            }} onClick={() => this.setState({registered : this.props.newregistration() }) }\n                        />\n                }\n            </div>\n        );\n    }\n}\n\nexport  default RegisterForCourse;","import React, {Component} from 'react';\nimport './courses.css';\n\nimport {ButtonHelper, InputTextHelper} from \"../HelperComponent/FormHelper\";\nimport RegisterForCourse from \"./RegisterForCourse\";\nimport {getToken,setToken} from '../../server/axiosInstance';\nimport {ServerService} from \"../../server/ServerService\";\n\n\nclass CoursesHeader extends Component{\n    constructor(props){\n        super(props);\n        this.state={searchedElement:\"\"}\n    }\n\n    handleChange(e){\n        this.setState({ searchedElement:e.target.value });\n        console.log(\"search params \",this.state);\n        if(e.target.value===\"\"){\n            this.props.handleValidateSearch(this.state.searchedElement);\n        }\n\n    }\n\n    handleKeyPressOnSearch(event){\n        if(event.key===\"Enter\"){\n            this.props.handleValidateSearch(this.state.searchedElement);\n        }\n        console.log(\"after state \",this.state);\n    }\n\n    render(){\n\n        let buttonnewcourse={\n            name:\"newuserbutton\",\n            value:\"Ajouter un cours\",\n            className:\"form-helper-button success\",\n            onClick:()=>{this.props.handleRedirection('/createcourse')}\n        };\n        let inputsearchparams={\n            type:'text',\n            name : 'input-course-search',\n            className : \"search-input form-helper-input \",\n            placeholder :'Course Title',\n            autoFocus:true\n        };\n\n        return(\n            <React.Fragment>\n                <div className={\"courses-search-new-div\"}>\n                    <div className={\"div-search-block  \"}\n                         onKeyPress={(event)=>{this.handleKeyPressOnSearch(event)}}\n                    >\n                        <InputTextHelper {...inputsearchparams} onChange={(e)=>this.handleChange(e)} />\n\n                        <div className={\"div-img-search\"}>\n                            <img src={\"/images/search.png\"}\n                                 alt={\"Search\"}\n                                 onClick={()=>this.props.handleValidateSearch(this.state.searchedElement)}\n                                 className={\"button-image-user-search\"}/>\n                        </div>\n\n                    </div>\n                    <div className={'new-user-button'}>\n                        <ButtonHelper {...buttonnewcourse} />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport class CoursesList extends Component{\n\n    newregistration(course){\n        return  ServerService.postToServer('courses/newRegistration',\n            {\n                token:getToken(),\n                course:course\n\n            }).then((response)=>{\n            if(response.status=== 200){\n                console.log('Response',response);\n                setToken(response.data);\n                return (true);\n            }else {\n                return false;\n            }\n        });\n    }\n\n    cancelregistration(course){\n        return ServerService.postToServer('courses/cancelRegistration',\n            {\n                token:getToken(),\n                course:course\n            }).then((response)=>{\n            if(response.status===200){\n                console.log('Response',response);\n                setToken(response.data);\n                return (true);\n            }else {\n                return false;\n            }\n        });\n    }\n\n    handleClick(course){\n        this.props.openCourse(course);\n    }\n    showInscriptionOptions(course){\n        if(this.props.loggedIn){\n            return(\n                <div className={\"tooltip-content\"} onClick={e=>e.stopPropagation()}>\n                    <RegisterForCourse\n                        course={course}\n                        newregistration={async ()=> await this.newregistration(course)}\n                        cancelregistration={async ()=> await this.cancelregistration(course)}                                                         register={()=>this.register(course)\n                    }\n                    />\n                </div>\n            );\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <div className={'courses-list-div'}>\n                    {\n                        this.props.courses.map((course,key)=>{\n                            return(\n                                <div key={key} onClick={(e)=>this.handleClick(course)} className={'course-item col-3 tooltip'}>\n                                    <div>\n                                        <img src={\"images/prem_couv.jpg\"}  className={'course-cover-image'} alt={'Premiere de couverture'}/>\n                                        <div className={\"course-description\"}>\n                                            {course.description}\n                                        </div>\n                                    </div>\n                                    <div className={\"course-title\"}>{course.title}</div>\n                                    {this.showInscriptionOptions(course)}\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport class CoursesListByDepartment extends Component{\n\n    newregistration(course){\n        return  ServerService.postToServer('courses/newRegistration',\n            {\n                token:getToken(),\n                course:course\n\n            }).then((response)=>{\n            if(response.status=== 200){\n                console.log('Response',response);\n                setToken(response.data);\n                return (true);\n            }else {\n                return false;\n            }\n        });\n    }\n\n    cancelregistration(course){\n        return ServerService.postToServer('courses/cancelRegistration',\n            {\n                token:getToken(),\n                course:course\n            }).then((response)=>{\n                if(response.status===200){\n                    console.log('Response',response);\n                    setToken(response.data);\n                    return (true);\n                }else {\n                    return false;\n                }\n            });\n    }\n\n    handleClick(course){this.props.openCourse(course);}\n\n     showInscriptionOptions(course){\n       if(this.props.loggedIn){\n            return(\n                <div className={\"tooltip-content\"} onClick={e=>e.stopPropagation()}>\n                    <RegisterForCourse\n                        course={course}\n                        newregistration={async ()=> await this.newregistration(course)}\n                        cancelregistration={async ()=> await this.cancelregistration(course)}                                                         register={()=>this.register(course)\n                    }\n                    />\n                </div>\n            );\n       }\n    }\n\n    displayCourses(){\n        return(\n            this.props.courses.map((department,key)=>{\n                return(\n                    <div key={key} className={\"department-level-div\"}>\n                        <h5 className={\"department-title\"}> {department.department.label}</h5>\n                        <div className={\"department-courses-div\"}>\n                            {\n                                department.specialities.map((speciality,key)=>{\n                                    return(\n                                        <div key={key}>\n                                            <h5 className={\"speciality-title\"}> {speciality.speciality.label}</h5>\n                                            <div className={\"speciality-content-div\"}>\n                                                {\n                                                    speciality.courses.map((course,key)=>{\n                                                        return(\n                                                            <div key={key} onClick={(e)=>this.handleClick(course)} className={\"course-title\"}>\n                                                                {course.title}\n                                                            </div>\n                                                        );\n                                                    })\n                                                }\n                                            </div>\n                                        </div>\n                                    );\n                                })\n                            }\n                        </div>\n                    </div>\n                );\n            })\n        );\n    }\n\n    render(){\n        return(\n            <div>\n                <div className={'courses-list-div'}>\n                    {\n                        this.displayCourses()\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Courses extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            courses:[]\n        }\n    }\n\n    componentDidMount(){\n        ServerService.getFromServer('courses/getCoursesByDepartment').then((response)=>{\n            if(response.status===200){\n                console.log(\"courses list response \",response.data);\n                this.setState({courses:response.data });\n            }\n        });\n    }\n\n    handleRedirection(url){\n        this.props.history.push(url);\n    }\n\n    handleOpenCourse(course){\n        console.log(this.props);\n        this.props.history.push('/course/'+course._id);\n    }\n\n    handleValidateSearch(data){\n        console.log(\"data sended \",data);\n        if(!data){\n            this.componentDidMount();\n        }else {\n            ServerService.postToServer('/courses/findCoursesFromTitle', {title:data}).then((response) => {\n                if(response.status===200){\n                    console.log(\"find results \",response.data);\n                    this.setState({courses:response.data});\n                }else {\n                    console.log('find error ',response.data.errorMessage);\n                }\n            });\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <CoursesHeader\n                    handleRedirection={(url)=>this.handleRedirection(url)}\n                    handleValidateSearch={(data)=>this.handleValidateSearch(data)}\n                />\n                <CoursesListByDepartment\n                    courses={this.state.courses}\n                    openCourse = {(course)=>this.handleOpenCourse(course)}\n                    loggedIn = {this.props.loggedIn}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Courses;\n\n","import React,{Component} from 'react';\nimport './newteacher.css';\nimport {ButtonHelper, InputTextHelper} from \"../HelperComponent/FormHelper\";\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport {ServerService} from \"../../server/ServerService\";\nimport {displayMessage} from \"../../server/axiosInstance\";\n\n\nclass AccountView extends Component{\n    render(){\n        return(\n            <div className={\"teacher-to-add-div\"}>\n                <div>\n                    <div> {this.props.user.email} </div>\n                    <div>{this.props.user.name + \" \" + this.props.user.surname}</div>\n                </div>\n                <div>\n                    {\n                        this.props.current?\n                            <ButtonHelper {...\n                                {value:'-',className:\"form-helper-button danger\"}}\n                                          onClick={()=>this.props.handleValidation()}\n                            />\n                            :\n                            <ButtonHelper {...\n                                {value:'+',className:\"form-helper-button success\"}}\n                                          onClick={()=>this.props.handleValidation()}\n                            />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Teachers extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            currentTeachers:[],\n            emails:[],\n            selectedAccounts:[],\n            dataToSend: {\n                user: {},\n                course: this.props.course\n            }\n        }\n    }\n\n    handleValidateSearch(e){\n        if(this.state.emails.length===0){\n            displayMessage(\"Veuillez Saisir un email valide SVP !!\");\n        }else {\n            ServerService.postToServer('courses/getUsers/',{emails:this.state.emails}).then((response)=>{\n                if(response.status===200){\n                    console.log('acc list',response.data);\n                    let currentteachers=this.state.currentTeachers;\n                    let selectedaccounts =this.state.selectedAccounts;\n                    response.data.forEach((user)=>{\n                        console.log(\"a user \",user);\n                        if(user.hasOwnProperty('teacher') && user['teacher'].indexOf(this.props.course._id) >=0){\n                            currentteachers.push(user);\n                        }else {\n                            selectedaccounts.push(user);\n                        }\n                    });\n                    this.setState({\n                        currentTeachers:currentteachers,\n                        selectedAccounts:selectedaccounts\n                    });\n                    console.log(\"new state\",this.state);\n                }\n            });\n        }\n    }\n\n    handleChange(e) {\n        let emails=[];\n        emails=e.target.value.split(';');\n        emails = [...new Set(emails)];// remove duplicates\n      /*  emails = emails.filter((value,index)=>{\n            return  validateEmail(value);\n        }); //remove empty address*/\n        this.setState({emails:emails});\n    }\n\n    handleValidation(user,action){\n        console.log(\"user\",user);\n        let newdatatosend=this.state.dataToSend;\n        newdatatosend['user']=user;\n        this.setState({ dataToSend:newdatatosend });\n        let request_url=\"\";\n        console.log(\"data to be sended \",this.state.dataToSend);\n\n        if(action==='add'){\n            request_url=\"courses/addTeacher\";\n        }else {\n            request_url=\"courses/removeTeacher\";\n        }\n\n        let currentteachers=this.state.currentTeachers;\n        let selectedaccounts =this.state.selectedAccounts;\n\n        ServerService.postToServer(request_url,this.state.dataToSend)\n            .then((response)=>{\n                console.log(\"teacher response \",response);\n                if(response.status===200){\n                    if(action==='add'){\n                        currentteachers.push(user);\n                        selectedaccounts = selectedaccounts.filter((value,index)=>{\n                            return value.email !== user.email;\n                        });\n                    }else {\n                        selectedaccounts.push(user);\n                        currentteachers = currentteachers.filter((value,index)=>{\n                            return value.email !== user.email;\n                        });\n                        console.log('response',response.data);\n                    }\n                    this.setState({\n                        currentTeachers:currentteachers,\n                        selectedAccounts:selectedaccounts\n                    });\n                }\n            });\n    }\n\n    render(){\n        let inputsearchparams={\n            type:'text',\n            name : 'input-user-search',\n            className : \"search-input form-helper-input \",\n            placeholder :'Email, Name , Surname, pseudo (Username)'\n        };\n        return(\n            <div className={\"search-and-list-accounts-block\"}>\n                <div className={\"div-search-block \"}>\n                    <InputTextHelper {...inputsearchparams} onChange={(e)=>this.handleChange(e)}/>\n                    <div className={\"div-img-search\"}>\n                        <img src={\"/images/search.png\"}\n                             alt={\"Search\"}\n                             onClick={(e)=>this.handleValidateSearch(e)}\n                             className={\"button-image-user-search\"}/>\n                    </div>\n                </div>\n                <div>\n                    {\n                        this.state.selectedAccounts.map((user,key)=>{\n                            return(<AccountView user={user} key={key} handleValidation={()=>this.handleValidation(user,'add')}/>);\n                        })\n                    }\n                </div>\n                <div>\n                    {\n                        this.state.currentTeachers.map((user,key)=>{\n                            return(<AccountView user={user} key={key} current handleValidation={()=>this.handleValidation(user,'remove')} />);\n                        })\n                    }\n                </div>\n                <div>\n                    {this.state.selectedAccounts.length===0?\"No Result For the Moment!\":\"\"}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass NewTeacher extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            modalVisibility:false,\n            modalChildren:\"\"\n        }\n    }\n    handleNewTeacherClick(){\n        this.setState({\n            modalVisibility:true,\n            modalChildren:<Teachers course={this.props.course}/>\n        });\n    }\n    handleModalClose(){\n        this.setState({\n            modalVisibility:false,\n            modalChildren:\"\"\n        });\n    }\n\n    render(){\n        return(\n            <div>\n                <ModalComponent\n                    visible={this.state.modalVisibility}\n                    onClose={()=>this.handleModalClose()}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n                <ButtonHelper\n                    {...{\n                        name: 'newteacher',\n                        value: 'Assign a Teacher',\n                        className: 'form-helper-button hr-button-block success'\n                    }} onClick={(e) => this.handleNewTeacherClick(e) }\n                />\n            </div>\n        );\n    }\n}\n\nexport default NewTeacher;","import React, {Component} from 'react';\nimport './coursecreation.css';\nimport {ButtonHelper, InputHelper, InputTextHelper, LabelHelper} from \"../HelperComponent/FormHelper\";\nimport ReactQuill from 'react-quill'; // ES6\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport {ServerService} from \"../../server/ServerService\";\nimport {displayMessage} from \"../../server/axiosInstance\";\n\nlet formats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent', 'align',\n    'link', 'image', 'formula',\n];\n\nlet modules = {\n    toolbar: [\n        [{'header': [1, 2, false]}],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n        [{'size': ['small', false, 'large', 'huge']}],\n        [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n        [{'align': []}],\n        ['link', 'image', 'formula'],\n        ['clean'],\n    ],\n};\n\nfunction returnField({content, defaultValue = \"\", handleChange, label = '', placeholder = ''}) {\n    return (\n        <div className={'element-field'}>\n            <LabelHelper label={label}/>\n            <ReactQuill\n                value={content || defaultValue}\n                modules={modules}\n                formats={formats}\n                placeholder={placeholder}\n                onChange={handleChange}\n            />\n        </div>\n    );\n}\n\nfunction displayField(content = \"\") {\n    if (content) {\n        return (<ReactQuill value={content || \"\"} modules={{toolbar: false}} readOnly={true}/>);\n    } else {\n        return (\"\");\n    }\n}\n\nfunction deleteElement(collection, data, callback) {\n    console.log(\" you're about to delete\");\n    console.log(\" collection\", collection, \"data\", data);\n\n    ServerService.postToServer(\"/crudOperations/delete\", {collection: collection, data: data})\n        .then((response) => {\n            if (response.status === 200) {\n                if (callback) {\n                    callback();\n                }\n            } else {\n                console.log(\"deletion error\", response.data[\"errorMessage\"]);\n            }\n        });\n}\n\nclass CourseCreationForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: this.props.title || \"\",\n            content: this.props.content || \"\",\n        }\n    }\n\n    handleChangeTitle(e) {\n        this.setState({title: e.target.value});\n        console.log(this.state);\n    }\n\n    handleChange(value) {\n        this.setState({content: value === \"<p><br></p>\" ? \"\" : value});\n        console.log(this.state);\n    }\n\n    handleValidation() {\n        if (this.state.title.length === 0) {\n            alert(\" The Title Should not be empty !!\");\n        } else {\n            return this.props.validation(this.state);\n        }\n    }\n\n    handleCancel() {\n        this.props.handleCancel()\n    }\n\n    render() {\n        return (\n            <div>\n                <InputTextHelper {...{\n                    name: \"title\",\n                    value: this.state.title,\n                    placeholder: \"Title\",\n                    label: \"Title\",\n\n                }}\n                                 onChange={(e) => this.handleChangeTitle(e)}\n                />\n\n                {\n                    returnField({\n                        content: this.state.content,\n                        handleChange: (e) => this.handleChange(e),\n                        label: \"Content\",\n                        placeholder: \"Content\"\n                    })\n                }\n                <div className={\"hr-button-block\"}>\n                    <ButtonHelper {...{name: \"validate\", value: \"Validate\", className: \"form-helper-button success\"}}\n                                  onClick={() => this.handleValidation()}/>\n                    <ButtonHelper {...{name: \"annuler\", value: \"Annuler\", className: \"form-helper-button danger\"}}\n                                  onClick={() => this.handleCancel()}/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n/**\n *\n * CourseCreation Class for creation an update of courses\n *  // the mode specify if you are creating or modifying the course\n *\n */\n\nclass SubSection extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"\",\n            content: \"\",\n            mode: this.props.mode || \"creation\"\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.subsection) {\n            this.setState(\n                Object.assign(\n                    {},\n                    this.state,\n                    {...this.props.subsection},\n                    {mode: this.props.mode || \"lecture\"}\n                )\n            );\n        }\n    }\n\n    async setNewValues(data) {\n        let updatedSubSection = await ServerService.updateElementInDataBase(\n            \"subsections\",\n            {_id: this.state._id},\n            data\n        );\n        console.log(\"update result \", updatedSubSection);\n        this.setState({...data});\n        this.props.closeModal();\n    }\n\n    handleModifySubSection() {\n        let content =\n            <CourseCreationForm\n                title={this.state.title}\n                content={this.state.content}\n                handleCancel={() => this.props.closeModal()}\n                validation={(data) => this.setNewValues(data)}\n            />\n        ;\n        this.props.openModal(content);\n    }\n\n    handleDeleteSubSection() {\n        deleteElement(\"subsections\", this.state, () => {\n            this.props.handleUpdateSubSections(this.state, \"delete\");\n        });\n    }\n\n    displayOptions() {\n        if (this.state.mode === \"update\") {\n            return (\n                <div className={\"create-course-options-div\"}>\n                    <ButtonHelper {...{\n                        name: \"modifySubSection\",\n                        value: 'Modify Sub Section',\n                        className: \"form-helper-button\"\n                    }} onClick={() => {\n                        this.handleModifySubSection()\n                    }}\n                    />\n                    <ButtonHelper {...{\n                        name: \"deleteSubSection\",\n                        value: 'Delete Sub Section',\n                        className: \"form-helper-button danger\"\n                    }} onClick={() => {\n                        this.handleDeleteSubSection()\n                    }}\n                    />\n                </div>\n            );\n        }\n    }\n\n    displayContent() {\n        return (\n            <div>\n                <h5>{this.state.title}</h5>\n                {displayField(this.state.content)}\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className={\"sub-elements-content\"}>\n                {this.displayOptions()}\n                <div className={\"content-from-quill\"}> {this.displayContent()}</div>\n            </div>\n        );\n    }\n\n}\n\nclass Section extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"\",\n            content: \"\",\n            subsections: [],\n            mode: this.props.mode || \"creation\"\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.section) {\n            this.setState(\n                Object.assign(\n                    {},\n                    this.state,\n                    {...this.props.section},\n                    {mode: this.props.mode || \"update\"}\n                )\n            );\n        }\n    }\n\n    async setNewValues(data) {\n        let updatedSection = await ServerService.updateElementInDataBase(\n            \"sections\",\n            {_id: this.state._id},\n            data\n        );\n        console.log(\"update result \", updatedSection);\n        this.setState({...data});\n        this.props.closeModal();\n    }\n\n    handleModifySection() {\n        let content =\n            <CourseCreationForm\n                title={this.state.title}\n                content={this.state.content}\n                handleCancel={() => this.props.closeModal()}\n                validation={(data) => this.setNewValues(data)}\n            />\n        ;\n        this.props.openModal(content);\n    }\n\n    handleDeleteSection() {\n        deleteElement(\"sections\", this.state, () => {\n            this.props.handleUpdateSections(this.state, \"delete\");\n        });\n    }\n\n    displayOptions() {\n        if (this.state.mode === \"update\") {\n            return (\n                <div className={\"create-course-options-div\"}>\n                    <ButtonHelper {...{\n                        name: \"modifySection\",\n                        value: 'Modify Section',\n                        className: \"form-helper-button\"\n                    }} onClick={() => {\n                        this.handleModifySection()\n                    }}\n                    />\n                    <ButtonHelper {...{\n                        name: \"deleteSubSection\",\n                        value: 'Delete Section',\n                        className: \"form-helper-button danger\"\n                    }} onClick={() => {\n                        this.handleDeleteSection()\n                    }}\n                    />\n                </div>\n            );\n        }\n\n    }\n\n    async addSubSection(data) {\n        let subsections = this.state.subsections;\n        let elementProperties = {\n            _id: this.state._id,\n            title: this.state.title,\n            content: this.state.content,\n            subsections: this.state.subsections,\n        };\n\n        let dataTosend = {\n            element: {\n                elementName: 'section',\n                elementProperties: elementProperties\n            },\n            childelement: data,\n        };\n        let insertedSubSection = await ServerService.postToServer('courses/newSubElement', dataTosend).then(\n            (response) => {\n                if (response.status === 200) {\n                    return response.data;\n                }\n            });\n        console.log(\"inserted SubSection\", insertedSubSection);\n        subsections.push(insertedSubSection);\n        this.setState({subsections: subsections});\n        this.props.closeModal();\n    }\n\n    handleAddSubSection() {\n        let content = <CourseCreationForm handleCancel={() => this.props.closeModal()}\n                                          validation={(data) => this.addSubSection(data)}/>;\n        this.props.openModal(content);\n    }\n\n    displayContent() {\n        return (\n            <div>\n                <h4>{this.state.title}</h4>\n                {displayField(this.state.content)}\n            </div>\n        );\n    }\n\n    handleUpdateSubSections(subsection, action = \"\") {\n        if (action === \"update\") {\n\n        } else if (action === \"delete\") {\n            let newsubsections = this.state.subsections;\n            newsubsections = newsubsections.filter((value, index) => {\n                return (value._id !== subsection._id)\n            });\n            this.setState({subsections: newsubsections});\n        }\n\n    }\n\n    showSubSections() {\n        return <div className={\"sub-element-content\"}>\n            {\n                this.state.subsections.map((subsection, key) => {\n                    return (\n                        <div key={key}>\n                            <SubSection\n                                subsection={subsection}\n                                mode={this.state.mode}\n                                openModal={(content) => this.props.openModal(content)}\n                                closeModal={() => this.props.closeModal()}\n                                handleUpdateSubSections={\n                                    (subsection, action) => this.handleUpdateSubSections(subsection, action)\n                                }\n                            />\n                        </div>\n                    );\n                })\n            }\n        </div>\n    }\n\n    newSubSectionOptions() {\n        if (this.state.mode === \"update\") {\n            return (\n                <div className={\"create-course-options-div\"}>\n                    <ButtonHelper {...{\n                        name: \"newSubSectionButton\",\n                        value: \"+ Sub Section\",\n                        className: \"form-helper-button\"\n                    }} onClick={() => this.handleAddSubSection()}/>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.displayOptions()}\n                <div className={\"content-from-quill\"}> {this.displayContent()} </div>\n                {this.newSubSectionOptions()}\n                <div>{this.showSubSections()}</div>\n            </div>\n        );\n    }\n\n}\n\nclass Chapter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"\",\n            content: \"\",\n            sections: [],\n            mode: this.props.mode || \"creation\"\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.chapter) {\n            this.setState(\n                Object.assign(\n                    {},\n                    this.state,\n                    {...this.props.chapter},\n                    {mode: this.props.mode || \"lecture\"}\n                )\n            );\n        }\n    }\n\n    async setNewValues(data) {\n        let updatedChapter = await ServerService.updateElementInDataBase(\n            \"chapters\",\n            {_id: this.state._id},\n            data\n        );\n        console.log(\"update result \", updatedChapter);\n        this.setState({...data});\n        this.props.closeModal();\n    }\n\n    handleModifyChapter() {\n        let content =\n            <CourseCreationForm\n                title={this.state.title}\n                content={this.state.content}\n                handleCancel={() => this.props.closeModal()}\n                validation={(data) => this.setNewValues(data)}\n            />\n        ;\n        this.props.openModal(content);\n    }\n\n    displayOptions() {\n        if (this.state.mode === \"update\") {\n            return (\n                <div className={\"create-course-options-div\"}>\n                    <ButtonHelper {...{\n                        name: \"modifyChapter\",\n                        value: 'Modify Chapter',\n                        className: \"form-helper-button\"\n                    }} onClick={() => {\n                        this.handleModifyChapter(\"modify\")\n                    }}\n                    />\n                </div>\n            );\n        }\n    }\n\n    async addSection(data) {\n        let sections = this.state.sections;\n        let elementProperties = {\n            _id: this.state._id,\n            title: this.state.title,\n            content: this.state.content,\n            sections: this.state.sections,\n        };\n\n        let dataTosend = {\n            element: {\n                elementName: 'chapter',\n                elementProperties: elementProperties\n            },\n            childelement: data,\n        };\n\n        let insertedSection = await ServerService.postToServer('courses/newSubElement', dataTosend).then(\n            (response) => {\n                if (response.status === 200) {\n                    return response.data;\n                }\n            });\n        console.log(\"inserted Section\", insertedSection);\n        sections.push(insertedSection);\n        this.setState({sections: sections});\n        this.props.closeModal();\n    }\n\n    handleAddSection() {\n        let content = <CourseCreationForm\n            handleCancel={() => this.props.closeModal()}\n            validation={(data) => this.addSection(data)}\n        />;\n        this.props.openModal(content);\n    }\n\n    displayContent() {\n        return (\n            <div>\n                <h3>{this.state.title}</h3>\n                <div className={\"content-div\"}>{displayField(this.state.content)}</div>\n            </div>\n        );\n    }\n\n    showSections() {\n        return <div className={\"sub-element-content\"}>\n            {\n                this.state.sections.map((section, key) => {\n                    return (\n                        <Section section={section} key={key}\n                                 mode={this.state.mode}\n                                 openModal={(content) => this.props.openModal(content)}\n                                 closeModal={() => this.props.closeModal()}\n                                 handleUpdateSections={(section, action) => this.handleUpdateSections(section, action)}\n                        />\n                    );\n                })\n            }\n        </div>\n    }\n\n    newSectionOptions() {\n        if (this.state.mode === \"update\") {\n            return (\n                <div className={\"create-course-options-div\"}>\n                    <ButtonHelper {...{\n                        name: \"newSectionButton\",\n                        value: \"+ Section\",\n                        className: \"form-helper-button\"\n                    }} onClick={() => this.handleAddSection()}/>\n                </div>\n            )\n        }\n    }\n\n    handleUpdateSections(section, action = \"\") {\n        if (action === \"update\") {\n\n        } else if (action === \"delete\") {\n            let newsections = this.state.sections;\n            newsections = newsections.filter((value, index) => {\n                return (value._id !== section._id)\n            });\n            this.setState({sections: newsections});\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"content-div\"}>\n                <div className={\"chapter-upper-nav\"}>\n                    <div onClick={() => this.props.reopenCourse()} className={\"nav-link-div\"}>return to course</div>\n\n                </div>\n                {this.displayOptions()}\n                <div className={\"content-from-quill\"}> {this.displayContent()} </div>\n                {this.newSectionOptions()}\n                <div>{this.showSections()}</div>\n            </div>\n        );\n    }\n\n}\n\nclass CourseAdministration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            course: \"\",\n            departments: [],\n            department: this.props.department||\"\",\n            specialities: [],\n            speciality: this.props.speciality||\"\",\n            levels: [],\n            level: this.props.level||\"\",\n            mode:this.props.mode// creation || update\n        }\n    }\n\n    async componentDidMount() {\n        await ServerService.postToServer(\"crudOperations/get\", {collection: \"departments\"}).then(response => {\n            if (response.status === 200) {\n                console.log(\"departments\", response.data);\n                this.setState({departments: response.data});\n            } else {\n                console.log(\"errpr getting departments\", response.data);\n            }\n        });\n    }\n\n    async handleElementChange(e, designation = \"\") {\n        let selectedValue = e.target.value;\n        switch (designation) {\n            case \"departments\":\n                await this.setState({specialities:[],levels:[]});\n                await ServerService.postToServer(\"crudOperations/get\", {\n                    collection: \"specialities\",\n                    options: {\n                        queries: {\n                            department: selectedValue\n                        }\n                    }\n                }).then(async (response) => {\n                    if (response.status === 200) {\n                        console.log(\"specialities result\", response.data);\n                        let department = \"\";\n                        this.state.departments.forEach((value, index) => {\n                            if (value._id === selectedValue) {\n                                department = this.state.departments[index];\n                            }\n                        });\n                        await this.setState({\n                            department: department,\n                            specialities: response.data\n                        });\n                    } else {\n                        console.log(\"error getting specialities\", response.data['errorMessage']);\n                    }\n                });\n                break;\n            case \"specialities\":\n                let speciality = \"\";\n                await this.setState({levels:[]});\n                this.state.specialities.forEach((value, index) => {\n                    if (value._id === selectedValue) {\n                        speciality = this.state.specialities[index];\n                    }\n                });\n                await this.setState({\n                    speciality: speciality,\n                    levels: speciality.levels || []\n                });\n                break;\n            case \"levels\":\n                await this.setState({level: this.state.levels[selectedValue]});\n                break;\n            default:break;\n        }\n\n        await this.props.setCourseAdminValues({\n            department:this.state.department,\n            speciality:this.state.speciality,\n            level:this.state.level\n        });\n\n    }\n\n    showElements(designation = \"\") {\n        let params=\"\";\n        if (designation && designation !== \"levels\") {\n             params = {\n                name: designation,\n                type: \"select\",\n                options: this.state[designation],\n                value: \"_id\",\n                display: \"label\"\n            };\n        } else if (designation === \"levels\") {\n             params = {\n                name: designation,\n                type: \"select\",\n                options: this.state[designation],\n            };\n        }\n\n        if(this.state[designation].length>0 && params){\n            return (\n                <div className={\"course-administration-block\"}>\n                    <h4>{designation.toLocaleUpperCase()}</h4>\n                    <InputHelper {...params} onChange={(e) => this.handleElementChange(e, designation)}/>\n                </div>\n            )\n        }\n    }\n\n    handleUpdate(){\n        this.props.modifyCourseAdministration();\n    }\n    displayContent(){\n        if(this.state.mode===\"creation\" || this.state.mode===\"update\" ){\n            return(\n                <div className={\"course-administration-section\"}>\n                    {this.showElements(\"departments\")}\n                    {this.showElements(\"specialities\")}\n                    {this.showElements(\"levels\")}\n                    {this.state.mode===\"update\"?\n                        <div className={\"hr-button-block\"}>\n                            <ButtonHelper {...{\n                                name:\"modifycourseadmin\",\n                                value:\"Modify\",\n                                className:\"form-helper-button success\"\n                            }} onClick={()=>this.handleUpdate()}\n                            />\n                        </div>\n                        :\"\"}\n                </div>\n            );\n        }\n\n        return(this.displayCurrentValues());\n\n    }\n\n    displayCurrentValues(){\n        return(\n            <div className={\"course-administration-values\"}>\n                <div>Department : {this.state.department.label}</div>\n                <div>Speciality : {this.state.speciality.label}</div>\n                <div>Level : {this.state.level}</div>\n            </div>\n        );\n    }\n\n    render() {\n        return (<div>{this.displayContent()}</div>);\n    }\n}\n\nclass Course extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            department: \"\",\n            speciality: \"\",\n            level: \"\",\n            title: \"\",\n            content: \"\",\n            chapters: [],\n            mode: this.props.mode || \"creation\"\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.course) {\n            await this.setState(Object.assign({}, this.state, {...this.props.course}));\n            console.log(\"course state \",this.state);\n        }\n    }\n\n    async setCourseAdminValues(newValues){await this.setState(newValues);   console.log(\"course state \",this.state);}\n\n    async setNewValues(data) {\n        let updatedCourse = await ServerService.updateElementInDataBase(\n            \"courses\",\n            {_id: this.state._id},\n            data\n        );\n        console.log(\"update result \", updatedCourse);\n        this.setState({...data});\n        this.props.closeModal();\n    }\n\n    async saveNewCourse(data) {\n        if(!this.state.department || !this.state.speciality || !this.state.level){\n            displayMessage(\"Make Sure, You have specified Department, Speciality and the Level !!\");\n        }else{\n            let dataToSend=Object.assign({}, {\n                    department: this.state.department,\n                    speciality: this.state.speciality,\n                    level: this.state.level,\n                    title: this.state.title,\n                    content: this.state.content,\n                    chapters: this.state.chapters,\n                }, data);\n            await ServerService.insertElementInDataBase('courses', dataToSend);\n            this.setState(Object.assign({}, dataToSend, {mode: \"update\"}));\n            this.props.closeModal();\n        }\n\n    }\n\n    handleModifyCourse(action = \"new\") {\n\n        let content = action === \"new\" ?\n            <React.Fragment>\n                <CourseAdministration\n                    mode={this.state.mode}\n                    setCourseAdminValues={\n                        (newValues)=>this.setCourseAdminValues(newValues)\n                    }\n                />\n                <CourseCreationForm\n                    handleCancel={() => this.props.closeModal()}\n                    validation={(data) => this.saveNewCourse(data)}\n                />\n            </React.Fragment>\n          :\n            <React.Fragment>\n                <CourseCreationForm\n                    title={this.state.title}\n                    content={this.state.content}\n                    handleCancel={() => this.props.closeModal()}\n                    validation={(data) => this.setNewValues(data)}\n                />\n\n            </React.Fragment>\n                    ;\n        this.props.openModal(content);\n    }\n\n    displayOptions() {\n\n        if (this.state.mode === \"update\") {\n            return (\n                <div className={\"create-course-options-div\"}>\n                    <ButtonHelper {...{\n                        name: \"modifyCourse\",\n                        value: 'Modify Course',\n                        className: \"form-helper-button\"\n                    }} onClick={() => {\n                        this.handleModifyCourse(\"modify\")\n                    }}\n                    />\n                </div>\n            );\n        }\n        if (this.state.mode === \"creation\") {\n            return (\n                <div className={\"create-course-options-div\"}>\n                    <ButtonHelper {...{\n                        name: \"modifyCourse\",\n                        value: 'New Course',\n                        className: \"form-helper-button\"\n                    }} onClick={() => {\n                        this.handleModifyCourse()\n                    }}\n                    />\n                </div>\n            );\n        }\n\n    }\n\n    async addChapter(data) {\n        let chapters = this.state.chapters;\n        let elementProperties = {\n            _id: this.state._id,\n            title: this.state.title,\n            content: this.state.content,\n            chapters: this.state.chapters,\n        };\n\n        let dataTosend = {\n            element: {\n                elementName: 'course',\n                elementProperties: elementProperties\n            },\n            childelement: data,\n        };\n        let insertedChapter = await ServerService.postToServer('courses/newSubElement', dataTosend).then(\n            (response) => {\n                if (response.status === 200) {\n                    return response.data;\n                }\n            });\n        console.log(\"insertedChapter\", insertedChapter);\n        chapters.push(insertedChapter);\n        this.setState({chapters: chapters});\n        this.props.closeModal();\n    }\n\n    handleAddChapter() {\n        let content = <CourseCreationForm handleCancel={() => this.props.closeModal()}\n                                          validation={(data) => this.addChapter(data)}/>;\n        this.props.openModal(content);\n    }\n\n    modifyCourseAdministration(){\n        console.log(\"about to modify\");\n        if(this.state.department && this.state.level){\n         ServerService.postToServer(\"/crudOperations/update\",{\n             collection:\"courses\",\n             data:{_id:this.state._id},\n             update:{\n                 department:this.state.department,\n                 speciality:this.state.speciality,\n                 level:this.state.level,\n             }\n         }).then((response)=>{\n             if(response.status===200){\n                 displayMessage(\"Document modified  with suceess !! \");\n             }else {\n                 displayMessage(\"Modification failed !!\");\n             }\n         });\n        }\n    }\n\n    showCourseAdmin(){\n        if(this.state.department && this.state.level){\n            return(\n                <div>\n                    <CourseAdministration\n                        mode={this.state.mode}\n                        department={this.state.department}\n                        speciality={this.state.speciality}\n                        level={this.state.level}\n                        setCourseAdminValues={(newValues)=>this.setCourseAdminValues(newValues) }\n                        modifyCourseAdministration={(newValues)=>this.modifyCourseAdministration(newValues)}\n                    />\n                    <CourseAdministration\n                        mode=\"read\"\n                        department={this.state.department}\n                        speciality={this.state.speciality}\n                        level={this.state.level}\n                    />\n                </div>\n            )\n        }\n        else{\n            return(\n                <div>\n                    <CourseAdministration\n                        mode={this.state.mode}\n                        setCourseAdminValues={(newValues)=>this.setCourseAdminValues(newValues) }\n                        modifyCourseAdministration={(newValues)=>this.modifyCourseAdministration(newValues)}\n                    />\n                </div>\n            )\n        }\n    }\n\n    displayContent() {\n        return (\n            <div>\n                {this.showCourseAdmin()}\n                <h2> {this.state.title}</h2>\n                {displayField(this.state.content)}\n            </div>\n        );\n    }\n\n    reopenCourse() {\n        console.log(\"return to course\");\n        this.props.reopenCourse();\n    }\n\n    openChapter(chapter) {\n        let element = <Chapter chapter={chapter}\n                               openModal={(content) => this.props.openModal(content)}\n                               closeModal={() => this.props.closeModal()}\n                               mode={\"update\"}\n                               reopenCourse={() => this.reopenCourse()}\n        />;\n        this.props.displayElement(element);\n    }\n\n    handleUpdateChapters(chapter, action) {\n        if (action === \"update\") {\n\n        } else if (action === \"delete\") {\n            let newchapters = this.state.chapters;\n            newchapters = newchapters.filter((value, index) => {\n                return (value._id !== chapter._id)\n            });\n            this.setState({chapters: newchapters});\n        }\n    }\n\n    handleDeleteChapter(e, chapter) {\n        e.stopPropagation();\n        deleteElement(\"chapters\", chapter, () => {\n            this.handleUpdateChapters(chapter, \"delete\");\n        });\n    }\n\n    deleteChapterOptions(chapter) {\n        return (<ButtonHelper {...{\n            name: \"deletechapter\",\n            value: 'Delete Chapter',\n            className: \"form-helper-button danger\"\n        }} onClick={(e) => {\n            this.handleDeleteChapter(e, chapter)\n        }}\n        />)\n    }\n\n    showChapters() {\n        return <div className={\"sub-elements-list\"}>\n            {\n                this.state.chapters.map((chapter, key) => {\n                    return (\n                        <div\n                            key={key}\n                            onClick={() => this.openChapter(chapter)}\n                            className={\"sub-element-div options-tooltip\"}\n                        >\n                            <div className={\"chapter-title\"}>{chapter.title}</div>\n                            <div className=\"options-tooltip-text\">\n                                {this.deleteChapterOptions(chapter)}\n                            </div>\n                        </div>\n                    );\n                })\n            }\n        </div>\n    }\n\n    newChapterOptions() {\n        if (this.state.mode === \"update\") {\n            return (\n                <div className={\"create-course-options-div\"}>\n                    <ButtonHelper {...{\n                        name: \"newChapterButton\",\n                        value: \"+ Chapter\",\n                        className: \"form-helper-button\"\n                    }} onClick={() => this.handleAddChapter()}/>\n                </div>\n            )\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.displayOptions()}\n                <div className={\"content-from-quill\"}> {this.displayContent()} </div>\n                {this.newChapterOptions()}\n                <div>{this.showChapters()}</div>\n            </div>\n        );\n    }\n}\n\nclass CourseCreation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            course: this.props.course || {},\n            elementToDisplay: \"\",\n            mode: this.props.mode || \"creation\", //{\"creation\",\"update\"}\n            modalChildren: \"\",\n            modalVisibility: false,\n        }\n    }\n\n    async componentDidMount() {\n        let elementToDisplay = <Course mode={this.state.mode}\n                                       openModal={(content) => {\n                                           this.openModal(content)\n                                       }}\n                                       closeModal={() => this.handleModalClose()}\n                                       course={this.state.course}\n                                       displayElement={(data) => this.displayElement(data)}\n                                       reopenCourse={() => this.reopenCourse()}\n        />;\n        await this.setState({elementToDisplay: elementToDisplay});\n    }\n\n    openModal(content) {this.setState({modalChildren: content, modalVisibility: true});}\n\n    handleModalClose() {this.setState({modalChildren: \"\", modalVisibility: false});}\n\n    reopenCourse() {this.componentDidMount();}\n\n    displayElement(element) {this.setState({elementToDisplay: element});}\n\n    render() {\n        return (\n            <div className={\"course-creation-main\"}>\n                <ModalComponent visible={this.state.modalVisibility} onClose={() => this.handleModalClose()}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n\n                <div className={'course-creation-panel'}>\n                    {this.state.elementToDisplay}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CourseCreation;","import React,{Component} from \"react\";\nimport \"./navcourse.css\";\n\nlet lowerLevelCollectionName = {\n    courses: 'chapters',\n    chapters: 'sections',\n    sections: 'subsections'\n};\n\nclass NavCourse extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            selected:\"\"\n        }\n    }\n\n    handleClick(id){\n        window.scrollTo(0,document.getElementById(id).offsetTop);\n    }\n\n    displayTitle(element,level=\"courses\"){\n\n        return(\n            <div className={\"course-title-div\"}>\n                <div className={\"nav-course-title \"+this.state.selected} onClick={()=>this.handleClick(element._id)}>\n                    {element.title}\n                    </div>\n                    {\n                        element.hasOwnProperty(lowerLevelCollectionName[level])\n                        &&\n                        element[lowerLevelCollectionName[level]].length>0\n                        ?\n                            <div className={\"course-nav-sub-titles-div\"}>\n                                {\n                                    element[lowerLevelCollectionName[level]]\n                                        .map((item,key)=> <React.Fragment key={key}>\n                                            {this.displayTitle(item,lowerLevelCollectionName[level])}\n                                            </React.Fragment>)\n                                }\n                            </div>\n                        : \"\"\n                    }\n            </div>\n        );\n    }\n\n    render(){\n        return(\n            <div className={\"course-navigator-main-div\"}>\n                <h3 className={\"course-nav-title\"}>Navigation Panel</h3>\n                {this.displayTitle(this.props.course)}\n            </div>\n        )\n    }\n}\n\nexport default NavCourse;","import React, {Component} from 'react';\nimport './course.css';\nimport {ButtonHelper} from \"../HelperComponent/FormHelper\";\nimport NewTeacher from \"./NewTeacher\";\nimport {ServerService} from \"../../server/ServerService\";\nimport ReactQuill, {} from 'react-quill';\n\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport CourseCreation from \"../CoursesComponent/CourseCreation\";\nimport NavCourse from \"./NavCourse\";\n\nconst fakeCourse = {\n    title: \"\",\n    content: \"<p> Sorry this course is not availaible !!</p>\"\n};\n\nlet lowerLevelCollectionName = {\n    courses: 'chapters',\n    chapters: 'sections',\n    sections: 'subsections'\n};\n\nexport function displayElement(element, level = 'courses') {\n    if (element && (element.content||element.title)) {\n        let element_id=element._id || element;\n        //console.log(\"the element:\",element_id,\" level \",level,\" the id \",element_id);\n        return (\n            <React.Fragment>\n                <div className={'title-div'} id={element_id}>\n                    <h2>{element.title}</h2>\n                </div>\n\n                <div className={'content-div'}>\n                    {displayContent(element.content)}\n                </div>\n                <div className={\"sub-element-content\"}>\n                    {displaySubElements(element, level)}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport function displaySubElements(element, level) {\n    if (element.hasOwnProperty(lowerLevelCollectionName[level]) && element[lowerLevelCollectionName[level]].length > 0) {\n        let result = element[lowerLevelCollectionName[level]].map((subElement, key) => {\n            return (\n                <React.Fragment key={key}>\n                    {displayElement(subElement, lowerLevelCollectionName[level])}\n                </React.Fragment>\n            );\n        });\n        return (result);\n    } else {\n        return \"\";\n    }\n}\n\nfunction displayContent(content) {\n    return (<ReactQuill value={content || \"\"} modules={{toolbar: false}}  readOnly={true}/>);\n}\n\n\n\nclass Course extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            courseToDisplay: {},\n            ready:false,\n            modalChildren:\"\",\n            modalVisibility:false,\n        }\n    }\n\n    componentWillMount() {\n         ServerService.postToServer(\"/courses/getHoleCourse\", {course: this.props.match.params.id}).then((response) => {\n             if (response.status === 200) {\n                 console.log(\"hole course result\", response.data);\n                 this.setState({\n                     courseToDisplay: response.data,\n                     ready:true\n                 });\n             } else {\n                 this.setState({\n                     courseToDisplay: fakeCourse,\n                     ready:true\n                 });\n                 console.log(\"Error getting hole course\", response.data['errorMessage']);\n             }\n         });\n    }\n\n    displayCourse(){\n        if(this.state.ready){\n            return displayElement(this.state.courseToDisplay,\"courses\",this.addRef);\n\n        }else{\n            return<div style={{textAlign:'center'}}><img alt=\"\" src={'/images/al.gif'}/></div>\n        }\n    }\n\n\n    openModal(content){\n        this.setState({\n            modalChildren:content,\n            modalVisibility:true\n        });\n    }\n\n    closeModal(){\n        this.setState({\n            modalChildren:\"\",\n            modalVisibility:false\n        });\n    }\n\n    modifyCourse(){\n        let content=<CourseCreation course={this.state.courseToDisplay} mode=\"update\"/>;\n        this.openModal(content);\n    }\n    deleteCourse(){\n        let dataToSend={\n          collection:\"courses\",\n          data:this.state.courseToDisplay\n        };\n        ServerService.postToServer(\"/crudOperations/delete\",dataToSend).then(response=>{\n           if(response.status===200){\n               console.log(\"deletion result \",response);\n               alert(\"Course Delete !!\");\n           }else {\n               console.log(\"deletion error \",response.data.errorMessage||response);\n               alert(\"deletion error\");\n           }\n        });\n    }\n    displayOptions(){\n        if(this.state.ready){\n            return(\n                <React.Fragment>\n                    <NewTeacher course={this.state.courseToDisplay}/>\n                    <ButtonHelper {...{\n                        name:\"modifycoursebutton\",\n                        value:\"Modify Course\",\n                        className:\"form-helper-button success\"\n                    }} onClick={()=>this.modifyCourse()}\n                    />\n                    <ButtonHelper {...{\n                        name:\"deletecourse\",\n                        value:\"Delete Course\",\n                        className:\"form-helper-button danger\"\n                    }} onClick={()=>this.deleteCourse()}\n                    />\n                </React.Fragment>\n            );\n        }\n        return\"\";\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <NavCourse course={this.state.courseToDisplay}/>\n\n                <ModalComponent visible={this.state.modalVisibility}\n                                onClose={()=>this.closeModal()}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n                <div className={\"hr-button-block course-options\"}>\n                    { this.displayOptions()}\n                </div>\n                <div className={'course-content-div'}>\n                    <div>{this.displayCourse()}</div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Course;","import React, { Component } from 'react';\nimport ReactQuill from 'react-quill'; // ES6\nimport {ButtonHelper} from \"../../HelperComponent/FormHelper\";\n\n\nclass QuillComponent extends Component {\n    formats = [\n        'header',\n        'bold', 'italic', 'underline', 'strike', 'blockquote',\n        'list', 'bullet', 'indent','align',\n        'link', 'image','formula',\n    ];\n    modules = {\n        toolbar: [\n            [{'header': [1, 2, false]}],\n            ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n            [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n            [{'align': []}],\n            ['link', 'image', 'formula'],\n            ['clean'],\n        ],\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {text: props.text, delta: {}}; // You can also pass a Quill Delta here\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(value,delta,source,editor) {\n        console.log(\"get content\", editor.getContents(), \"source\", source);\n        this.setState({text: value, delta :  editor.getContents(), other: { source, editor: editor.getContents()}});\n        if(this.props.onChange){\n            this.props.onChange({text : value, delta : editor.getContents()});\n        }\n    }\n\n    buttons() {\n        return <div className={\"hr-button-block\"}>\n            {this.props.onValidate ?\n                <ButtonHelper {\n                                  ...{\n                                      name: 'valider',\n                                      value: 'Validate',\n                                      className: \"form-helper-button success\"\n                                  }\n                              }\n                              onClick={() => this.props.onValidate({text: this.state.text, delta: this.state.delta})}\n                /> : \"\"\n            }\n        </div>\n    }\n\n\n    render() {\n        return (\n            <div>\n                <ReactQuill value={this.state.text}\n                            modules={this.modules}\n                            onChange={this.handleChange}\n                            formats={this.formats}/>\n                <div>{this.buttons()}</div>\n            </div>\n        );\n    }\n}\n\nexport default QuillComponent;\n","import React,{Component} from 'react';\nimport './contactscomponent.css'\nimport {InputHelper} from \"../HelperComponent/FormHelper\";\nimport {getDecodedToken} from \"../../server/axiosInstance\";\nimport QuillComponent from \"../DanielComponent/QuillComponent/QuillComponent\";\nimport {ServerService} from \"../../server/ServerService\";\n\n\n\nclass ContactForm extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            user:getDecodedToken(),\n            name:\"\",\n            email:\"\",\n            contact:\"\",\n            message:\"\"\n        }\n    }\n\n    handleSubmitMessage(data){\n        console.log(\"state message \",this.state);\n        if(this.state.name.length===0 || this.state.email.length===0 || this.state.message.length===0 ){\n            alert(\"Veuillez Remplir tous Les Champs SVP !!\");\n        }else {\n            console.log(\"sending message ...\");\n            let insertedMessage = ServerService.insertElementInDataBase('messages',{\n                name:this.state.name,\n                email:this.state.email,\n                contact:this.state.contact,\n                message:this.state.message,\n            });\n            console.log(\"inserted message \",insertedMessage);\n        }\n    }\n\n    handleChange(e){\n        let change={};\n        change[e.target.name] = e.target.value;\n        this.setState({...change});\n    }\n\n    handleMessageChange(e){\n        console.log(\"message\",e);\n        this.setState({message:e.text});\n    }\n\n    render(){\n        return(\n            <div>\n                <h2 className={\"contacts-session-title\"}> Nous Envoyer un Message !! </h2>\n                <div>\n                    Pour toute suggestion ou préoccupation concernant cette plate-forme,\n                    vous pouvez nous envoyer un email via l’interface suivante,\n                    et nous vous répondrons.\n                </div>\n                <div className={\"contacts-message-form\"}>\n                    <InputHelper {...{type:'text',name:\"name\",label:\"Nom\"}} onChange={(e)=>this.handleChange(e)}/>\n                    <InputHelper {...{type:'email',name:\"email\",label:\"Email\"}} onChange={(e)=>this.handleChange(e)}/>\n                    <InputHelper {...{type:'number',name:\"contact\",label:\"Contact\",placeholder:\"Phone Contact\"}} onChange={(e)=>this.handleChange(e)}/>\n                    <h4>Message</h4>\n                    <QuillComponent\n                        text={this.state.message}\n                        onChange={(e)=>this.handleMessageChange(e)}\n                        onValidate={(data)=>this.handleSubmitMessage(data)}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass ContactsComponent extends Component{\n    render(){\n        return(\n            <div className={\"contacts-container\"}>\n\n                <h2 className={\"contacts-session-title\"}>Qui Nous Sommes ?</h2>\n                <div className={\"contacts-about-us\"}>\n                    Palais de la micro.\n                    Services informatiques. creation de logiciels pour entreprises\n                </div>\n                <h2 className={\"contacts-session-title\"}>Nos Travaux</h2>\n                <ContactForm/>\n\n            </div>\n        );\n    }\n}\n\nexport default ContactsComponent;","import React, {Component} from 'react';\nimport './userprofile.css';\nimport {getDecodedToken} from \"../../server/axiosInstance\";\nimport {ServerService} from \"../../server/ServerService\";\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport {ButtonHelper, InputHelper} from \"../HelperComponent/FormHelper\";\nimport {CoursesList} from \"../CoursesComponent/Courses\";\nimport FormHelper from \"../HelperComponent/FormHelper\";\nimport {validateEmail, validatePassword} from \"../StaticFunctionsComponent/StaticFunctions\";\nimport {Image} from \"cloudinary-react\";\n\nclass ModifyConnexionParams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: this.props.user,\n            dataToSend: {}\n        }\n    }\n    handleChange(e) {\n        let nextDataToSend = this.state.dataToSend;\n        nextDataToSend[e.target.name] = e.target.value;\n        if(e.target.value.length===0){delete nextDataToSend[e.target.name]}\n        this.setState({dataToSend:nextDataToSend});\n        console.log(\"new Data to send \",this.state.dataToSend);\n    }\n    verifyFields(){\n        let response={\n            status:true,\n            message:'Ok'\n        };\n        let setResponse=(status=false,message=\"Aucune modification apportée !!\")=>{\n            response['status']=status;\n            response['message']=message;\n            return response;\n        };\n        let currentDataTosend=this.state.dataToSend;\n        let arrayKeys=Object.keys(currentDataTosend);\n        if(arrayKeys.length===0){\n          return setResponse(false,\"Aucune Modification appliquée\");\n        }else{\n            //checking email\n            if(arrayKeys.indexOf('email')>-1){\n                if(!validateEmail(currentDataTosend['email'])){\n                   return setResponse(false,\"Email non valide !!\");\n                }\n            }\n            if(arrayKeys.indexOf('currentpassword') > -1){\n                if(currentDataTosend['currentpassword'] !== this.state.user.password){\n                    return setResponse(false,\"Passwords doesn't Match\");\n                }\n                currentDataTosend['password']=currentDataTosend['currentpassword'];\n                delete (currentDataTosend['currentpassword']);\n            }\n            if(\n                arrayKeys.indexOf('newpassword') > -1 ||\n                arrayKeys.indexOf('confirmedpassword') > -1\n            ){\n                if(currentDataTosend['newpassword'] !== currentDataTosend['confirmedpassword']){\n                    return setResponse(false,\"Passwords doesn't Match\");\n                }\n                if(!validatePassword(currentDataTosend['newpassword']||\"\")){\n                    return setResponse(false,\"New password not valide\");\n                }\n\n                currentDataTosend['password']=currentDataTosend['newpassword'];\n                delete (currentDataTosend['newpassword']);\n                delete (currentDataTosend['currentpassword']);\n                delete (currentDataTosend['confirmedpassword']);\n            }\n        }\n        let checkdiff=false;\n        arrayKeys.forEach((elt)=>{\n            console.log(\"state :  \"+ this.state.user[elt] + \" curr : \"+currentDataTosend[elt]);\n           if(this.state.user[elt]!==currentDataTosend[elt]){\n               checkdiff=true;\n           }\n        });\n        if(checkdiff){\n            return setResponse(true,'ok');\n        }else {\n            return setResponse();\n        }\n\n    }\n\n    handleValidation() {\n        let verification=this.verifyFields();\n        console.log(\"verification \",verification);\n        if(verification.status){\n            console.log(\"dataTosend\",this.state.dataToSend);\n            //this.props.handleModifValidation(this.state.dataToSend);\n        }else {\n            alert(verification.message);\n        }\n\n    }\n\n    render() {\n        let  arrayParams = [\n            {\n                name: \"email\",\n                type: 'email',\n                placeholder: 'Email',\n                label: 'Email',\n                value: this.state.user.email\n            },\n            {\n                name: \"pseudo\",\n                type: 'text',\n                placeholder: 'UserName',\n                label: 'Pseudo',\n                value: this.state.user.pseudo\n            },\n            {\n                name: \"currentpassword\",\n                type: 'text',\n                placeholder: 'Current Password',\n                label: 'Mot de Passe Actuel',\n            },\n            {\n                name: \"newpassword\",\n                type: 'password',\n                placeholder: 'New Password',\n                label: 'Nouveau Mot de Passe',\n                required:true\n            },\n            {\n                name: \"confirmedpassword\",\n                type: 'password',\n                placeholder: 'Confirm Password',\n                label: 'Nouveau Mot de Passe',\n            }\n\n        ];\n        return (\n            <div className={\"user-profile-modify-connexion-params\"}>\n                <form>\n                    {\n                        arrayParams.map((field, key) => {\n                            return (\n                                <div key={key}>\n                                    <InputHelper {...field} onChange={(e) => {\n                                        this.handleChange(e)\n                                    }}/>\n                                </div>\n                            )\n                        })\n                    }\n                    <div className={\"hr-button-block\"}>\n                        <ButtonHelper\n                        {\n                            ...{\n                                type:'button',\n                                name:\"newConnexionParamsbtn\",\n                                value:\"Validate\",\n                                className:\"form-helper-button warning\"\n                            }\n                        }\n                        onClick={()=>this.handleValidation()}\n                    /> </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nclass UserProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: getDecodedToken(),\n            taughtCourses: [],\n            followedCourses: [],\n            modalChildren: \"\",\n            modalVisibility: false\n        }\n    }\n\n    componentWillMount() {\n        this.findTaughtCourses();\n        this.findFollowedCourses();\n    }\n\n    displayUserInformations() {\n        let elementsTodisplay = [\"name\", \"surname\", 'contact', 'pseudo', \"email\", \"address\"];\n        return (\n            <div className={\"user-profile-informations\"}>\n                {\n                    elementsTodisplay.map((field, key) => {\n                        return (\n                            <div key={key}>\n                                <div>{field.toLocaleLowerCase()}</div>\n                                <div>{this.state.user[field] || \"none\"}</div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n\n    /**\n     * display courses, which current user is a teacher\n     */\n    async findTaughtCourses() {\n        let dataToSend = {\n            collection: 'courses',\n            elements_ids: this.state.user.teacher,\n            fields: \"\"\n        };\n        await ServerService.postToServer('courses/getAllWithIds', dataToSend).then(response => {\n            if (response.status === 200) {\n                console.log(\"result for user teacher\", response.data);\n                this.setState({taughtCourses: response.data});\n            } else {\n                console.log(\"Error Message\", response.data.errorMessage);\n            }\n        });\n    }\n\n    displayTaughtCourses() {\n        return <div><CoursesList courses={this.state.taughtCourses}/></div>;\n    }\n\n    /**\n     * display courses, which current user is a teacher\n     */\n    async findFollowedCourses() {\n        let dataToSend = {\n            collection: 'courses',\n            elements_ids: this.state.user.student,\n            fields: \"\"\n        };\n        await ServerService.postToServer('courses/getAllWithIds', dataToSend).then(response => {\n            if (response.status === 200) {\n                this.setState({followedCourses: response.data});\n            } else {\n                console.log(\"Error Message\", response.data.errorMessage);\n            }\n        });\n    }\n\n    openModal(content) {\n        console.log(\"about to open modal\");\n        this.setState({\n            modalChildren: content,\n            modalVisibility: true\n        });\n    }\n\n    handleModalClose() {\n        this.setState({\n            modalChildren: \"\",\n            modalVisibility: false\n        });\n    }\n\n    modifyAvatar() {\n\n\n    }\n\n    handleModifValidation(data) {\n        console.log(\" modif datatosend \", data);\n        if (Object.keys(data).length > 0) {\n            let findUserParams = {\n                collection: 'users',\n                options: {\n                    queries: {_id: this.state.user._id}\n                }\n            };\n            ServerService.postToServer('/crudOperations/get', findUserParams).then((response) => {\n                console.log(\"getting user response \", response);\n                if (response.status === 200) {\n                    if (response.data.length > 0) {\n                        let user = response.data[0];\n                        console.log(\"user found \", user);\n                        let updateParams = {\n                            collection: 'users',\n                            data: user,\n                            update: data\n                        };\n                        ServerService.postToServer(\"/crudOperations/update\", updateParams).then((response) => {\n                            if (response.status === 200) {\n                                console.log(\"Update success\");\n                            } else {\n                                console.log(\"update error \", response.data.errorMessage);\n                            }\n                        });\n                    } else {\n                        alert(\"User Verification Failed !!\");\n                    }\n                }\n            });\n\n        } else {\n            alert(\" Aucune modification effectuée !!\");\n            this.handleModalClose()\n        }\n        //ServerService.postToServer()\n    }\n\n    modifyInformations() {\n        let usersModel = {\n            collection: \"users\",\n            title: 'users',\n            fields: [\n                {name: \"name\", type: 'text', placeholder: 'Name', label: 'Nom', value: this.state.user.name},\n                {name: \"surname\", type: 'text',\n                    placeholder: 'SurName',\n                    label: 'Prenom',\n                    value: this.state.user.surname\n                },\n                {\n                    name: \"address\",\n                    type: 'text',\n                    placeholder: 'Address',\n                    label: 'Adresse',\n                    value: this.state.user.address\n                },\n                {\n                    name: \"contact\",\n                    type: 'number',\n                    placeholder: 'Tel1/Tel2 ',\n                    label: 'Telephone',\n                    value: this.state.user.contact\n                },\n\n            ]\n        };\n        let formToReturn = <div>\n            <FormHelper\n                data={usersModel}\n                modificationForm\n                handleValidation={(e) => this.handleModifValidation(e)}\n            />\n        </div>;\n        console.log(\"modification of parameters\");\n        this.openModal(formToReturn);\n    }\n\n    newConnexionParameters() {\n        this.openModal(\n            <ModifyConnexionParams\n                handleModalClose={this.handleModalClose()}\n                handleModifValidation={(data)=>this.handleModifValidation(data)}\n                user={this.state.user}\n            />);\n    }\n\n    render() {\n        return (\n            <div className={\"user-profile-main-div\"}>\n                <ModalComponent visible={this.state.modalVisibility} onClose={() => this.handleModalClose()}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n                <h2 className={\"user-profile-title\"}>Profile Utilisateur</h2>\n\n                <h3 className={\"session-title\"}>\n                    Avatar\n                    <ButtonHelper\n                        {...{\n                            name: \"changeAvatar\",\n                            value: \"modifier\",\n                            className: \"form-helper-button success\"\n                        }}\n                        OnClick={() => this.modifyAvatar()}\n                    />\n                </h3>\n                <div className={\"user-profile-avatar\"}>\n                    <div>\n                        <figure className={\"user-profile-avatar\"}>\n                            <Image cloudName=\"demo\" publicId=\"sample\" width=\"200\" crop=\"scale\"/>\n                           {/* <img src={this.state.user.avatar || \"/images/user3_thom2.png\"}/>*/}\n                        </figure>\n                    </div>\n                </div>\n                <h3 className={\"session-title\"}>\n                    User Informations\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: \"modifyinformations\",\n                                value: \"Modifier Mes Informations\",\n                                className: \"form-helper-button success\"\n                            }\n                        }\n                        onClick={() => this.modifyInformations()}\n                    />\n                </h3>\n                {this.displayUserInformations()}\n\n                <h3 className={\"session-title\"}>\n                    Connexion Parameters\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: \"modifyinformations\",\n                                value: \"Changer Les Paramètres de Connexion\",\n                                className: \"form-helper-button success\"\n                            }\n                        }\n                        onClick={() => this.newConnexionParameters()}\n                    />\n                </h3>\n                <h3 className={\"session-title\"}>Taught Courses</h3>\n                <div className={\"user-profile-taught-courses-div\"}>\n                    <CoursesList courses={this.state.taughtCourses}/>\n                </div>\n                <h3 className={\"session-title\"}>Followed Courses</h3>\n                <div className={\"user-profile-followed-courses-div\"}>\n                    <CoursesList courses={this.state.followedCourses}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserProfile;","import React,{Component} from 'react';\nimport './coursenavigator.css';\nimport {ServerService} from \"../../server/ServerService\";\n\nlet lowerCourseLevel={\n    courses:'chapters',\n    chapters:'sections',\n    sections:'subsections'\n};\n\nlet waitingElement=[{title:<img alt=\"\" src={\"images/al.gif\"}/>}];\n\nclass DisplayElement extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            element:this.props.element,\n            level:this.props.level,\n            subElements:[],\n            selected:this.props.selectionState,\n        }\n    }\n\n    async handleElementClick(){\n        this.props.setSelectedElement(this.props.element,this.props.level);\n        if(lowerCourseLevel[this.state.level] &&\n            this.props.element.hasOwnProperty(lowerCourseLevel[this.state.level]) &&\n            this.props.element[lowerCourseLevel[this.state.level]].length>0\n        ){\n            this.setState({ subElements:[] });\n            this.setState({ subElements:waitingElement });\n            await ServerService.postToServer('/courses/getAllWithIds',{\n                collection:lowerCourseLevel[this.state.level],\n                elements_ids:this.state.element[lowerCourseLevel[this.state.level]],\n                fields:['_id','title',lowerCourseLevel[lowerCourseLevel[this.state.level]]]\n            }).then((response)=>{\n                if(response.status===200){\n                    this.setState({ subElements:[]});\n                    this.setState({subElements:response.data});\n                } else {\n                    alert(response.data.errorMessage);\n                }\n            });\n        }\n    }\n\n    selectionState(){\n        if(!this.state.selected){\n            return \"element-div\"\n        }else {\n            return \"selected-element-div\"\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <div\n                    className={this.selectionState()}\n                    onClick={()=>this.handleElementClick()}\n                >\n                    {this.state.element.title}\n                </div>\n                <div className={'sub-elements-div'}>\n                    {this.state.subElements.map((subElement,key)=>{\n                        return<div key={key}>\n                            <DisplayElement\n                                element={subElement}\n                                level= {lowerCourseLevel[this.state.level]}\n                                selectionState={this.props.selectionState}\n                                setSelectedElement={this.props.setSelectedElement}\n                                handleUnSelectAll={()=>this.props.handleUnSelectAll()}\n                            />\n                        </div>;\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nclass CourseNavigator  extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            courses:[],\n            selectionState:false\n        }\n    }\n\n    componentDidMount(){\n        ServerService.getFromServer('/courses/getAll').then((response)=>{\n            if(response.status===200){\n                this.setState({ courses:response.data });\n            }else {\n                alert(response.data.errorMessage);\n            }\n        });\n    }\n\n    handleUnSelectAll(){\n        this.setState({selectionState:false});\n    }\n\n    displayElements(level='courses',elements){\n        return elements.map((element,key)=>{\n            return (\n                <div key={key}>\n                    <DisplayElement\n                        element={element}\n                        level={level}\n                        setSelectedElement={this.props.setSelectedElement}\n                        selectionState={this.state.selectionState}\n                        handleUnSelectAll={()=>this.handleUnSelectAll()}\n                    />\n                </div>\n            );\n        });\n    }\n\n    render(){\n        return(\n            <div>\n                <h2 className={\"nav-title\"}>Navigation </h2>\n                {this.displayElements('courses',this.state.courses)}\n            </div>\n        );\n    }\n\n}\n\nexport default CourseNavigator;","import React, {Component} from 'react';\nimport './mcqhelpcomponent.css';\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport ReactQuill from 'react-quill';\nimport {ServerService} from \"../../server/ServerService\"; // ES6\nimport {displayElement} from \"../CoursesComponent/Course\";\n\nlet formats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent', 'align',\n    'link', 'image', 'formula',\n];\n\nclass MCQHelpComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mcq: this.props.mcq,\n            modalVisibility: false,\n            modalChildren: \"\"\n        }\n    }\n\n    handleCloseModal() {\n        this.setState({\n            modalChildren: \"\",\n            modalVisibility: false\n        });\n    }\n\n    handleOpenModal(content) {\n        this.setState({\n            modalChildren: content,\n            modalVisibility: true\n        });\n    }\n\n    showCourse() {\n        let reference = this.state.mcq.reference;\n        let course_level = this.state.mcq.course_level;\n        let dataToSend = {\n            elements_ids: [reference],\n            elements_collection: course_level\n        };\n\n        console.log(\"dataTo send \",dataToSend);\n        if (course_level === \"courses\") {\n            ServerService.postToServer(\"/courses/getHoleCourse\", {course: reference}).then((response) => {\n                if (response.status === 200) {\n                    console.log(\"hole course result\", response.data);\n                    this.handleOpenModal(\n                        <div className={\"mcq-help-explanation-div\"}>\n                            {displayElement(response.data || \"\", \"courses\")}\n                        </div>);\n                } else {\n                    console.log(\"Error getting hole course\", response.data['errorMessage']);\n                }\n            });\n        } else {\n            ServerService.postToServer(\"/courses/getCourseElements\", dataToSend).then((response) => {\n                if (response.status === 200) {\n                    console.log(\"element result\",response.data);\n                    this.handleOpenModal(\n                        <div className={\"mcq-help-explanation-div\"}>\n                            {displayElement(response.data[0] || \"\", course_level)}\n                        </div>\n                    );\n                } else {\n                    console.log(\"error message \", response.data.errorMessage);\n                }\n            });\n        }\n    }\n\n    showExplanation() {\n        let explanation = <div>\n            <h3>Explanation</h3>\n            <ReactQuill\n                value={this.state.mcq.explanation}\n                modules={{toolbar: false}}\n                formats={formats}\n                readOnly={true}\n            />\n        </div>;\n        this.handleOpenModal(<div className={\"mcq-help-explanation-div\"}> {explanation}</div>)\n    }\n\n    displayOptions() {\n        if (this.state.mcq.explanation.length > 0) {\n            return (\n                <React.Fragment>\n                    <div className={\"mcq-help-option-div\"} onClick={() => this.showCourse()}>Visiter Le Cours</div>\n                    <div className={\"mcq-help-option-div\"} onClick={() => this.showExplanation()}>Explication</div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <div className={\"mcq-help-option-div\"} onClick={() => this.showCourse()}>\n                    Visiter Le Cours\n                </div>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ModalComponent visible={this.state.modalVisibility} onClose={() => this.handleCloseModal()}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n                {this.displayOptions()}\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default MCQHelpComponent;","import React, {Component} from 'react';\nimport './mcqscomponent.css';\nimport {ButtonHelper, CheckBoxHelper, LabelHelper} from \"../HelperComponent/FormHelper\";\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport ReactQuill from 'react-quill'; // ES6\nimport {ServerService} from \"../../server/ServerService\";\nimport MCQHelpComponent from \"./MCQHelpComponent\";\n\nlet formats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent', 'align',\n    'link', 'image', 'formula',\n];\n\nlet modules = {\n    toolbar: [\n        [{'header': [1, 2, false]}],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n        [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n        [{'align': []}],\n        ['link', 'image', 'formula'],\n        ['clean'],\n    ],\n};\n\nexport class RealiseMCQ extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            mcq:this.props.mcq,\n            selectedAnswers:this.props.selectedAnswers||[],\n            mode:this.props.mode||'test',// between [test,correctedAndWrong,correctedAndRight]\n        }\n    }\n\n    handleSelectAnswer(elt,key){\n        let selectedAnswers=this.state.selectedAnswers;\n       /* console.log(\"previous selected Answers \",selectedAnswers);*/\n        if(elt.target.checked){\n            if(selectedAnswers.indexOf(key)===-1){\n                selectedAnswers.push(key);\n            }\n        }else {\n            if(selectedAnswers.indexOf(key)>-1){\n                selectedAnswers.splice(selectedAnswers.indexOf(key),1);\n            }\n        }\n        console.log(\"new selected Answers \",selectedAnswers);\n    }\n\n    showCorrectAnswers(key){\n        if(this.state.mcq.rightAnswers.indexOf(key)>-1 && this.state.mode==='correctedAndWrong') {\n            return (\n                <div className={'mcq-right-answer-div'}>\n                    <CheckBoxHelper\n                        {...{\n                            name:\"rigthanswer\"+key,\n                            checked:true,\n                            readOnly:this.state.mode===\"correctedAndWrong\" || this.state.mode===\"correctedAndRight\"\n                        }}\n                    />\n                </div>\n            );\n        }\n    }\n\n    checkedStatus(key){\n        if(this.state.selectedAnswers.indexOf(key)>-1){\n            return true;\n        }else {\n            return false\n        }\n    }\n\n    displayChoice(answer,key){\n        return (\n            <div key={key}>\n                <div className={\"one-choice-div\"}>\n                    <div>\n                        <ReactQuill\n                            value={answer}\n                            modules={{toolbar:false}}\n                            formats={formats}\n                            readOnly={true}\n                        />\n                    </div>\n                    <div>\n                        <CheckBoxHelper\n                            {...{\n                                name:\"answer\"+key,\n                                checked:this.checkedStatus(key),\n                                readOnly:this.state.mode===\"correctedAndWrong\" || this.state.mode===\"correctedAndRight\"\n                            }}\n                            onChange={(e)=>this.handleSelectAnswer(e,key)}\n                        />\n                    </div>\n                </div>\n                {this.showCorrectAnswers(key)}\n                </div>\n        );\n    }\n\n    async correctMCQ(){\n        let selectedAnswers=this.state.selectedAnswers;\n        if(selectedAnswers.length===0){\n            alert(\"aucune reponse selectionnee\");\n        }else {\n            let rightAnswers=this.state.mcq.rightAnswers;\n            console.log(\"right answers \",rightAnswers,\"selected answers \",selectedAnswers);\n\n            let wrongAnswersSelected=selectedAnswers.filter((elt,index)=>{\n                return !rightAnswers.includes(elt);\n            });\n\n            let goodAnswersNotSelected=rightAnswers.filter((elt,index)=>{\n                return !selectedAnswers.includes(elt);\n            });\n\n            if(wrongAnswersSelected.length!==0 || goodAnswersNotSelected.length!==0 ){\n               // alert(\"faux\");\n                await this.setState({ mode:'correctedAndWrong' });\n                console.log(\"RANS\",rightAnswers,\"WS\",wrongAnswersSelected,\"RNS\",goodAnswersNotSelected);\n            }else {\n              //  alert('juste');\n                await this.setState({ mode:'correctedAndRight'});\n            }\n\n            console.log(\"wrong selected \",wrongAnswersSelected,\n                \"good not selected\",goodAnswersNotSelected,\n                \"current Mode \",this.state.mode);\n\n            if(this.props.getCorrectedMCQ){\n                console.log(\"ou correct\");\n                console.log(\"state mode : \",this.state.mode);\n                console.log(\"final state : \",this.state);\n                this.props.getCorrectedMCQ(this.state);\n            }else {\n                console.log(\"no ou correct\");\n            }\n        }\n    }\n\n    repeatMCQ(){\n        this.setState({\n            mode:\"test\"\n        });\n    }\n\n    displayButtons(){\n        if(this.state.mode==='test'){\n            return(\n                <ButtonHelper\n                    {\n                        ...{\n                            name:\"correctMCQbutton\",\n                            value:\"Valider\",\n                            className:\"form-helper-button success\"\n                        }\n                    }\n                    onClick={()=>this.correctMCQ()}\n                />\n            );\n        }\n\n        /*else if(this.state.mode===\"correctedAndWrong\" || this.state.mode===\"correctedAndRight\"){\n            return(\n                <div>\n                    <ButtonHelper\n                        {\n                            ...{\n                                name:\"repeatMCQbutton\",\n                                value:\"Reprendre\",\n                                className:\"form-helper-button warning\"\n                            }\n                        }\n                        onClick={()=>this.repeatMCQ()}\n                    />\n                </div>\n            );\n        }*/\n\n    }\n\n    displayHelpOptions(){\n        if(this.state.mode===\"correctedAndWrong\"){\n            return(<MCQHelpComponent mcq={this.state.mcq}/>);\n        }\n    }\n\n    displayMCQ(){\n        let mcq=this.state.mcq;\n       /* console.log(\"selected answers\",this.state.selectedAnswers);*/\n        return(\n            <React.Fragment>\n                <div className={\"question-div\"}>\n                    <h3> Question </h3>\n                    <ReactQuill\n                        value={mcq.question}\n                        modules={{toolbar:false}}\n                        formats={formats}\n                        readOnly={true}\n                    />\n                </div>\n                <div>\n                    <h3> Answers</h3>\n                    {\n                        mcq.answers.map((answer,key)=>{\n                            return this.displayChoice(answer,key);\n                        })\n                    }\n                </div>\n                <div className={'hr-button-block'}>\n                    {this.displayButtons()}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    render(){\n        return(\n            <div className={\"realisedMCQ-div-\"+this.state.mode}>\n                {this.displayHelpOptions()}\n                {this.displayMCQ()}\n            </div>\n        )\n    }\n\n}\n\nexport class ListMCQS extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            reference:this.props.reference,\n            course_level:this.props.course_level,\n            mcqs:this.props.mcqs,\n            modalVisibility:false,\n            modalChildren:\"\"\n        }\n    }\n    handleViewMCQ(mcq){\n        let content=<OneMCQ mcq={mcq} action_level={'update'}/>;\n        this.openModal(content)\n    }\n\n    handleRealiseMCQ(mcq){this.openModal(<RealiseMCQ mcq={mcq}/>)}\n\n    handleDeleteMCQ(mcq){\n        ServerService.postToServer(\"/crudOperations/delete\",{\n            collection:\"mcqs\",\n            data:mcq\n        }).then((response)=>{\n        });\n    }\n\n    displayMCQ(mcq,key){\n        return(\n            <div key={key} className={\"mcqs-list-one-div\"}>\n                <ReactQuill\n                    value={mcq.question}\n                    modules={{toolbar:false}}\n                    formats={formats}\n                    readOnly={true}\n                />\n               <div className={\" mcq-list-div-option \"}>\n                   <div className={\"hr-button-block\"}>\n                       <ButtonHelper\n                           {\n                               ...{\n                                   name:'viewqcm',\n                                   value:\"View\",\n                                   className:\"form-helper-button success\"\n                               }\n                           }\n                           onClick={()=>this.handleViewMCQ(mcq)}\n                       />\n                       <ButtonHelper\n                           {\n                               ...{\n                                   name:'realisemcq',\n                                   value:\"Realise MCQ\",\n                                   className:\"form-helper-button success\"\n                               }\n                           }\n                           onClick={()=>this.handleRealiseMCQ(mcq)}\n                       />\n\n                       <ButtonHelper\n                           {\n                               ...{\n                                   name:'deleteqcm',\n                                   value:\"Delete\",\n                                   className:\"form-helper-button danger\"\n                               }\n                           }\n                           onClick={()=>this.handleDeleteMCQ(mcq)}\n                       />\n                   </div>\n               </div>\n            </div>\n        );\n    }\n\n    openModal(content){\n        this.setState({\n            modalVisibility:true,\n            modalChildren:content,\n        });\n    }\n    closeModal(){\n        this.setState({\n            modalChildren:\"\",\n            modalVisibility:false\n        });\n    }\n    render(){\n        console.log(\"mcqs list\",this.state.mcqs);\n        return(\n            <div>\n                <ModalComponent visible={this.state.modalVisibility} onClose={()=>this.closeModal()}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n                <h3> List of MCQS</h3>\n                <div className={\"mcqs-list-div\"}>\n                    {\n                        this.state.mcqs.map((mcq,key)=>{\n                            return this.displayMCQ(mcq,key);\n                        })\n                    }\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport class OneMCQ extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mcq_id:'',\n            course_level: this.props.course_level || \"\",\n            reference: this.props.reference || \"\",\n            question: '',\n            answers: this.retunDefaultAnswerArray(this.props.numberOfAnswer || 5),\n            rightAnswers: [],\n            explanation: \"\",\n            action_level: \"creation\"//this precise if the mcq is in creation or update mode\n        }\n    }\n\n    componentWillMount() {\n        if (this.props.action_level === \"update\") {\n            let mcq = this.props.mcq;\n            this.setState({\n                mcq_id:mcq._id,\n                course_level: mcq.course_level,\n                reference: mcq.reference,\n                question: mcq.question,\n                answers: mcq.answers,\n                rightAnswers: mcq.rightAnswers,\n                explanation: mcq.explanation,\n                action_level: 'update'\n            });\n        }\n    }\n\n    retunDefaultAnswerArray(number) {\n        let arrOfAns = [];\n        for (let i = 1; i <= number; i++) {\n            arrOfAns.push('');\n        }\n        return arrOfAns;\n    }\n\n    returnMCQField({content, defaultValue = \"\", handleChange, label = '', placeholder = ''}) {\n        return (\n            <div className={'mcqFieldDiv'}>\n                <LabelHelper label={label}/>\n                <ReactQuill\n                    value={content || defaultValue}\n                    modules={modules}\n                    formats={formats}\n                    placeholder={placeholder}\n                    onChange={handleChange}\n                />\n            </div>\n        );\n    }\n\n    handleChange(element, questionOrAnswer = 'answer', index = null) {\n\n        if (element === '<p><br></p>') {\n            element = \"\";\n        }\n\n        console.log(\"here\", element);\n\n        switch (questionOrAnswer) {\n            case 'question' :\n                this.setState({question: element});\n                break;\n            case 'rightAnswer' :\n                let rightAnswers = this.state.rightAnswers;\n                if (element.target.checked) {\n                    rightAnswers.push(index);\n                } else {\n                    rightAnswers.splice(rightAnswers.indexOf(index), 1)\n                }\n\n                this.setState({rightAnswers: rightAnswers});\n                break;\n            case 'answer' :\n                let previousAnswers = this.state.answers;\n                previousAnswers[index] = element;\n                this.setState({answers: previousAnswers});\n                break;\n            case 'explanation' :\n                this.setState({explanation: element});\n                break;\n            default:break;\n        }\n    }\n\n    validateMCQ() {\n        let question = this.state.question;\n        let answers = [];\n        let rightAnswers = [];\n        let explanation = this.state.explanation;\n        let validation = {valid: true, message: \"\", dataToSend: {}};\n\n        //check question\n        if (question.length === 0) {\n            validation.valid = false;\n            validation.message = \" Veuillez Saisir une Question S.V.P !! \";\n            return (validation);\n        }\n        answers = this.state.answers.filter((answer, index) => {\n            return (answer.length > 0 && answers.indexOf(answer) === -1);\n        });\n\n        // check answers\n        if (answers.length === 0) {\n            validation.valid = false;\n            validation.message = \" Veuillez Saisir des reponses S.V.P !! \";\n            return (validation);\n        } else {\n            answers.forEach((element, index) => {\n                if (this.state.rightAnswers.indexOf(this.state.answers.indexOf(element)) > -1) {\n                    rightAnswers.push(index);\n                }\n            });\n\n            if (rightAnswers.length === 0) {\n                validation.valid = false;\n                validation.message = \" Au moins une réponse juste est nécessaire !! \";\n                return validation;\n            }\n            validation['dataToSend'] = {\n                course_level: this.state.course_level,\n                reference: this.state.reference,\n                question: question,\n                answers: answers,\n                rightAnswers: rightAnswers,\n                explanation: explanation,\n            };\n            this.setState({...validation['dataToSend']});\n\n            return validation;\n        }\n    }\n\n    handleSaveNewMCQ() {\n        let validation = this.validateMCQ();\n        if (validation.valid) {\n            ServerService.postToServer(\"/mcquestions/new\", validation['dataToSend']).then((response) => {\n                if (response.status === 200) {\n                    console.log(\"response data \",response.data);\n                    this.setState({\n                       mcq_id:response.data,\n                       action_level:\"update\"\n                    });\n                    alert(\"M.C.Q Saved with Success\");\n                } else {\n                    alert(\"Sorry M.C.Q has not been saved !! \");\n                    console.log(\"error Message\", response.errorMessage);\n                }\n            });\n        } else {\n            alert(validation.message);\n        }\n    }\n\n    handleModifyMCQ(){\n        let validation = this.validateMCQ();\n        if (validation.valid) {\n            let dataToSend={\n                documentToUpdate:{_id:this.state.mcq_id},\n                updateToMake: validation['dataToSend']\n            };\n\n            ServerService.postToServer(\"/mcquestions/modifyMCQ\",dataToSend).then((response) => {\n                if (response.status === 200) {\n                    alert(\"M.C.Q modified with Success\");\n                } else {\n                    alert(\"Sorry M.C.Q has not been modified !! \");\n                    console.log(\"error Message\", response.errorMessage);\n                }\n            });\n        } else {\n            alert(validation.message);\n        }\n    }\n\n    handleResetMCQ(param) {\n        if(param===\"new\"){\n            this.setState({\n                mcq_id:'',\n                question: '',\n                answers: this.retunDefaultAnswerArray(this.props.numberOfAnswer || 5),\n                rightAnswers: [],\n                explanation: \"\",\n                dataToSend: {},\n                action_level: 'creation'\n            });\n        }else if(param===\"modify\"){\n            this.setState({\n                question: '',\n                answers: this.retunDefaultAnswerArray(this.props.numberOfAnswer || 5),\n                rightAnswers: [],\n                explanation: \"\",\n                dataToSend: {},\n                action_level: 'update'\n            });\n        }\n    }\n\n    handleDeleteMCQ(){\n        ServerService.postToServer(\"/crudOperations/delete\",{\n            collection:\"mcqs\",\n            data:{_id:this.state.mcq_id}\n        }).then((response)=>{\n            if(response.status===200){\n                this.handleResetMCQ(\"new\");\n            }\n        });\n    }\n\n    mcqButtons() {\n        if (this.state.action_level === \"creation\") {\n            return (\n                <React.Fragment>\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: 'mcqFormValidation',\n                                value: \"Valider\",\n                                type: 'button',\n                                className: ' form-helper-button success'\n                            }\n                        } onClick={() => this.handleSaveNewMCQ()}\n                    />\n\n                </React.Fragment>\n            );\n        } else if (this.state.action_level === \"update\") {\n            return (\n                <React.Fragment>\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: 'mcqFormValidation',\n                                value: \"Modifier\",\n                                type: 'button',\n                                className: ' form-helper-button success'\n                            }\n                        } onClick={() => this.handleModifyMCQ()}\n                    />\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: 'mcqFormReset',\n                                value: \"Reset And New\",\n                                type: 'reset',\n                                className: ' form-helper-button danger'\n                            }}\n                        onClick={() => this.handleResetMCQ('new')}\n                    />\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: 'mcqFormReset',\n                                value: \"Reset And Modify\",\n                                type: 'reset',\n                                className: ' form-helper-button danger'\n                            }}\n                        onClick={() => this.handleResetMCQ('modify')}\n                    />\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: 'mcqFormdelete',\n                                value: \"delete\",\n                                type: 'reset',\n                                className: ' form-helper-button danger'\n                            }}\n                        onClick={() => this.handleDeleteMCQ()}\n                    />\n                </React.Fragment>\n            );\n        }\n    }\n\n    oneMCQForm() {\n        return (\n            <form>\n                <div className={\"qcmFormTitle\"}> Formulaire de Creation d'un QCM</div>\n                {\n                    this.returnMCQField({\n                        content: this.state.question,\n                        placeholder: \"Question \",\n                        label: \"Question\",\n                        handleChange: (value) => this.handleChange(value, 'question')\n                    })\n                }\n                <div className={'mcqAnswersDiv'}>\n                    {\n                      /*  console.log(\"answers to map \",this.state.answers);*/\n                        this.state.answers.map((answerField, index) => {\n                            let num = index + 1;\n                            let check = false;\n                            if (this.state.rightAnswers.indexOf(index) > -1) {\n                                check = true;\n                            }\n                            return <div key={index} className={\"oneAnswerDiv\"}>\n                                {\n                                    this.returnMCQField({\n                                        content: answerField,\n                                        label: \"Answer \" + num,\n                                        placeholder: \"Answer \" + num,\n                                        handleChange: (e) => this.handleChange(e, 'answer', index)\n                                    })\n                                }\n\n                                <CheckBoxHelper\n                                    name={'rightAnswer'} checked={check}\n                                    className={\"none\"}\n                                    onChange={(e) => this.handleChange(e, 'rightAnswer', index)}\n                                />\n                            </div>\n                        })\n                    }\n                </div>\n                <div className={\"mcqExplanation\"}>\n                    {\n                        this.returnMCQField({\n                            content: this.state.explanation,\n                            placeholder: \"Explanation \",\n                            label: \"Explanation\",\n                            handleChange: (e) => this.handleChange(e, 'explanation')\n                        })\n                    }\n                </div>\n                <div className={\"hr-button-block\"}>\n                    {this.mcqButtons()}\n                </div>\n            </form>\n        );\n    }\n\n    returnInfos() {\n        return (\n            <div>\n                <div>ref:<span>{this.state.reference}</span></div>\n                <div>level:<span>{this.state.course_level}</span></div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                {this.oneMCQForm()}\n            </div>\n        )\n    }\n}\n\nclass MCQsComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reference: this.props.reference,\n            course_level: this.props.course_level,\n            modalVisibility: false,\n            modalChildren: \"\"\n        }\n    }\n\n    handleNewMCQ() {\n        this.setState({\n            modalVisibility: true,\n            modalChildren: <OneMCQ reference={this.state.reference} course_level={this.state.course_level}/>\n        });\n    }\n\n    handleClose() {\n        this.setState({\n            modalVisibility: false,\n            modalChildren: \"\"\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <ModalComponent visible={this.state.modalVisibility}\n                                onClose={() => {\n                    this.handleClose()\n                }}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n                <ButtonHelper\n                    {\n                        ...{\n                            name: 'newMCQ',\n                            value: 'New M.C.Q',\n                            className: 'form-helper-button success new-mcq-button'\n                        }\n                    }\n                    onClick={() => this.handleNewMCQ()}\n                />\n            </div>\n        );\n    }\n}\n\nexport default MCQsComponent;\n\n\n\n\n\n","import React, {Component} from 'react';\nimport './testcomponent.css';\nimport {ButtonHelper, InputTextHelper} from \"../HelperComponent/FormHelper\";\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport ReactQuill from 'react-quill'; // ES6\nimport {ServerService} from \"../../server/ServerService\";\nimport {displayMessage, getDecodedToken} from \"../../server/axiosInstance\";\nimport {RealiseMCQ} from \"./MCQsComponent\";\n\n\nexport class TestResult extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            testTitle:this.props.testTitle||this.props.test.title||\"\",\n            correctedMCQS:this.props.correctedMCQS||[],\n            failedMCQS:this.props.failedMCQS||[],\n            current:'',\n        }\n    }\n\n    componentWillMount(){\n        console.log(\"test result props \",this.props);\n        if(this.props.failedMCQS.length>0){\n            this.setState({\n                current:0\n            });\n        }\n    }\n\n    displayTestScore(){\n        return(\n            <div>\n                Score :\n                {this.state.correctedMCQS.length-this.state.failedMCQS.length}\n                    /\n                {this.state.correctedMCQS.length}\n            </div>\n        );\n    }\n\n    handleNext(){\n        let currentindex=this.state.failedMCQS.indexOf(this.state.current);\n        if(currentindex<this.state.failedMCQS.length -1){\n            this.setState({\n                current:this.state.failedMCQS[currentindex+1],\n            });\n        }\n    }\n\n    handlePrevious(){\n        let currentindex=this.state.failedMCQS.indexOf(this.state.current);\n        if(currentindex>0){\n            this.setState({\n                current:this.state.failedMCQS[currentindex-1],\n            });\n        }\n    }\n\n    displayPrevNext(PrevOrNext){\n        if(PrevOrNext===\"prev\"){\n            return(\n                <div>\n                   <ButtonHelper\n                       {\n                           ...{\n                               name:\"prevbutton\",\n                               value:\"<<\",\n                               className:\"form-helper-button warning\"\n                           }\n                       }\n                       onClick={()=>this.handlePrevious()}\n                   />\n                </div>\n            );\n        }else {\n            return (\n                <div>\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: \"prevbutton\",\n                                value: \">>\",\n                                className: \"form-helper-button warning\"\n                            }\n                        }\n                        onClick={() => this.handleNext()}\n                    />\n                </div>\n            );\n        }\n    }\n\n    handleFailedMcqClick(index){\n        this.setState({\n            current:index\n        });\n    }\n\n    displayResult(){\n        if(this.state.failedMCQS.length>0){\n            return this.state.correctedMCQS.map((mcq,key)=>{\n                if(key===this.state.current){\n                    return(<div key={key}><RealiseMCQ {...mcq}/></div>)\n                }else {\n                    return\"\";\n                }\n            });\n        }else {\n            return(<div className={\"passed-test-div\"}>You have succeed the Test !!</div>);\n        }\n    }\n\n    checkFailedMcqSelected(index){\n        if(this.state.current===index){\n            return \"selected-failed-mcq-div\"\n        }else {\n            return \"\";\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <div className={\"test-result-title\"}> {this.state.testTitle||\"No Title\"}</div>\n                <div className={\"test-score-div\"}> {this.displayTestScore()} </div>\n                <div className={'test-result-div'}>\n                    <div>\n                        <h4 className={\"title-failed-result\"}> Failed Questions</h4>\n                        <div className={\"failed-mcq-number\"}>\n                            {\n                                this.state.failedMCQS.map((index,key)=>{\n                                    return(\n                                        <div\n                                            key={key}\n                                            onClick={()=>this.handleFailedMcqClick(index)}\n                                            className={\"\"+this.checkFailedMcqSelected(index)}\n                                        >\n                                            {index+1}\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n                    <div className={\"failed-mcq-div\"}>\n                        <div className={\"previous\"}>{this.displayPrevNext(\"prev\")}</div>\n                        <div>{this.displayResult()}</div>\n                        <div className={'next'}> {this.displayPrevNext(\"next\")} </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport class RunningTest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            test: this.props.test,\n            mcqs: [],\n            totalNumberOfMCQS: this.props.test.mcqs.length,\n            currentMcqIndex: 0,\n            currentMCQ: \"\",\n            correctedMCQS:[],\n            failedMCQS:[],\n            modalChildren:\"\",\n            modalVisibility:false\n        }\n    }\n\n    async getCorrectedMCQ(correctedMcqState, key) {\n        let correctedMCQS = this.state.correctedMCQS;\n        if(correctedMcqState.mode===\"correctedAndWrong\"){\n            let failedMCQS=this.state.failedMCQS;\n            if(failedMCQS.indexOf(key) === -1){\n                failedMCQS.push(key);\n                await this.setState({failedMCQS:failedMCQS});\n            }\n        }\n        correctedMCQS[key] = correctedMcqState;\n        console.log(\"corrected MCQ \",this.state.correctedMCQS);\n        await this.setState({ correctedMCQS: correctedMCQS});\n        await this.handleNextMCQ();\n    }\n\n    componentWillMount() {\n        let mcqs = this.props.test.mcqs;\n        if (mcqs.length > 0) {\n            this.setState({\n                mcqs: mcqs,\n                totalNumberOfMCQS: mcqs.length,\n                currentMcqIndex: 0,\n                currentMCQ: mcqs[0]\n            });\n        } else {\n            this.setState({\n                mcqs: [],\n                totalNumberOfMCQS: 0,\n                currentMcqIndex: '',\n                currentMCQ: ''\n            });\n        }\n    }\n\n    displayCurrentTestMCQ(key) {\n        console.log(\"current MCQ \", this.state.currentMCQ);\n        if (this.state.currentMCQ) {\n            return  <RealiseMCQ mcq={this.state.currentMCQ} getCorrectedMCQ={(mcqState) => this.getCorrectedMCQ(mcqState, key)}/>;\n        } else {\n            //(this.state.currentMCQ);\n             return \"\";\n        }\n    }\n\n    displayPrevNextButtons() {\n        return (\n            <React.Fragment>\n                {\n                    this.state.currentMcqIndex===this.state.totalNumberOfMCQS?\n                        <React.Fragment>\n                            <ButtonHelper\n                                {\n                                    ...{\n                                        name: 'testvalidationButton',\n                                        value: \"Valider Le Test\",\n                                        className: \"form-helper-button success\"\n                                    }\n                                }\n                                onClick={() => {\n                                    this.validateTest()\n                                }}\n                            />\n                            <ButtonHelper\n                                {\n                                    ...{\n                                        name: 'testvalidationButton',\n                                        value: \"Reprendre Le Test\",\n                                        className: \"form-helper-button warning\"\n                                    }\n                                }\n                                onClick={() => {\n                                    this.repeatTest()\n                                }}\n                            />\n                        </React.Fragment>:\"\"\n                }\n            </React.Fragment>\n        );\n    }\n\n    validateTest() {\n        this.saveTestResult();\n        this.props.handleOpenModal(\n            <TestResult\n                testTitle={this.state.test.title}\n                correctedMCQS={this.state.correctedMCQS}\n                failedMCQS={this.state.failedMCQS}\n            />\n        );\n    }\n\n    saveTestResult(){\n        let dataToSend={\n            userEmail:getDecodedToken().email,\n            testResult:{\n                test:this.state.test,\n                correctedMCQS:this.state.correctedMCQS,\n                failedMCQS:this.state.failedMCQS,\n            }\n        };\n        ServerService.postToServer(\"/mcquestions/saveTestResult\",dataToSend).then((response)=>{\n            if(response.status===200){\n                console.log(\"test saved with success \");\n            }else {\n                console.log(\"test saved with success \");\n            }\n        });\n    }\n\n    repeatTest(){\n        this.setState({\n            currentMcqIndex: 0,\n            currentMCQ: this.state.mcqs[0]\n        });\n    }\n\n    handleCloseModal(){\n        this.setState({\n            modalChildren:\"\",\n            modalVisibility:false\n        });\n    }\n\n    handleOpenModal(content){\n        this.setState({\n            modalChildren:content,\n            modalVisibility:true\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"runningTest-div\"}>\n                <div >\n                    <ModalComponent\n                        onClose={()=>this.handleCloseModal()}\n                        visible={this.state.modalVisibility}\n                    >\n                        {this.state.modalChildren}\n                    </ModalComponent>\n                </div>\n                <div> {this.state.test.title || \"DeFault Title\"} </div>\n                <div>\n                    {this.displayCurrentTestMCQ(this.state.currentMcqIndex)}\n                </div>\n                <div className={\"hr-button-block\"}>\n                    {this.displayPrevNextButtons()}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport class TestsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reference: this.props.reference,\n            course_level: this.props.course_level,\n            tests: [],\n            modalChildren: \"\",\n            modalVisibility: false\n        }\n    }\n\n    componentDidMount() {\n        let dataToSend = {\n            reference: this.props.reference,\n            course_level: this.props.course_level\n        };\n        console.log(\"tests list params\", dataToSend);\n        ServerService.postToServer('/mcquestions/getTestsOfLevel', dataToSend).then((response) => {\n            if (response.status === 200) {\n                console.log(\"list of Tests Founded \", response.data);\n                this.setState({\n                    tests: response.data,\n                });\n            } else {\n                alert(response.data.errorMessage);\n            }\n        });\n    }\n\n    handleCloseModal() {\n        this.setState({\n            modalChildren: \"\",\n            modalVisibility: false\n        })\n    }\n\n    handleOpenModal(content) {\n        this.setState({\n            modalChildren: content,\n            modalVisibility: true\n        });\n    }\n\n    runTest(test) {\n        let runningTest =\n            <RunningTest\n                test={test}\n                handleOpenModal={(content)=>this.handleOpenModal(content)}\n            />;\n        this.handleOpenModal(runningTest);\n    }\n    deleteTest(test){\n        ServerService.postToServer(\"/crudOperations/delete\",{\n            collection:\"tests\",\n            data:test\n        }).then((response)=>{\n        });\n    }\n\n    viewTest(test){\n        this.handleOpenModal(<OneTest test={ test}/>);\n    }\n\n    displayTest(test, key) {\n        return (\n            <div key={key} className={\"test-list-title\"}>\n                {test.title || \"No Title \"}\n                <div className={\"runtest-button-div\"}>\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: \"runTestButton\",\n                                value: \"Run A Test\",\n                                className: \"form-helper-button white-on-blue\"\n                            }\n                        }\n                        onClick={() => {this.runTest(test)}}\n                    />\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: \"viewTestButton\",\n                                value: \"View\",\n                                className: \"form-helper-button success\"\n                            }\n                        }\n                        onClick={() => {this.viewTest(test)}}\n                    />\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: \"deletetestbutton\",\n                                value: \"Delete Test\",\n                                className: \"form-helper-button danger\"\n                            }\n                        }\n                        onClick={() => {this.deleteTest(test)}}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ModalComponent visible={this.state.modalVisibility} onClose={() => this.handleCloseModal()}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n                <div className={\"show-test-div\"}>\n                    {\n                        this.state.tests.map((test, key) => {\n                            return this.displayTest(test, key);\n                        })\n                    }\n                </div>\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport class OneTest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            test_id: this.props.test_id || '',\n            title: this.props.title||\"\",\n            reference: this.props.reference || \"\",\n            course_level: this.props.course_level ||'',\n            originalmcqs: this.props.mcqs || [],\n            mcqs: this.props.mcqs || [],\n            selectedmcqs: this.props.selectedmcqs || []\n        }\n    }\n\n    async componentDidMount(){\n        if(this.props.test){\n            console.log(\"test selected \",this.props.test);\n            let aMccq=this.props.test.mcqs[0];\n            let dataObject={\n                course_level:aMccq.course_level,\n                reference:aMccq.reference\n            };\n            await ServerService.postToServer('/mcquestions/getMCQsOfLevel', dataObject).then((response) => {\n                if (response.status === 200) {\n                    console.log(\"list of MCQs Founded \", response.data);\n                    let selectedMCQSIndexes=[];\n                    this.props.test.mcqs.forEach((value,index)=>{selectedMCQSIndexes.push(value._id);});\n\n                    let restofmcqs=response.data.filter((mcq,index)=>{return !selectedMCQSIndexes.includes(mcq._id);});\n                    this.setState({\n                        test_id: this.props.test._id,\n                        title: this.props.test.title||\"\",\n                        reference: this.props.test.reference,\n                        course_level:  this.props.test.course_level,\n                        originalmcqs:response.data,\n                        mcqs:restofmcqs,\n                        selectedmcqs:this.props.test.mcqs\n                    });\n                } else {\n                    alert(response.data.errorMessage);\n                }\n            });\n        }\n    }\n\n    displayOneMCQ(mcq) {\n        return (<ReactQuill value={mcq.question || \"\"} modules={{toolbar: false}} readOnly={true}/>)\n    }\n\n    handleAddMCQS(mcq) {\n        console.log(\"adding mcq \", mcq);\n        let newselectedmcqs = this.state.selectedmcqs;\n        let newmcqs = this.state.mcqs;\n        newselectedmcqs.push(mcq);\n        newmcqs.splice(newmcqs.indexOf(mcq), 1);\n        this.setState({\n            mcqs: newmcqs,\n            selecetedmcqs: newselectedmcqs\n        });\n    }\n\n    handleRemoveMCQS(mcq) {\n        console.log(\"remove mcq \", mcq);\n        let newselectedmcqs = this.state.selectedmcqs;\n        let newmcqs = this.state.mcqs;\n        newmcqs.push(mcq);\n        newselectedmcqs.splice(newselectedmcqs.indexOf(mcq), 1);\n        this.setState({\n            mcqs: newmcqs,\n            selecetedmcqs: newselectedmcqs\n        });\n    }\n\n    createNewTest() {\n        // check empty selected questions\n        let selectedmcqs = this.state.selectedmcqs;\n       /* if (this.state.title.length === 0) {\n            alert(\"Le test doit avoir un titre\");\n            return;\n        }*/\n        if (selectedmcqs.length > 0) {\n            let selectedmcqs_ids = [];\n            //gathering ids of  selected mcqs\n            for (let mcq of selectedmcqs) {\n                selectedmcqs_ids.push(mcq._id);\n            }\n            let dataTosend = {\n                title: this.state.title,\n                reference: this.state.reference,\n                course_level: this.state.course_level,\n                mcqs: selectedmcqs_ids\n            };\n\n            ServerService.postToServer('/mcquestions/newTest', dataTosend).then((response) => {\n                console.log(\"here too\");\n                if (response.status === 200) {\n                    console.log(\"test result\", response.data);\n                    this.setState({\n                        test_id: response.data\n                    });\n                    displayMessage(\" New Test Saved with Success !!\");\n                } else {\n                    displayMessage(response.data.errorMessage);\n                }\n            });\n\n        } else {\n            alert(\"Vous devez Selectionner au moins une question\");\n        }\n    }\n\n    modifyTest() {\n        let selectedmcqs = this.state.selectedmcqs;\n        if (selectedmcqs.length > 0) {\n            let selectedmcqs_ids = [];\n            //gathering ids of  selected mcqs\n            for (let mcq of selectedmcqs) {\n                selectedmcqs_ids.push(mcq._id);\n            }\n            let dataTosend = {\n                document: {_id: this.state.test_id},\n                updates: {\n                    title: this.state.title,\n                    reference: this.state.reference,\n                    course_level: this.state.course_level,\n                    selectedmcqs_ids: selectedmcqs_ids\n                }\n            };\n            ServerService.postToServer('/mcquestions/modifyTest', dataTosend).then((response) => {\n                if (response.status === 200) {\n                    displayMessage(\" Test modified with Success !!\");\n                } else {\n                    displayMessage(response.data.errorMessage);\n                }\n            });\n\n        } else {\n            alert(\"Vous devez Selectionner au moins une question\");\n        }\n    }\n\n    handleTitleChange(elt) {\n        this.setState({\n            title: elt.target.value\n        });\n    }\n\n    setNewTest() {\n        let originalmcqs = this.state.originalmcqs;\n        this.setState({\n            test_id: '',\n            mcqs: originalmcqs\n        });\n    }\n\n    deleteTest(){\n        ServerService.postToServer(\"/crudOperations/delete\",{\n            collection:\"tests\",\n            data:{_id:this.state.test_id}\n        }).then((response)=>{\n        });\n    }\n    displayTestButton() {\n        if (this.state.test_id.length === 0) {\n            return (\n                <ButtonHelper\n                    {\n                        ...{\n                            name: 'validateTestCreation',\n                            value: 'Valider',\n                            className: \"form-helper-button success\",\n                        }\n                    }\n                    onClick={() => this.createNewTest()}\n                />\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: 'modifyTestButton',\n                                value: 'Modify',\n                                className: \"form-helper-button warning\",\n                            }\n                        }\n                        onClick={() => this.modifyTest()}\n                    />\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: 'newTestButton',\n                                value: 'NewTest',\n                                className: \"form-helper-button success\",\n                            }\n                        }\n                        onClick={() => this.setNewTest()}\n                    />\n                    <ButtonHelper\n                        {\n                            ...{\n                                name: 'deleteTestButton',\n                                value: 'Delete',\n                                className: \"form-helper-button danger\",\n                            }\n                        }\n                        onClick={() => this.deleteTest()}\n                    />\n                </React.Fragment>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className={'test-creation-header'}>\n\n                    {\n                        this.displayTestButton()\n                    }\n                    <h2>\n                        Création d'Un Test\n                    </h2>\n                    <InputTextHelper {...{\n                        name: \"testName\",\n                        placeholder: \"Titre Du Test\",\n                        className: \"form-helper-input test-title-input\"\n                    }}\n                                     onChange={(e) => {\n                                         this.handleTitleChange(e)\n                                     }}\n                    />\n                </div>\n                <div className={\"one-test-div\"}>\n                    <div className={\"mcqs-list\"}>\n                        <h3> Liste Des QCMs </h3>\n                        {\n                            this.state.mcqs.map((mcq, key) => {\n                                return (\n                                    <div className={'one-mcq-test-div'} key={key}\n                                         onClick={() => this.handleAddMCQS(mcq)}>\n                                        {this.displayOneMCQ(mcq)}\n                                    </div>\n                                );\n                            })\n                        }\n                    </div>\n                    <div className={\"selected-mcqs-list\"}>\n                        <h3> Liste Des QCMs Selectionnés </h3>\n                        {\n                            this.state.selectedmcqs.map((mcq, key) => {\n                                return (\n                                    <div className={'one-mcq-test-div'} key={key}\n                                         onClick={() => this.handleRemoveMCQS(mcq)}>\n                                        {this.displayOneMCQ(mcq)}\n                                    </div>\n                                );\n                            })\n                        }\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nclass TestComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalVisibility: false,\n            modalChildren: '',\n            reference: this.props.reference,\n            course_level: this.props.course_level,\n        }\n    }\n\n    buildTest() {\n        let dataObjet = {\n            reference: this.state.reference,\n            course_level: this.state.course_level\n        };\n        ServerService.postToServer('/mcquestions/getMCQsOfLevel', dataObjet).then((response) => {\n            if (response.status === 200) {\n                console.log(\"list of MCQs Founded \", response.data);\n                this.setState({\n                    modalChildren: <OneTest\n                        reference={this.state.reference}\n                        course_level={this.state.course_level}\n                        mcqs={response.data}\n                    />,\n                    modalVisibility: true,\n                });\n            } else {\n                alert(response.data.errorMessage);\n            }\n        });\n    }\n\n    handleClose() {\n        this.setState({\n            modalVisibility: false,\n            modalChildren: \"\"\n        });\n    }\n\n    listTests() {\n        this.setState({\n            modalChildren: <TestsList\n                reference={this.state.reference}\n                course_level={this.state.course_level}\n            />,\n            modalVisibility: true,\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <ModalComponent visible={this.state.modalVisibility}\n                                onClose={() => this.handleClose()}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n                <ButtonHelper\n                    {...{\n                        name: 'testConstructorButton',\n                        value: 'Produce A Test',\n                        className: \"form-helper-button warning produce-test-button\"\n                    }}\n                    onClick={() => this.buildTest()}\n                />\n                <ButtonHelper\n                    {...{\n                        name: 'testsViewButton',\n                        value: 'List of Tests',\n                        className: \"form-helper-button warning produce-test-button\"\n                    }}\n                    onClick={() => this.listTests()}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TestComponent;","import React, {Component} from 'react';\nimport './mcqsmanagercomponent.css';\nimport {ButtonHelper} from \"../HelperComponent/FormHelper\";\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport CourseNavigator from './CourseNavigator';\nimport {ServerService} from \"../../server/ServerService\";\nimport {ListMCQS, OneMCQ} from \"./MCQsComponent\";\nimport {OneTest, TestResult, TestsList} from \"./TestComponent\";\nimport {displayMessage, getDecodedToken} from \"../../server/axiosInstance\";\n\n\nclass PassedTests extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            tests:this.props.tests||[],\n            currentIndex:-1,\n            currentTest:\"\"\n        }\n    }\n\n    componentDidMount(){\n        if(this.props.tests.length>0){\n            let currentTest=this.state.tests[0].testResult;\n            let content=<TestResult {...currentTest} />;\n            this.setState({\n                currentIndex:0,\n                currentTest:content\n            });\n        }\n    }\n\n    async setCurrentTestNav(key){\n        let currentTest=this.state.tests[key].testResult;\n        let content=<TestResult {...currentTest} />;\n        await this.setState({\n            currentIndex:-1,\n            currentTest:\"\"\n        });\n        await this.setState({\n            currentIndex:key,\n            currentTest:content\n        });\n    }\n\n    passedTestsNav(){\n        let n=this.state.tests.length;\n        if(n>0){\n            return(\n                <div className={\"passed-tests-nav\"}>\n                    {\n                        this.state.tests.map((test,key)=>{\n                            if( this.state.currentIndex===key){\n                                return(\n                                    <div key={key} className={\"form-helper-button white-on-blue current-passed-test-nav\"}\n                                         onClick={()=>this.setCurrentTestNav(key)}\n                                    >\n                                        {key+1}\n                                    </div>\n                                );\n                            }else {\n                                return(\n                                    <div key={key} className={\"form-helper-button white-on-blue\"}\n                                         onClick={()=>this.setCurrentTestNav(key)}\n                                    >\n                                        {key+1}\n                                    </div>\n                                );\n                            }\n                        })\n                    }\n                </div>\n            );\n        }\n    }\n\n\n    render(){\n        return(\n            <div className={\"passed-tests-div\"}>\n                <h5>List of passed tests</h5>\n                {this.passedTestsNav()}\n                {this.state.currentTest}\n                </div>\n        );\n    }\n}\n\nclass MCQSManagerComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reference: 'none',\n            level: 'none',\n            selectedElement: {},\n            activityContent: ''\n        };\n    }\n\n    handleClose() {\n        this.setState({\n            modalVisibility: false,\n            modalChildren: \"\",\n        });\n    }\n\n    setSelectedElement(element, level) {\n        console.log(\"selected\", element, \" level \", level);\n        this.setState({\n            reference: element._id,\n            level: level,\n            selectedElement: element,\n            activityContent: \"\"\n        });\n    }\n\n    returnInfos() {\n        return (\n            <div className={'selected-course-infos'}>\n                {/*<span>\n                    <div>ref:<span>{this.state.reference}</span></div>\n                    <div>level:<span>{this.state.level}</span></div>\n                </span>*/}\n                <span>\n                    {this.state.selectedElement.title || \"\"}\n                </span>\n            </div>\n        );\n    }\n\n    newMCQ() {\n        this.setState({\n            activityContent: <OneMCQ reference={this.state.reference} course_level={this.state.level}/>\n        });\n    }\n\n    listMCQS() {\n        let dataObjet = {\n            reference: this.state.reference,\n            course_level: this.state.level\n        };\n        ServerService.postToServer('/mcquestions/getMCQsOfLevel', dataObjet).then((response) => {\n            if (response.status === 200) {\n                console.log(\"list of MCQs Founded \", response.data);\n                this.setState({\n                    activityContent: <ListMCQS\n                        reference={this.state.reference}\n                        course_level={this.state.course_level}\n                        mcqs={response.data}\n                    />,\n                });\n            } else {\n                alert(response.data.errorMessage);\n            }\n        });\n    }\n\n    newTEST() {\n        let dataObjet = {\n            reference: this.state.reference,\n            course_level: this.state.level\n        };\n        ServerService.postToServer('/mcquestions/getMCQsOfLevel', dataObjet).then((response) => {\n            if (response.status === 200) {\n                console.log(\"list of MCQs Founded \", response.data);\n                this.setState({\n                    activityContent: <OneTest\n                        reference={this.state.reference}\n                        course_level={this.state.level}\n                        mcqs={response.data}\n                    />,\n                });\n            } else {\n                alert(response.data.errorMessage);\n            }\n        });\n    }\n\n    listTESTS() {\n        console.log(\"selected element \", this.state.selectedElement);\n        this.setState({\n            activityContent:<TestsList reference={this.state.reference} course_level={this.state.level} />\n        });\n    }\n\n    showActivityContent() { return (this.state.activityContent); }\n\n    showPassedTests(){\n        ServerService.postToServer(\"/mcquestions/getPassedTests\",{user:getDecodedToken()}).then((response)=>{\n            if(response.status===200){\n                console.log(\"passed tests\",response.data);\n                if(response.data.length>0){\n                    this.setState({\n                        modalChildren:<PassedTests tests={response.data}/>,\n                        modalVisibility:true\n                    });\n                }else {\n                    displayMessage(\"No registered test !! \");\n                }\n            } else {\n                console.log(\"listing passed tests error \",response.data);\n            }\n        });\n\n    }\n    render() {\n        return (\n            <div className={\"mcqs-manager-container\"}>\n                <ModalComponent visible={this.state.modalVisibility} onClose={() => this.handleClose()}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n                <div className={\"right-nav-options hr-button-block \"}>\n                    <ButtonHelper {...{\n                        name:\"passedtests\",\n                        value:\"Realized tests\",\n                        className:\"form-helper-button white-on-blue\"\n                    }}onClick={()=>{this.showPassedTests()}}\n                    />\n                </div>\n\n                <div className={\"mcqs-manager-body\"}>\n                    <div className={\"location-div\"}>\n                        <CourseNavigator setSelectedElement={(element, level) => this.setSelectedElement(element, level)}/>\n                    </div>\n                    <div>\n                        <div className={\"div-options\"}>\n                            <div className={\"options-div\"}>\n                                <h3> MCQS Options</h3>\n                                <div className={\"hr-button-block\"}>\n                                    <ButtonHelper {...{\n                                        name: 'newmcq',\n                                        value: \"New MCQ\",\n                                        className: \"form-helper-button success\"\n                                    }} onClick={() => this.newMCQ()}\n                                    />\n                                    <ButtonHelper {...{\n                                        name: 'listmcqs',\n                                        value: \"List MCQs\",\n                                        className: \"form-helper-button success\"\n                                    }} onClick={() => this.listMCQS()}\n                                    />\n                                </div>\n                            </div>\n                            <div className={\"options-div\"}>\n                                <h3>TESTS Options</h3>\n                                <div className={\"hr-button-block\"}>\n                                    <ButtonHelper {...{\n                                        name: 'newtest',\n                                        value: \"New TEST\",\n                                        className: \"form-helper-button success\"\n                                    }} onClick={() => this.newTEST()}\n                                    />\n                                    <ButtonHelper {...{\n                                        name: 'listtests',\n                                        value: \"List TESTS\",\n                                        className: \"form-helper-button success\"\n                                    }} onClick={() => this.listTESTS()}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {this.returnInfos()}\n                        <div className={\"activity-div\"}>\n                            {this.showActivityContent()}\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default MCQSManagerComponent;\n\n\n\n\n\n","import React,{Component} from \"react\";\nimport \"./levels.css\";\nimport {levels} from \"../DataManagerComponent/DataModelsComponent\";\n\nclass Levels extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            levels:this.props.levels || []\n        }\n    }\n\n    removeLevel(e,level){\n        e.preventDefault();\n        this.props.removeLevel(level);\n    }\n\n    addLevel(e,level){\n        e.preventDefault();\n        this.props.addLevel(level);\n    }\n\n    displayLevels(){\n        return(\n            <div  className={\"levels-list\"}>\n\n                {\n                    levels.map((level,key)=>{\n                        if(this.props.levels.indexOf(level)>-1){\n                            return(\n                                <div key={key} className={\"unabled-level\"} onClick={(e)=>{this.removeLevel(e,level)}}>\n                                    {level}\n                                    </div>\n                            )\n                        }else {\n                            return(\n                                <div key={key} className={\"disabled-level\"}\n                                     onClick={(e)=>{this.addLevel(e,level)}}>\n                                    {level}\n                                    </div>\n                            )\n                        }\n                    })\n                }\n            </div>\n        )\n    }\n\n    render(){\n        return(\n            <div className={\"levels\"}>\n                <div></div>\n                {this.displayLevels()}\n            </div>\n        );\n    }\n\n}\n\n\nexport default Levels;\n\n\n","import React,{Component} from \"react\";\nimport \"./specialities.css\";\nimport {ServerService} from \"../../server/ServerService\";\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport {ButtonHelper, FormHelper} from \"../HelperComponent/FormHelper\";\nimport {specialitiesModel} from \"../DataManagerComponent/DataModelsComponent\";\nimport Levels from \"./Levels\";\n\n\nclass Speciality extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            _id: this.props.speciality._id,\n            label: this.props.speciality.label || \"\",\n            description: this.props.speciality.description || \"\",\n            department:this.props.speciality.department||\"\",\n            levels: this.props.speciality.levels || []\n        }\n    }\n\n    saveSpecialityModification(dataToSend) {\n        let data = this.state;\n        let params = {\n            collection: \"specialities\",\n            data: data,\n            update: dataToSend\n        };\n\n        ServerService.postToServer(\"crudOperations/update\", params).then(response => {\n            if (response.status === 200) {\n                this.setState({...dataToSend});\n                if (this.props.updateSpecialities) {\n                    this.props.updateSpecialities(dataToSend, \"update\");\n                }\n                this.props.closeModal();\n            } else {\n                console.log(\"response \", response);\n            }\n        });\n    }\n\n    modifySpeciality() {\n        let fields = [\n            {\n                name: \"label\",\n                type: 'text',\n                placeholder: 'Label',\n                label: 'Label',\n                required: true,\n                value: this.state.label || \"\"\n            },\n            {\n                name: \"description\",\n                type: 'textarea',\n                placeholder: 'Description',\n                label: 'Description',\n                value: this.state.description || \"\"\n            },\n        ];\n\n        let data = Object.assign({},specialitiesModel,{fields:fields});\n        data['fields'] = fields;\n        let content = <FormHelper data={data} modificationForm={true}\n                                  handleValidation={(data) => this.saveSpecialityModification(data)}/>;\n        this.props.openModal(content);\n    }\n\n    deleteSpeciality() {\n        console.log(\"about to delete\", this.state);\n        let data = this.state;\n        ServerService.postToServer(\"crudOperations/delete\", {collection: \"specialities\", data: data})\n            .then(response => {\n                if (response.status === 200) {\n                    if (this.props.updateSpecialities) {\n                        this.props.updateSpecialities(data, \"delete\");\n                    }\n                } else {\n                    console.log(\"response \", response);\n                }\n            });\n    }\n\n    displayOptions() {\n        return (\n            <React.Fragment>\n                <ButtonHelper {...{\n                    name: \"modifydepartment\",\n                    value: \"Modify Speciality\",\n                    className: \"form-helper-button warning\"\n                }} onClick={() => this.modifySpeciality()}/>\n\n                <ButtonHelper {...{\n                    name: \"deletedepartment\",\n                    value: \"Delete Speciality\",\n                    className: \"form-helper-button danger\"\n                }} onClick={() => this.deleteSpeciality()}/>\n\n            </React.Fragment>\n        )\n    }\n\n    removeLevel(level){\n        let levels=this.state.levels;\n        let newLevels=[];\n        if(levels.indexOf(level)>-1){\n            //delete(levels[levels.indexOf(level)]);\n            newLevels=levels.filter((value,index)=>{\n               return ((index!==levels.indexOf(level)) && (value!==null));\n            });\n            console.log(\"level after deletion : \",newLevels);\n            ServerService.postToServer(\"crudOperations/update\",{\n                collection:\"specialities\",\n                data:{_id:this.state._id},\n                update:{levels:newLevels}\n            }).then(response=>{\n                if(response.status===200){\n                    this.setState({\n                        levels:newLevels\n                    });\n                }else {\n                    console.log(\" update levels error : \",response.data);\n                }\n            });\n        }\n    }\n\n    addLevel(level){\n        let levels=this.state.levels;\n        if(levels.indexOf(level)=== -1){\n            levels.push(level);\n            ServerService.postToServer(\"crudOperations/update\",{\n                collection:\"specialities\",\n                data:{_id:this.state._id},\n                update:{levels:levels}\n            }).then(response=>{\n                if(response.status===200){\n                    this.setState({levels:levels});\n                }else {\n                    console.log(\" update levels error : \",response.data);\n                }\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"department-main\"}>\n                <h3>{this.state.label}</h3>\n                <p> {this.state.description}</p>\n                <div className={\"hr-button-block\"}>\n                    {this.displayOptions()}\n                    </div>\n                <div>\n                    <Levels\n                        levels={this.state.levels}\n                        addLevel={(level)=>this.addLevel(level)}\n                        removeLevel={(level)=>this.removeLevel(level)}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n}\n\nclass Specialities extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalChildren: \"\",\n            modalVisibility: false,\n            specialities: this.props.specialities||[],\n            department: this.props.department\n        }\n    }\n\n    updateSpecialities(element, action = \"\",key) {\n        let specialities = this.state.specialities;\n        if (action === \"update\") {\n            Object.assign(specialities[key],element);\n            this.setState({specialities: specialities});\n        } else if (action === \"delete\") {\n            delete specialities[key];\n            this.setState({specialities: specialities});\n        }\n    }\n\n    openModal(content) {\n        this.setState({\n            modalChildren: content,\n            modalVisibility: true\n        });\n    }\n\n    closeModal() {\n        this.setState({\n            modalChildren: \"\",\n            modalVisibility: false\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"specialities-main\"}>\n                <ModalComponent visible={this.state.modalVisibility} onClose={() => this.closeModal()}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n                <div className={\"specialities-div\"}>\n                    {\n                        this.state.specialities.map(\n                            (speciality, key) => {\n                                return (\n                                    <Speciality\n                                        key={key}\n                                        closeModal={()=>this.closeModal()}\n                                        openModal={(content)=>this.openModal(content)}\n                                        speciality={speciality}\n                                        updateSpecialities={\n                                            (element,action)=>this.updateSpecialities(element,action,key)\n                                        }\n\n                                    />);\n                            })\n                    }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Specialities;\n\n\n","import React, {Component} from \"react\";\nimport \"./departments.css\";\nimport {departmentsModel, specialitiesModel} from \"../DataManagerComponent/DataModelsComponent\";\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport {ButtonHelper} from \"../HelperComponent/FormHelper\";\nimport FormHelper from \"../HelperComponent/FormHelper\";\nimport {ServerService} from \"../../server/ServerService\";\nimport Specialities from \"./Specialities\";\n\n\nclass Department extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            detailsVisibility:false,\n            _id: this.props.department._id,\n            label: this.props.department.label || \"\",\n            description: this.props.department.description || \"\",\n            specialities: this.props.department.specialities || []\n        }\n    }\n\n    saveDepartmentModification(dataToSend) {\n        let data = this.state;\n        delete (data[\"modalChildren\"]);\n        delete (data[\"modalVisibility\"]);\n\n        let params = {\n            collection: \"departments\",\n            data: data,\n            update: dataToSend\n        };\n\n        ServerService.postToServer(\"crudOperations/update\", params).then(response => {\n            if (response.status === 200) {\n                this.setState({...dataToSend});\n                if (this.props.updateDepartments) {\n                    this.props.updateDepartments(dataToSend, \"update\");\n                }\n                this.props.closeModal();\n            } else {\n                console.log(\"response \", response);\n            }\n        });\n    }\n\n    modifyDepartment() {\n        let fields = [\n            {\n                name: \"label\",\n                type: 'text',\n                placeholder: 'Label',\n                label: 'Label',\n                required: true,\n                value: this.state.label || \"\"\n            },\n            {\n                name: \"description\",\n                type: 'textarea',\n                placeholder: 'Description',\n                label: 'Description',\n                value: this.state.description || \"\"\n            },\n        ];\n\n        let data = Object.assign({},departmentsModel,{fields:fields});\n        data['fields'] = fields;\n        let content = <FormHelper data={data} modificationForm={true} handleValidation={(data) => this.saveDepartmentModification(data)}/>;\n        this.props.openModal(content);\n    }\n\n    deleteDepartment() {\n        console.log(\"about to delete\", this.state);\n        let data = this.state;\n        delete (data[\"modalChildren\"]);\n        delete (data[\"modalVisibility\"]);\n\n        ServerService.postToServer(\"crudOperations/delete\", {collection: \"departments\", data: data})\n            .then(response => {\n                if (response.status === 200) {\n                    if (this.props.updateDepartments) {\n                        this.props.updateDepartments(data, \"delete\");\n                    }\n                } else {\n                    console.log(\"response \", response);\n                }\n            });\n    }\n\n    async saveNewSpeciality(data) {\n        console.log(\"new speciality params\", data);\n        Object.assign(data,{department:this.state._id});\n        await ServerService.insertElementInDataBase(\"specialities\", data);\n        console.log(\"speciality inserted \", data);\n        let specialities = this.state.specialities;\n        specialities.push(data);\n        this.setState({specialities: specialities});\n        this.props.closeModal();\n    }\n\n    newSpeciality() {\n        console.log(\"specialities model \",specialitiesModel);\n        let content = <FormHelper\n            data={specialitiesModel}\n            handleValidation={\n                (data) => this.saveNewSpeciality(data)\n            }\n        />;\n        this.props.openModal(content);\n    }\n\n    displayOptions() {\n        return (\n            <React.Fragment>\n                <ButtonHelper {...{\n                    name: \"modifydepartment\",\n                    value: \"Modify Department\",\n                    className: \"form-helper-button warning\"\n                }} onClick={() => this.modifyDepartment()}/>\n\n                <ButtonHelper {...{\n                    name: \"newdepartment\",\n                    value: \"+ Speciality\",\n                    className: \"form-helper-button success\"\n                }} onClick={() => this.newSpeciality()}\n                />\n\n                <ButtonHelper {...{\n                    name: \"deletedepartment\",\n                    value: \"Delete Department\",\n                    className: \"form-helper-button danger\"\n                }} onClick={() => this.deleteDepartment()}/>\n            </React.Fragment>\n        )\n    }\n\n    displayDetails(){\n\n        if(this.state.detailsVisibility){\n            return(\n                <React.Fragment>\n                    <h3>  Département de (Department Of ) : {this.state.label}</h3>\n                    <p> {this.state.description}</p>\n\n                    <div className={\"department-specialities\"}>\n                        <div className={\"hr-button-block\"}>\n                            {this.displayOptions()}\n                        </div>\n                        <div>\n                            <h4>Spécialities</h4>\n                            <Specialities department={this.state._id} specialities={this.state.specialities}/>\n                        </div>\n                    </div>\n                </React.Fragment>\n            )\n        }else {\n            return(\"\");\n        }\n    }\n\n    handleShowDetails(){\n        ServerService.postToServer(\"/crudOperations/get\",\n            {\n                collection:\"specialities\",\n                options:{queries:{department:this.state._id}}\n            }).then((response) => {\n            if (response.status === 200) {\n                console.log(\"specialities \", response.data);\n                this.setState({\n                    specialities: response.data,\n                    detailsVisibility:!this.state.detailsVisibility\n                });\n            } else {\n                console.log(response.data.errorMessage || \"\");\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"department-main\"}>\n                <div className={\"department-item\"} id={this.state._id} onClick={()=>this.handleShowDetails()}>\n                 {this.state.label}\n                </div>\n                <div>\n                    {this.displayDetails()}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Departments extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalChildren: \"\",\n            modalVisibility: false,\n            departments: [],\n            department: \"\"\n        }\n    }\n\n     componentDidMount() {\n         ServerService.postToServer(\"crudOperations/get\", {collection: \"departments\"}).then(response => {\n            if (response.status === 200) {\n                console.log(\"departments \", response.data);\n                this.setState({departments: response.data});\n            } else {\n                console.log(response.data.errorMessage || \"\");\n            }\n        });\n    }\n\n    updateDepartments(element=\"\", action = \"\",key) {\n        console.log(\"will  \"+action, this.state);\n        let departments = this.state.departments;\n        if (action === \"update\") {\n            Object.assign(departments[key],element);\n            this.setState({departments: departments});\n        } else if (action === \"delete\") {\n            console.log(\"deletion of department\");\n            delete departments[key];\n            this.setState({departments: departments});\n        }\n\n    }\n\n    async saveNewDepartment(data) {\n        console.log(\"new department params\", data);\n        await ServerService.insertElementInDataBase(\"departments\", data);\n        console.log(\"department inserted \", data);\n        let departments = this.state.departments;\n        departments.push(data);\n        this.setState({departments: departments});\n        this.closeModal();\n    }\n\n    openModal(content) {\n        this.setState({\n            modalChildren: content,\n            modalVisibility: true\n        });\n    }\n\n    closeModal() {\n        this.setState({\n            modalChildren: \"\",\n            modalVisibility: false\n        });\n    }\n\n    newDepartment() {\n        let content = <FormHelper data={departmentsModel} handleValidation={(data) => this.saveNewDepartment(data)}/>;\n        this.openModal(content);\n    }\n\n    handleDepNavClick(dep_id){\n        window.scrollTo(0,document.getElementById(dep_id).offsetTop);\n    }\n\n    displayNavPanel(){\n        return(\n          <div className={\"department-nav-panel\"}>\n              <h3 className={\"nav-dep-title\"}>Departments</h3>\n              {\n                  this.state.departments.map((department,key)=>{\n                      return(\n                          <div key={key} className={\"department-nav-item\"} onClick={()=>this.handleDepNavClick(department._id)}>{department.label}</div>\n                      )\n                  })\n              }\n          </div>\n        );\n    }\n\n    listDepartments(){\n       return this.state.departments.map((department, key) => {\n            return (\n                <Department\n                    key={key}\n                    department={department}\n                    openModal={(content)=>this.openModal(content)}\n                    closeModal={()=>this.closeModal()}\n                    updateDepartments={\n                        (element=\"\",action=\"\")=>this.updateDepartments(element,action,key)\n                    }\n                />\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"departments-main\"}>\n                <ModalComponent visible={this.state.modalVisibility} onClose={() => this.closeModal()}>\n                    {this.state.modalChildren}\n                </ModalComponent>\n                {this.displayNavPanel()}\n                <div>\n                    <h3> List Of Departments</h3>\n                    <ButtonHelper {...{\n                        name: \"newdepartment\",\n                        value: \"+ Department\",\n                        className: \"form-helper-button success\"\n                    }} onClick={() => this.newDepartment()}\n                    />\n                </div>\n\n                <div className={\"departments-list-div\"}>\n                    { this.listDepartments()}\n                    </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Departments;\n\n\n","import React,{Component} from \"react\";\nimport \"./coursesadministration.css\";\nimport Departments from \"./Departments\";\n\n\nclass CoursesAdministration extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n\n        }\n    }\n    render(){\n        return(\n            <div className={\"courses-administration-main-div\"}>\n                <div> <h3>Courses Administration</h3></div>\n                <Departments/>\n            </div>\n        );\n    }\n}\n\nexport default CoursesAdministration;\n\n\n","import React,{Component} from 'react';\nimport './contactsadministration.css';\nimport {ServerService} from \"../../server/ServerService\";\nimport {ButtonHelper} from \"../HelperComponent/FormHelper\";\nimport QuillComponent from \"../DanielComponent/QuillComponent/QuillComponent\";\nimport ModalComponent from \"../DanielComponent/Modal/ModalComponent\";\nimport ReactQuill from 'react-quill';\n\nfunction displayContent(content) {\n    return (<ReactQuill value={content || \"\"} modules={{toolbar: false}}  readOnly={true}/>);\n}\n\n\n\nclass ContactsAdministration extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            messages:[],\n            selectedMessage:{},\n            modalChildren:\"\",\n            modalVisibility:false\n        }\n    }\n    componentDidMount(){\n        ServerService.postToServer(\"crudOperations/get\",{\n            collection:\"messages\",\n        }).then((response)=>{\n            if(response.status===200){\n                console.log(\"messages\",response.data);\n                this.setState({messages:response.data});\n            }else{\n                console.log(response.data.errorMessage)\n            }\n        });\n    }\n\n    openModal(content){\n        this.setState({\n            modalChildren:content,\n            modalVisibility:true\n        });\n    }\n    closeModal(){\n        this.setState({\n            modalChildren:\"\",\n            modalVisibility:false\n        });\n    }\n    async deleteMessage(message,key){\n        await ServerService.postToServer(\"crudOperations/delete\",{\n                collection:\"messages\",\n                data:{_id:message._id}\n            }).then(response=>{\n                if (response.status===200){\n                    this.setState({\n                        messages:this.state.messages.filter((message,index)=>{\n                            return index!==key\n                        })\n                    })\n                }\n\n        });\n    }\n\n    handleReplyValidation(message,reply,key){\n        console.log(\"reply validated data\",reply);\n        if(reply.text.length>3){\n            ServerService.postToServer(\"/contacts/reply\",{\n                message:message,\n                reply:reply.text,\n            }).then((response)=>{\n               if(response.status===200){\n                   console.log(\"operation done with success\");\n                   let replies=message.replies||[];\n                   replies.push(reply.text);\n                   message['replies']=replies;\n                  let messages=this.state.messages;\n                  messages[key]=message;\n                  this.setState({messages:messages});\n               }else {\n                   console.log(\"operation failed\",response);\n               }\n            });\n        }\n    }\n\n    handleReply(message,key){\n        let content=<QuillComponent onValidate={(reply)=>this.handleReplyValidation(message,reply,key)}/>\n        this.openModal(content);\n    }\n\n    displayReplies(message){\n        let content=message.replies.map((reply,key)=>{\n            return(<div className={\"message-reply-div\"} key={key}>{reply}</div>);\n        });\n        this.openModal(<div className={\"message-replies\"}> {content} </div>);\n    }\n\n    returnOptions(message,key){\n        return(\n            <div className={\"hr-button-block\"}>\n                <ButtonHelper{...{\n                    name:\"\",\n                    value:\"Reply\",\n                    className:\"form-helper-button success\"\n                }} onClick={()=>this.handleReply(message,key)}\n                />\n                {\n                    message.hasOwnProperty(\"replies\") ?\n                        <ButtonHelper{...{\n                            name:\"\",\n                            value:\"Replies View\",\n                            className:\"form-helper-button white-on-blue\"\n                        }} onClick={()=>this.displayReplies(message)}\n                        />\n\n                        : \"\"\n                }\n                <ButtonHelper{...{\n                        name:\"\",\n                        value:\"delete\",\n                        className:\"form-helper-button danger\"\n                    }} onClick={()=>this.deleteMessage(message,key)}\n                />\n            </div>\n        );\n    }\n\n    showMessages(){\n        if(this.state.messages.length>0){\n            return(\n                <div className={\"messages-list-div\"}>\n                    <div className={\"messages-list-title\"}>Messages</div>\n                    {\n                        this.state.messages.map((message,key)=>{\n                            return (\n                                <div key={key} className={\"contact-message-item\"}>\n                                    {displayContent(message.message)}\n                                    <div className={\"options\"}>\n                                        {this.returnOptions(message,key)}\n                                    </div>\n                                 </div>\n                            );\n                        })\n                    }\n                </div>\n            );\n        }else {\n            return \"\";\n        }\n    }\n\n    render(){\n        return(\n            <div className={\"contacts-administration-main-div\"}>\n                <ModalComponent\n                    visible={this.state.modalVisibility}\n                    onClose={()=>this.closeModal()}\n                >\n                    {this.state.modalChildren}\n                    </ModalComponent>\n                <h3>Consultations and Replies to Users Messages</h3>\n                {this.showMessages()}\n            </div>\n        );\n    }\n}\nexport default ContactsAdministration;","import React, { Component } from 'react';\nimport './App.css';\nimport './basics.css';\nimport NavBar from './components/NavbarComponent/NavBar';\nimport {Route} from 'react-router-dom';\nimport Welcome from './components/WelcomeComponent/Welcome';\nimport Courses from './components/CoursesComponent/Courses';\nimport Course from './components/CoursesComponent/Course';\nimport ConnexionComponent from './components/ConnexionComponent/ConnexionComponent';\nimport ContactsComponent from './components/ContactsComponent/ContactsComponent';\nimport Users from './components/UsersComponent/Users';\nimport UserProfile from './components/UsersComponent/UserProfile';\nimport DataManagerPage from './components/DanielComponent/DataManagerPage/DataManagerPage';\nimport {usersModel} from './components/DataManagerComponent/DataModelsComponent';\nimport {getDecodedToken, userLogged$,messageToShow$ ,urlRedirection$} from './server/axiosInstance';\nimport ModalComponent, { ModalComponent2 } from './components/DanielComponent/Modal/ModalComponent';\nimport MCQSManagerComponent from './components/MCQsComponent/MCQSManagerComponent';\nimport CourseCreation from './components/CoursesComponent/CourseCreation';\nimport CoursesAdministration from \"./components/CoursesAdministrationComponent/CoursesAdministration\";\nimport ContactsAdministration from \"./components/ContactsComponent/ContactsAdministration\";\n\n\nimport history from './history';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        userLogged$.subscribe(bool => {this.handleUserLogin(bool)});\n        messageToShow$.subscribe(message => {this.handleMessageToShow(message)});\n        urlRedirection$.subscribe(url=>this.handleRedirection(url));\n        this.state = {\n            menuOpen: false,\n            loggedIn: false,\n            messageModalVisibility: false,\n            messageToShow: '',\n        };\n    }\n\n    handleUserLogin(bool){\n        this.setState({loggedIn: bool});\n        if(bool===false){\n\n        }\n    }\n\n\n    handleRedirection(url=null){\n        if(url){\n            history.push(url);\n        }\n    }\n\n    handleMessageToShow(message){\n        this.setState({\n            messageModalVisibility: true,\n            messageToShow: message,\n        });\n        setTimeout(()=>this.closeModal(),2000);\n    }\n\n    openMenu() {\n        this.setState({menuOpen: true});\n    }\n\n    closeMenu() {\n        this.setState({menuOpen: false});\n    }\n    closeModal(){\n        this.setState({\n            messageModalVisibility: false,\n            messageToShow: '',\n        })\n    }\n    componentDidMount(){\n        if(getDecodedToken()){\n            this.setState({ loggedIn:true });\n        }else {\n            console.log(\"current history \", history ,\" and props \", this.props);\n            this.handleRedirection('/welcome');\n        }\n    }\n    render() {\n        return (\n            <div className=\"App\" onClick={() => this.closeMenu()}>\n                <ModalComponent\n                    visible={this.state.messageModalVisibility}\n                    onClose={()=>this.closeModal()}\n                    position={25}\n                >\n                    <div style={{color: 'black'}}>{this.state.messageToShow}</div>\n                </ModalComponent>\n                <nav>\n                    <span className='sm-only  '\n                              onClick={e => {\n                                  this.setState({menuOpen: !this.state.menuOpen});\n                                  e.stopPropagation();\n                              }}>\n                        </span>\n                    <NavBar loggedIn={this.state.loggedIn}/>\n                </nav>\n                <aside className={this.state.menuOpen ? 'menu-open' : 'menu-closed'}>\n\n                </aside>\n                <main className={' container ' + (this.state.menuOpen ? 'menu-open' : 'menu-closed')}>\n                    <Route exact path='/' component = {Welcome}/>\n                    <Route path='/welcome' component = {Welcome}/>\n                    <Route exact path='/courses'  render={(props) => <Courses {...props} loggedIn={this.state.loggedIn}/>}/>\n                    <Route path='/course/:id' component = {Course}/>\n                    <Route exact path='/courses/administration' component={CoursesAdministration}/>\n                    <Route path='/users' component = {Users}/>\n                    <Route path={\"/profile\"} component={UserProfile}/>\n                    <Route exact path='/contacts' component = {ContactsComponent}/>\n                    <Route exact path='/contacts/administration' component = {ContactsAdministration}/>\n                    <Route path='/connexion' component = {ConnexionComponent}/>\n                    <Route path='/daniel' render={(props) => <DataManagerPage {...props} {...usersModel} collection='users'/>}/>\n                    <Route path='/createcourse' component ={CourseCreation}/>\n                    <Route path='/mcqs' component={MCQSManagerComponent}/>\n\n                </main>\n                <footer>\n                </footer>\n                <ModalComponent2/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router} from 'react-router-dom';\nimport history from './history';\nReactDOM.render(\n    <Router history={history}>\n        <App/>\n    </Router>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}